{"meta":{"title":"欣のblog","subtitle":"","description":"","author":"John Doe","url":"https://1578536879.github.io","root":"/"},"pages":[],"posts":[{"title":"维生素","slug":"营养学/【营养学基础】维生素合集","date":"2024-04-09T13:16:16.712Z","updated":"2024-06-14T07:50:22.168Z","comments":true,"path":"2024/04/09/营养学/【营养学基础】维生素合集/","permalink":"https://1578536879.github.io/2024/04/09/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E7%BB%B4%E7%94%9F%E7%B4%A0%E5%90%88%E9%9B%86/","excerpt":"","text":"维生素不是构成身体组织原料，也不是能量来源，是一类生理调节物质，在代谢中起重要作用 体内不能&#x2F;很少合成，必须由食物提供 分类 水溶性 在体内少量存储，缺乏不足易出现缺乏症 维生素 B1（硫胺素，抗脚气病因子） 酸性稳定 维生素 B2（核黄素，维生素 PP，尼克酸， 抗赖皮病因子） 烟酸 维生素 B6（吡哆酸，抗皮炎维生素，泛酸，遍多酸，生物素，） 叶酸 维生素 B12（钴胺素，抗恶性贫血维生素） 维 C（100mg） 脂溶性 大部分存储在脂肪中，过量摄入会导致中毒 维生素 A（视黄醇） 维生素 D（钙化醇， 抗佝偻病维生素，10ug） 维生素 E（生育酚，抗不育维生素） 维生素 K（凝血维生素） 维生素A包括维A1、A2 维A原：分解形式形成维A的类胡萝卜素 理化性质 溶于脂肪，不溶于水 酸、热、碱稳定，易氧化破坏 食物中含磷脂、维E、抗坏血酸或其他抗氧化剂时非常稳定 功能 视觉 上皮组织和细胞健康 骨骼生长发育 促进生长生殖 其他：防癌、抗氧化、提高免疫力 缺乏 原因 摄入不足 吸收利用障碍：慢性消化道疾病（慢性腹泻、肝胆疾病等 需要量增加：生长发育、重体力劳动者、急慢性消耗性疾病、传染病 代谢障碍：甲状腺功能低下，糖尿病 营养素影响：蛋白质、Zn缺乏 其他：酗酒、药物影响（消胆胺、新霉素、秋水仙碱） 表现 视力 暗适应能力下降，眼干燥症，夜盲，角膜软化（最早症状），失明 皮肤 干燥、蟾皮症 骨骼 儿童骨组织停止生长，发育迟缓，牙龈增生角质，牙齿生长缓慢 生殖系统 女性受孕和怀胎或导致婴儿畸形或死亡，男性精子减少，性激素合成障碍 免疫功能低下 儿童反复呼吸道感染和腹泻 预防 摄入维A及β-胡萝卜素丰富食物 检测易感人群（婴幼儿、孕妇乳母、儿童）维A状况 进行干预：视黄醇制剂，维A强化食品 过量 急性中毒 婴幼儿慢性中毒 皮肤干粗&#x2F;薄而发亮 脂溢性皮炎 唇及口角皲裂 骨痛 毛发稀少。干枯 影响吸收因素 小肠中的胆汁 乳化维A必须 足量脂肪促进 抗氧化剂 矿物油及肠道寄生虫的存在不利于吸收 视黄醇活性当量ugRAE 膳食或食物中的视黄醇活性当量ugRAE&#x3D;全反式视黄醇（ug）+1&#x2F;2补充剂纯品反式β-胡萝卜素（ug）+1&#x2F;12膳食全反式β-胡萝卜素（ug）+1&#x2F;24其他膳食维A原胡萝卜素（yg） 来源 维A 动物肝脏，动物肉、鱼油、全奶、蛋黄等 β-胡萝卜素 植物性、有色蔬菜和水果 测定 眼结膜印迹细胞学法 血清视黄醇（0.7umol&#x2F;g 0.35umol&#x2F;g 生理盲点 暗适应能力 维生素D 维D原 皮肤7-脱氧胆固醇-》D3 植物麦角固醇 -》D2 肝脏 25-OH-D3 -》第一次羟化 肾脏 1,25-(OH)2-D3 -》第二次羟化 活性形式 理化性质 溶于脂肪 不溶于水 热碱稳定 功能 促进小肠黏膜对Ca吸收 促进肾小管对Ca、P重吸收 促进骨组织软化 缺乏 婴幼儿佝偻病 神经精神状况：多汗、夜惊、枕秃 骨骼：颅骨软化，肋骨串珠，胸廓串珠 其他：发育不良，神情呆滞、呼吸运动限制、易继发性肺部感染和消化功能障碍 判断 血清25-(OH)D3水平 X射线检查 成人骨软化病 肌无力、骨痛、骨压痛、步态特殊，”鸭步“ 判断标准 骨质软化，骨样组织增生，骨骼变形 预防 系统管理 综合防治 因地制宜 早治早防 来源 太阳皮肤，取决于照射皮肤面积，照射时长，程度 脂肪含量高的海鱼、肝脏、蛋黄； 奶油、干酪、天然浓缩鱼油 维E理化性质 有8种化合物，α-生育酚 热、光、碱稳定 功能 抗氧化 保持红细胞活性 调节体内某些物质活性 其他 膳食中α-TE当量 膳食中α-TE当量&#x3D;1*α-生育酚（mg）+ 0.5 *β-生育酚（mg）+ 0.1 * γ-生育酚 + 0.02 * δ-生育酚 + 0.3 * 三烯生育酚 来源 只能在植物种合成 麦胚、向日葵及其油富含α-生育酚 维K理化性质 常温下黄色油状物，其衍生物为黄色结晶 溶于脂肪 光、热敏感，热氧化剂稳定 功能 血液凝固 骨代谢 辅酶 作为骨质疏松预判指标 缺乏 很少缺乏，新生儿出血症 来源 绿色蔬菜（最多 肝脏、鱼类 肉、乳（中等含量 水果、谷物 维C理化性质 易溶于水，不溶于脂肪 酸性稳定，有氧、碱、热、光不稳定 氧化酶、痕量铜、Fe存在，氧化破坏 黄瓜、白菜氧化酶多，但不稳定 枣、刺梨中含生物类黄酮，稳定 功能 羟化反应 酶的辅助酶 促进胶原合成，神经递质合成 类固醇羟化，有机物或毒物羟化解读 还原作用 促进抗体合成 Fe吸收，四氢叶酸形成 维持疏基酶形成 其他 解毒 预防癌症 消除自由基 缺乏 原因 摄入降低 吸收率降低 需要量升高 药物 表现 面色苍白，倦怠无力，食欲减退，抑郁等 儿童易激惹，体重不增，水肿，发热 贫血 出血症状：皮肤瘀点为较突出症状，牙龈出现，鼻出血 骨骼：四肢疼痛呈蛙状，坏血性串珠 判断标准-典型症状 毛细血管脆性实验 血浆及白细胞中维C含量测定 维C尿负荷实验 治疗实验 预防 摄入富含维C的蔬果 合理烹调（加碱被破坏 定期监测 来源 新鲜蔬果 维B1理化性质 极溶于水，1%溶于乙醇，不溶于其他有机溶剂 耐酸不耐碱 功能 构成辅酶，维持体内正常代谢 硫胺素焦磷酸（TPP）是活性形式 促进肠胃蠕动 抑制胆碱酯酶对乙酰胆碱水解 对神经组织作用 缺乏 原因 摄入减少（谷类淘洗次数过多，或者加碱 利用率低 需要量&#x2F;消耗量增加 抗硫胺素因子 慢性乙醇中毒导致吸收减少 表现 亚临床型（3个月 疲乏无力，烦躁不安，易激动，肠胃功能紊乱，下肢倦怠酸痛 神经型 主累及肢体远端，下肢发病比上肢早，呈上升性，对称性感觉异常早于运动异常 病情加重烦躁不安，声音嘶哑 韦尼克脑病 心血管型 以右心为主的左右心室衰竭，常见症状为水肿 婴儿脚气病：多发于数月婴幼儿，发病急 初期食欲不振，呕吐，兴奋，腹痛便秘，水肿，呼吸急促困难 喉鸣，晚期发绀，心力衰竭，肺充血及肝淤血 严重时脑充血，脑高压，强直痉挛，昏迷甚至死亡 预防 改善谷类加工方法，调整饮食结构 开展易感人群监测 开展健康活动 B1强化食品 来源 瓜子、花生 小麦粉、大豆粉、玉米等谷类 瘦猪肉 鱼、蔬果少 维B2理化性质 在酸性&#x2F;中性环境中，短期加盐不被破坏 碱性加热不稳定 热稳定，光敏感 功能 构成黄酶、辅酶，参与物质代谢 参与细胞正常生长 其他：肾上腺皮质激素的产生，骨髓中红细胞生成及Fe吸收，储存 缺乏 原因 摄入减少 吸收障碍 需要&#x2F;消耗量增加 表现 视觉 视线模糊、畏光、暗适应能力下降 视力疲劳，角膜充血，流泪 口角炎，舌（地图舌）唇炎、脂溢性皮炎 阴囊、阴唇炎，脱发 口腔-生殖综合征 预发 摄入增加，改善烹饪方法 开展活动 营养干预 来源 动物肝脏 蛋黄、牛奶 大豆、绿叶蔬菜 维B6空肠吸收 理化性质 酸、氧稳定 碱不稳 功能 氨基酸代谢 糖原与脂肪代谢 其他：降低同型半胱氨酸水平，核酸代谢 缺乏 脂溢性皮炎 小细胞性贫血 癫病样惊厥及忧郁，精神错乱 来源 豆、畜肉、肝脏、鱼 蛋、蔬果 乳、油少 烟酸理化性质 溶于水、乙醇 酸、碱、氧不易破坏 功能 构成辅酶 葡萄糖耐药因子构成成分（Cr 保护心血管 缺乏 赖皮病，3D症状 皮炎、腹泻、痴呆 前驱症状：体重降低，疲乏无力，记忆力降低，失眠 烟酸当量 mgNE mgNE&#x3D;烟酸mg+1&#x2F;60色氨酸mg 来源 肝肾、瘦畜肉，鱼类、坚果含量高 玉米 含量不低，但是是结合性烟酸（加碱变为游离型） 不易被人体利用吸收，色氨酸含量低 叶酸理化性质 微溶于水，钠盐易溶解 不溶于乙醇、乙醚 热、光、酸不稳定 碱、中性中对热稳定 生理功能 参与嘌呤和胸腺嘧啶的合成，进一步合成DNA、RNA 参与氨基酸之间的转换 参与血红蛋白和重要化合物合成 如肾上腺素、肌酸、胆碱等 缺乏 原因 摄入减少 消化吸收、利用率低 需要&#x2F;消耗量增加 排除量增加 表现 巨幼红细胞贫血 高同型半胱氨酸血症 胎儿神经异常 预防 一般人群注意食物多样，平衡膳食 妊娠妇女从围孕期开始补充 叶酸当量 ugDEF ugDEF&#x3D;膳食叶酸ug（50%利用率+1.7*叶酸补充剂（85%利用率 来源 动物肝肾 鸡蛋、豆类 酵母 绿叶菜，水果，坚果 维B12（钴胺素、氰钴胺理化性质 弱酸稳定，强酸&#x2F;碱性易分解 活性形式 甲基B12（甲基钴胺素 辅酶B12（腺苷基钴胺素 功能 参与同型半胱氨酸甲基转变为蛋氨酸：甲基B12 参与甲基丙二酸 琥珀酸的异化反应 缺乏 高同型半胱氨酸血症 巨幼红细胞贫血 来源 肉、内脏、鱼、禽、贝类、蛋 乳（少 植物几乎不含","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"axios取消请求原理","slug":"【源码】axios-取消请求","date":"2024-03-25T07:29:33.336Z","updated":"2024-04-07T03:39:15.509Z","comments":true,"path":"2024/03/25/【源码】axios-取消请求/","permalink":"https://1578536879.github.io/2024/03/25/%E3%80%90%E6%BA%90%E7%A0%81%E3%80%91axios-%E5%8F%96%E6%B6%88%E8%AF%B7%E6%B1%82/","excerpt":"","text":"使用方法1234567891011121314151617const CancelToken = axios.CancelToken;const source = CancelToken.source();axios .get(&quot;/get/server&quot;, &#123; cancelToken: source.token, &#125;) .catch(function (err) &#123; if (axios.isCancel(err)) &#123; console.log(&quot;请求取消&quot;, err.message); &#125; else &#123; // handle error &#125; &#125;);// 取消函数。source.cancel(&quot;调用cancel方法&quot;); 取消类CancelToken123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117// /lib/cancel/CancelToken.jsfunction CancelToken(executor) &#123; // executor传入的函数，参数是取消函数，调用这个参数可以直接取消请求 if (typeof executor !== &quot;function&quot;) &#123; throw new TypeError(&quot;executor must be a function.&quot;); &#125; var resolvePromise; // 实例化一个Promise this.promise = new Promise(function promiseExecutor(resolve) &#123; resolvePromise = resolve; &#125;); var token = this; // 如果执行了取消，那么就执行监听取消的函数 this.promise.then(function (cancel) &#123; if (!token._listeners) return; var i; var l = token._listeners.length; // 循环执行 for (i = 0; i &lt; l; i++) &#123; token._listeners[i](cancel); &#125; token._listeners = null; &#125;); // 这个没有在axios里面看到使用过，猜测应该是之前老axios遗留代码 this.promise.then = function (onfulfilled) &#123; var _resolve; var promise = new Promise(function (resolve) &#123; token.subscribe(resolve); _resolve = resolve; &#125;).then(onfulfilled); promise.cancel = function reject() &#123; token.unsubscribe(_resolve); &#125;; return promise; &#125;; // 执行传入的函数，当source.cancel时，就执行这个回调 executor(function cancel(message) &#123; // 如果已经有reason，那么表示是已经取消请求了 if (token.reason) &#123; return; &#125; // 把CanceledError实例作为一个reason，并且把message作为reason的message token.reason = new CanceledError(message); // 执行this.promise.then()的回调 resolvePromise(token.reason); &#125;);&#125;/** * 判断是否已经取消，因为只有reason有值时，才表示已经取消请求了 * 如果已经取消请求，那么直接抛出错误，走入catch */CancelToken.prototype.throwIfRequested = function throwIfRequested() &#123; if (this.reason) &#123; throw this.reason; &#125;&#125;;/** * 添加取消监听函数 */CancelToken.prototype.subscribe = function subscribe(listener) &#123; // 如果已经执行取消，那么就直接执行监听函数 if (this.reason) &#123; listener(this.reason); return; &#125; // 将监听函数加入数组中 if (this._listeners) &#123; this._listeners.push(listener); &#125; else &#123; this._listeners = [listener]; &#125;&#125;;/** * 删除监听函数 */CancelToken.prototype.unsubscribe = function unsubscribe(listener) &#123; if (!this._listeners) &#123; return; &#125; var index = this._listeners.indexOf(listener); if (index !== -1) &#123; this._listeners.splice(index, 1); &#125;&#125;;/** * Returns an object that contains a new `CancelToken` and a function that, when called, * cancels the `CancelToken`. * 调用创建取消token的函数，返回一个对象，包含一个取消token和一个取消函数 * token是返回的函数实例，即可以直接访问函数内部 * cancel是在CancelToken里面执行executor时，里面包裹的回调函数 */CancelToken.source = function source() &#123; var cancel; // 创建一个实例 var token = new CancelToken(function executor(c) &#123; cancel = c; &#125;); // 返回实例和取消调用的函数 return &#123; token: token, cancel: cancel, &#125;;&#125;;module.exports = CancelToken; 取消调用流程以下是以浏览器的流程为示例 dispatchRequest中判断一次此请求是否确认取消 1234567891011// /lib/core/dispatchRequest.jsfunction throwIfCancellationRequested(config) &#123; // 如果有cancelToken，那么表示这个请求是可被取消的，调用cancelToken的请求取消报错即可结束 if (config.cancelToken) &#123; config.cancelToken.throwIfRequested(); &#125; if (config.signal &amp;&amp; config.signal.aborted) &#123; throw new CanceledError(); &#125;&#125; 在 xhr 文件中，进行取消监听函数的添加 1234567891011121314151617181920212223// 如果配置列表里有cancelToken，那么表示需要走取消监听// /lib/adapters/xhrif (config.cancelToken || config.signal) &#123; // 取消函数的回调 onCanceled = function(cancel) &#123; // 如果这个请求已经进行完成了,那么就不走后面的函数 if (!request) &#123; return; &#125; // 如果这个请求还没有结束或者取消,那么就使请求回调走入catch中 reject(!cancel || (cancel &amp;&amp; cancel.type) ? new CanceledError() : cancel); // 取消请求.调用xhr的取消 request.abort(); // 表明请求已经结束,防止重复取消 request = null; &#125;; // 如果有cancelToken,那么就添加取消函数 config.cancelToken &amp;&amp; config.cancelToken.subscribe(onCanceled); // 这个是针对于fetch的取消处理 if (config.signal) &#123; config.signal.aborted ? onCanceled() : config.signal.addEventListener(&#x27;abort&#x27;, onCanceled); &#125;&#125; onCanceled这个函数的执行是在调用source.cancel()执行的 请求结束后,在 xhr 的onloadend&#x2F;onreadystatechange也进行了处理 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051// 请求结束之后的回调,不管是失败还是成功都会执行function done() &#123; // 如果有cancelToken,那么就取消监听订阅的这个函数 if (config.cancelToken) &#123; config.cancelToken.unsubscribe(onCanceled); &#125; // fetch则是取消监听取消的函数 if (config.signal) &#123; config.signal.removeEventListener(&quot;abort&quot;, onCanceled); &#125;&#125;if (&quot;onloadend&quot; in request) &#123; // Use onloadend if available request.onloadend = onloadend;&#125; else &#123; setTimeout(onloadend);&#125;function onloadend() &#123; // 如果请求已经取消,那么直接结束就行 if (!request) &#123; return; &#125; var responseHeaders = &quot;getAllResponseHeaders&quot; in request ? parseHeaders(request.getAllResponseHeaders()) : null; var responseData = !responseType || responseType === &quot;text&quot; || responseType === &quot;json&quot; ? request.responseText : request.response; var response = &#123; data: responseData, status: request.status, statusText: request.statusText, headers: responseHeaders, config: config, request: request, &#125;; // 用请求结果去进行判断 settle( function _resolve(value) &#123; resolve(value); done(); &#125;, function _reject(err) &#123; reject(err); done(); &#125;, response );&#125; 123456789101112131415161718192021222324// /lib/core/settle.jsfunction settle(resolve, reject, response) &#123; var validateStatus = response.config.validateStatus; // 如果请求返回状态是合理的,那么就直接resolve if ( !response.status || !validateStatus || validateStatus(response.status) ) &#123; resolve(response); &#125; else &#123; reject( new AxiosError( &quot;Request failed with status code &quot; + response.status, [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][ Math.floor(response.status / 100) - 4 ], response.config, response.request, response ) ); &#125;&#125; 请求结束后,在dispatchRequest中,也有相对于取消请求的处理 其实和开始请求之前的逻辑一样 123return adapter(config).then(function onAdapterResolution(response) &#123; throwIfCancellationRequested(config);&#125;); 总结: 对于请求开始前和结束后,都是在dispatchRequest文件中调用cancelToken.throwIfRequested()进行请求取消的 对于已经开始请求的,分为两个 请求结果还未返回: 调用cancelToken.subscribe()进行请求取消回调的添加 请求结果已经返回: 调用cancelToken.unsubscribe()进行请求取消回调的删除 取消请求回调具体是在外部调用source.cancel进行的,因此会存在请求结果前或者请求结果返回后都存在的情况 参链 五分钟！让你彻底搞懂axios的请求取消原理！附源码分析 学习 axios 源码整体架构，打造属于自己的请求库 注:由于这篇文章时间较久,所以里面对于xhr的取消处理是之前的流程,和现在的最新版本不一致 AbortController 针对于fetch的取消请求处理控制器","categories":[{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/categories/axios-%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/tags/axios-%E6%BA%90%E7%A0%81/"}]},{"title":"axios拦截器原理","slug":"【源码】axios-拦截器","date":"2024-03-22T07:39:37.730Z","updated":"2024-04-03T11:34:11.792Z","comments":true,"path":"2024/03/22/【源码】axios-拦截器/","permalink":"https://1578536879.github.io/2024/03/22/%E3%80%90%E6%BA%90%E7%A0%81%E3%80%91axios-%E6%8B%A6%E6%88%AA%E5%99%A8/","excerpt":"","text":"拦截器使用12345678910111213141516171819202122232425262728293031import axios from &quot;axios&quot;;// http request 拦截器axios.interceptors.request.use( (config: any) =&gt; &#123; console.log(&quot;请求拦截器&quot;); return config; &#125;, (err) =&gt; &#123; return Promise.reject(err); &#125;);// http response 拦截器axios.interceptors.response.use( (response) =&gt; &#123; console.log(&quot;响应拦截器&quot;); return response.data; &#125;, (error) =&gt; &#123; onError(&quot;系统异常！&quot;); &#125;);axios.get(url).then((res) =&gt; &#123; console.log(&quot;请求结果&quot;);&#125;);// 输出结果：// 请求拦截器// 请求结果// 响应拦截器 入口代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384// /lib/core/axios.jsfunction Axios(instanceConfig) &#123; // 分别设置请求和响应拦截器管理 this.interceptors = &#123; request: new InterceptorManager(), response: new InterceptorManager(), &#125;;&#125;Axios.prototype.request = function request(configOrUrl, config) &#123; // 不相关代码... // filter out skipped interceptors // 请求拦截器相关 var requestInterceptorChain = []; var synchronousRequestInterceptors = true; this.interceptors.request.forEach(function unshiftRequestInterceptors( interceptor ) &#123; if ( typeof interceptor.runWhen === &quot;function&quot; &amp;&amp; interceptor.runWhen(config) === false ) &#123; return; &#125; synchronousRequestInterceptors = synchronousRequestInterceptors &amp;&amp; interceptor.synchronous; requestInterceptorChain.unshift( interceptor.fulfilled, interceptor.rejected ); &#125;); // 响应拦截器相关代码 var responseInterceptorChain = []; this.interceptors.response.forEach(function pushResponseInterceptors( interceptor ) &#123; responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected); &#125;); var promise; if (!synchronousRequestInterceptors) &#123; var chain = [dispatchRequest, undefined]; Array.prototype.unshift.apply(chain, requestInterceptorChain); chain = chain.concat(responseInterceptorChain); promise = Promise.resolve(config); while (chain.length) &#123; promise = promise.then(chain.shift(), chain.shift()); &#125; return promise; &#125; var newConfig = config; while (requestInterceptorChain.length) &#123; var onFulfilled = requestInterceptorChain.shift(); var onRejected = requestInterceptorChain.shift(); try &#123; newConfig = onFulfilled(newConfig); &#125; catch (error) &#123; onRejected(error); break; &#125; &#125; try &#123; promise = dispatchRequest(newConfig); &#125; catch (error) &#123; return Promise.reject(error); &#125; while (responseInterceptorChain.length) &#123; promise = promise.then( responseInterceptorChain.shift(), responseInterceptorChain.shift() ); &#125; return promise;&#125;; 拦截器管理1234567891011121314151617181920212223242526272829303132333435363738394041424344454647// /lib/core/InterceptorManager.jsvar utils = require(&quot;./../utils&quot;);// 回调数组function InterceptorManager() &#123; this.handlers = [];&#125;/** * 将新的拦截器添加到回调中 * @param &#123;Function&#125; fulfilled The function to handle `then` for a `Promise` * @param &#123;Function&#125; rejected The function to handle `reject` for a `Promise` * @return &#123;Number&#125; An ID used to remove interceptor later */InterceptorManager.prototype.use = function use(fulfilled, rejected, options) &#123; this.handlers.push(&#123; fulfilled: fulfilled, rejected: rejected, synchronous: options ? options.synchronous : false, runWhen: options ? options.runWhen : null, &#125;); return this.handlers.length - 1;&#125;;/** * 删除拦截器 * @param &#123;Number&#125; id The ID that was returned by `use` */InterceptorManager.prototype.eject = function eject(id) &#123; if (this.handlers[id]) &#123; this.handlers[id] = null; &#125;&#125;;/** * 遍历拦截器 * @param &#123;Function&#125; fn The function to call for each interceptor */InterceptorManager.prototype.forEach = function forEach(fn) &#123; utils.forEach(this.handlers, function forEachHandler(h) &#123; if (h !== null) &#123; fn(h); &#125; &#125;);&#125;;module.exports = InterceptorManager; 总结： InterceptorManager是一个管理拦截器的类，它包含一个handlers数组，用于存储拦截器。use方法用于添加拦截器，eject方法用于删除拦截器，forEach方法用于遍历拦截器。 在使用拦截器时，调用的use实际上是调用的InterceptorManager的use方法 请求拦截器1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768var requestInterceptorChain = [];var synchronousRequestInterceptors = true;// this.interceptors指向的是在文件`/lib/core/Axios.js`中Axios方法中定义的`this.interceptors`// this.interceptors是一个InterceptorManager实例// 在外部(项目)调用axios.interceptors.request的时候，会把对应的请求回调加入到this.interceptors.request的handlers中// 这里的this.interceptors.request实际调用的是InterceptorManager的`forEach`方法，所以这里的foreach实际是遍历this.interceptors.request的handlers数组this.interceptors.request.forEach(function unshiftRequestInterceptors( interceptor) &#123; if ( typeof interceptor.runWhen === &quot;function&quot; &amp;&amp; interceptor.runWhen(config) === false ) &#123; return; &#125; // 判断请求拦截器中是否有异步的函数 synchronousRequestInterceptors = synchronousRequestInterceptors &amp;&amp; interceptor.synchronous; // 将请求拦截器的回调方法加入到requestInterceptorChain中，注意这里其实是以request的顺序倒叙了一次 // 即如果request.handlers = [1,2,3] // 那么requestInterceptorChain = [3,2,1] requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);&#125;);// 如果请求拦截器中有异步的函数if (!synchronousRequestInterceptors) &#123; // dispatchRequest是实际的请求 var chain = [dispatchRequest, undefined]; // chain组成一个[请求拦截器1成功， 请求拦截器1失败，请求拦截器2成功，请求拦截器2失败，实际请求，响应拦截器1成功，响应拦截器1失败，响应拦截器2成功，响应拦截器2失败] Array.prototype.unshift.apply(chain, requestInterceptorChain); chain = chain.concat(responseInterceptorChain); promise = Promise.resolve(config); while (chain.length) &#123; // 执行顺序应该为： // promise.then(请求拦截器1成功， 请求拦截器1失败) // promise.then(请求拦截器2成功，请求拦截器2失败) // promise.then(实际请求, undefined) // promise.then(响应拦截器1成功，响应拦截器1失败) // promise.then(响应拦截器2成功，响应拦截器2失败) promise = promise.then(chain.shift(), chain.shift()); &#125; return promise; &#125;// 无关代码...// 将原有的请求配置浅拷贝一份出来var newConfig = config;// 循环执行requestInterceptorChain中的回调方法;while (requestInterceptorChain.length) &#123; var onFulfilled = requestInterceptorChain.shift(); var onRejected = requestInterceptorChain.shift(); try &#123; // 执行新的请求拦截器，并将请求拦截器的结果作为下一次执行请求拦截器的参数 newConfig = onFulfilled(newConfig); &#125; catch (error) &#123; // 如果请求拦截器中报错，那么不执行后续的操作 onRejected(error); break; &#125;&#125;// 执行请求try &#123; promise = dispatchRequest(newConfig);&#125; catch (error) &#123; return Promise.reject(error);&#125; 总结： 请求拦截器的执行顺序是与书写顺序相反的123456789101112131415161718192021axios.interceptors.request.use( (config: any) =&gt; &#123; console.log(&quot;请求拦截器1&quot;); return config; &#125;, (err) =&gt; &#123; return Promise.reject(err); &#125;);axios.interceptors.request.use( (config: any) =&gt; &#123; console.log(&quot;请求拦截器2&quot;); return config; &#125;, (err) =&gt; &#123; return Promise.reject(err); &#125;);// 执行结果：// 请求拦截器2// 请求拦截器1 请求拦截器中如果报错，那么不执行后续的操作 如果请求拦截器中传入synchronous=false表示为异步请求，默认都是异步请求处理操作 如果是异步请求，axios是和相应拦截器一样的处理，用Promise包裹了一层 如果是同步请求，那么是直接循环执行的 响应拦截器123456789101112131415161718192021222324 Axios.prototype.request = function request(configOrUrl, config) &#123; // ... // 响应拦截器数组 var responseInterceptorChain = []; // 按书写顺序将响应拦截器加入到数组中 this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) &#123; responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected); &#125;); // 无关代码... var promise; // 执行真实请求 try &#123; promise = dispatchRequest(newConfig); &#125; catch (error) &#123; return Promise.reject(error); &#125; // 按书写顺序执行响应拦截器，并且是以异步执行的 while (responseInterceptorChain.length) &#123; promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift()); &#125; return promise;&#125;; 总结： 与请求拦截器执行顺序不同，响应拦截器按书写顺序执行 响应拦截器是默认用异步函数包裹了一层，而请求拦截器是将同步和异步分为两种情况的 参链 学习 axios 源码整体架构，打造属于自己的请求库 axios官网","categories":[{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/categories/axios-%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/tags/axios-%E6%BA%90%E7%A0%81/"}]},{"title":"axios请求流程","slug":"【源码】axios-流程","date":"2024-03-22T07:00:09.825Z","updated":"2024-03-25T02:11:06.930Z","comments":true,"path":"2024/03/22/【源码】axios-流程/","permalink":"https://1578536879.github.io/2024/03/22/%E3%80%90%E6%BA%90%E7%A0%81%E3%80%91axios-%E6%B5%81%E7%A8%8B/","excerpt":"","text":"入口axios的入口是/lib/axios.js，实际主要的流程在/lib/core/Axios.js中 在/lib/axios.js中，创建了一个/lib/core/Axios.js实例，并继承了其父类的方法，其中就包括get&#x2F;post&#x2F;delete等方法 axios实际是从request方法发起全部请求的，只是封装了get&#x2F;post&#x2F;delete等方法， 123456789101112131415161718192021222324252627282930// /lib/core/Axios.jsfunction Axios(instanceConfig) &#123; this.defaults = instanceConfig; this.interceptors = &#123; request: new InterceptorManager(), response: new InterceptorManager() &#125;;&#125;// /lib/axios.jsvar Axios = require(&#x27;./core/Axios&#x27;);function createInstance(defaultConfig) &#123; // context的prototype上已经包含了get等方法 var context = new Axios(defaultConfig); // 直接调用instance时，实际就是调用了request方法 // 这就是为什么在调用axios时，除了可以通过get/post进行请求，也可以直接作为一个函数进行直接调用 var instance = bind(Axios.prototype.request, context); utils.extend(instance, Axios.prototype, context); // Copy context to instance utils.extend(instance, context); // Factory for creating new instances instance.create = function create(instanceConfig) &#123; return createInstance(mergeConfig(defaultConfig, instanceConfig)); &#125;; return instance;&#125; 请求流程主要的请求流程都在request方法里，方法存在于/lib/core/Axios.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102// /lib/core/Axios.jsAxios.prototype.request = function request(configOrUrl, config) &#123; // 适配无额外配置，直接传入url的情况 // 比如 axios(&#x27;example/url&#x27;) // Allow for axios(&#x27;example/url&#x27;[, config]) a la fetch API if (typeof configOrUrl === &#x27;string&#x27;) &#123; config = config || &#123;&#125;; config.url = configOrUrl; &#125; else &#123; config = configOrUrl || &#123;&#125;; &#125; // 将默认配置和传入的配置合并 config = mergeConfig(this.defaults, config); // 设置请求方法 if (config.method) &#123; config.method = config.method.toLowerCase(); &#125; else if (this.defaults.method) &#123; config.method = this.defaults.method.toLowerCase(); &#125; else &#123; config.method = &#x27;get&#x27;; &#125; var transitional = config.transitional; if (transitional !== undefined) &#123; validator.assertOptions(transitional, &#123; // 版本兼容配置-返回值转换为 Json 出错时是否置为 null 返回 silentJSONParsing: validators.transitional(validators.boolean), // 版本兼容配置-responseType 设置非 json 类型时是否强制转换成 json 格式 forcedJSONParsing: validators.transitional(validators.boolean), // 版本兼容配置-请求超时时是否默认返回 ETIMEDOUT 类型错 clarifyTimeoutError: validators.transitional(validators.boolean) &#125;, false); &#125; // filter out skipped interceptors // 请求拦截器数组 var requestInterceptorChain = []; var synchronousRequestInterceptors = true; // 循环访问拦截器的请求数组，将其放在请求真实执行之前 this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) &#123; if (typeof interceptor.runWhen === &#x27;function&#x27; &amp;&amp; interceptor.runWhen(config) === false) &#123; return; &#125; synchronousRequestInterceptors = synchronousRequestInterceptors &amp;&amp; interceptor.synchronous; requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected); &#125;); // 响应拦截器数组 // 循环访问拦截器的响应数组，将其放在请求真实执行之后 var responseInterceptorChain = []; this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) &#123; responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected); &#125;); var promise; if (!synchronousRequestInterceptors) &#123; var chain = [dispatchRequest, undefined]; Array.prototype.unshift.apply(chain, requestInterceptorChain); chain = chain.concat(responseInterceptorChain); promise = Promise.resolve(config); while (chain.length) &#123; promise = promise.then(chain.shift(), chain.shift()); &#125; return promise; &#125; var newConfig = config; // 一步步执行请求拦截器，并将其执行结果覆盖请求配置 while (requestInterceptorChain.length) &#123; var onFulfilled = requestInterceptorChain.shift(); var onRejected = requestInterceptorChain.shift(); try &#123; newConfig = onFulfilled(newConfig); &#125; catch (error) &#123; onRejected(error); break; &#125; &#125; // 执行请求 try &#123; promise = dispatchRequest(newConfig); &#125; catch (error) &#123; return Promise.reject(error); &#125; // 一步步执行响应拦截器 while (responseInterceptorChain.length) &#123; promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift()); &#125; return promise;&#125;; 这里包含的流程如下： 合并配置，包括默认配置和传入的配置 设置请求方法 请求拦截器 requestInterceptorChain 响应拦截器 responseInterceptorChain 执行请求（dispatchRequest），且是在请求拦截器之后，响应拦截器之前 注意点： 这里的执行是放在一个数组里面的，最开始只有实际的请求，然后在数组开头加上请求的拦截器函数，在数组最后加上请求的响应拦截器处理函数 拦截器的函数的参数是从上一个拦截器中返回的结果 默认请求头是get 派发请求1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465// /lib/core/dispatchRequest.js// 派发请求module.exports = function dispatchRequest(config) &#123; // 取消请求相关 throwIfCancellationRequested(config); // Ensure headers exist config.headers = config.headers || &#123;&#125;; // Transform the data for a request or a response config.data = transformData.call( config, config.data,//方法参数，如果是多个方法，那么方法2的参数是由方法1的返回值决定的 config.headers,//请求头 config.transformRequest//执行的方法，具体是在axios里面自己定义了，在/lib/defaults.js文件中，主要是用于请求头的修改 ); // 合并拉平请求头 config.headers = utils.merge( config.headers.common || &#123;&#125;, config.headers[config.method] || &#123;&#125;, config.headers ); // 如果是这些请求，那么就删除掉对应的请求头 utils.forEach( [&#x27;delete&#x27;, &#x27;get&#x27;, &#x27;head&#x27;, &#x27;post&#x27;, &#x27;put&#x27;, &#x27;patch&#x27;, &#x27;common&#x27;], function cleanHeaderConfig(method) &#123; delete config.headers[method]; &#125; ); var adapter = config.adapter || defaults.adapter; // 执行适配器 return adapter(config).then(function onAdapterResolution(response) &#123; // 取消相关请求的 throwIfCancellationRequested(config); // Transform response data response.data = transformData.call( config, response.data, response.headers, config.transformResponse//执行的方法，具体是在axios里面自己定义了，在/lib/defaults.js文件中，主要是用于响应结果的修改 ); return response; &#125;, function onAdapterRejection(reason) &#123; if (!isCancel(reason)) &#123; throwIfCancellationRequested(config); // Transform response data if (reason &amp;&amp; reason.response) &#123; reason.response.data = transformData.call( config, reason.response.data, reason.response.headers, config.transformResponse ); &#125; &#125; return Promise.reject(reason); &#125;);&#125;; 流程： 统一处理请求头 合并拉平请求头 某些请求会删除请求头的config.headers[method] 执行请求 获取到响应数据后，统一处理响应结果 注意点： [&#39;delete&#39;, &#39;get&#39;, &#39;head&#39;, &#39;post&#39;, &#39;put&#39;, &#39;patch&#39;, &#39;common&#39;]这些请求axios会删除请求头的config.headers[method] 关于请求头的统一额外处理，在这个阶段进行 关于响应结果的解析，是在这个阶段执行的 实际请求发送适配器解释了为什么axios可以在nodejs和浏览器里面都发送请求 1234567891011121314// /lib/defaults/index,js function getDefaultAdapter() &#123; var adapter; // 如果是浏览器的环境，那么就用的是xhr if (typeof XMLHttpRequest !== &#x27;undefined&#x27;) &#123; // For browsers use XHR adapter adapter = require(&#x27;../adapters/xhr&#x27;); // 如果是非浏览器的环境（例如nodejs），那么就用的是http的文件 &#125; else if (typeof process !== &#x27;undefined&#x27; &amp;&amp; Object.prototype.toString.call(process) === &#x27;[object process]&#x27;) &#123; // For node use HTTP adapter adapter = require(&#x27;../adapters/http&#x27;); &#125; return adapter;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211// /lib/adapters/xhr.jsmodule.exports = function xhrAdapter(config) &#123; return new Promise(function dispatchXhrRequest(resolve, reject) &#123; // 拿到请求配置项 var requestData = config.data; var requestHeaders = config.headers; var responseType = config.responseType; var onCanceled; function done() &#123; // 如果有取消的，那么走取消请求 if (config.cancelToken) &#123; config.cancelToken.unsubscribe(onCanceled); &#125; if (config.signal) &#123; config.signal.removeEventListener(&#x27;abort&#x27;, onCanceled); &#125; &#125; // 设置form请求的请求头 if (utils.isFormData(requestData) &amp;&amp; utils.isStandardBrowserEnv()) &#123; delete requestHeaders[&#x27;Content-Type&#x27;]; // Let the browser set it &#125; // 创建xhr请求 var request = new XMLHttpRequest(); // 如果有设置授权相关的，那么配置其请求头 if (config.auth) &#123; var username = config.auth.username || &#x27;&#x27;; var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : &#x27;&#x27;; requestHeaders.Authorization = &#x27;Basic &#x27; + btoa(username + &#x27;:&#x27; + password); &#125; var fullPath = buildFullPath(config.baseURL, config.url); request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS request.timeout = config.timeout; function onloadend() &#123; if (!request) &#123; return; &#125; // Prepare the response var responseHeaders = &#x27;getAllResponseHeaders&#x27; in request ? parseHeaders(request.getAllResponseHeaders()) : null; var responseData = !responseType || responseType === &#x27;text&#x27; || responseType === &#x27;json&#x27; ? request.responseText : request.response; var response = &#123; data: responseData, status: request.status, statusText: request.statusText, headers: responseHeaders, config: config, request: request &#125;; settle(function _resolve(value) &#123; resolve(value); done(); &#125;, function _reject(err) &#123; reject(err); done(); &#125;, response); // Clean up request request = null; &#125; if (&#x27;onloadend&#x27; in request) &#123; // Use onloadend if available request.onloadend = onloadend; &#125; else &#123; // Listen for ready state to emulate onloadend request.onreadystatechange = function handleLoad() &#123; if (!request || request.readyState !== 4) &#123; return; &#125; // The request errored out and we didn&#x27;t get a response, this will be // handled by onerror instead // With one exception: request that using file: protocol, most browsers // will return status as 0 even though it&#x27;s a successful request if (request.status === 0 &amp;&amp; !(request.responseURL &amp;&amp; request.responseURL.indexOf(&#x27;file:&#x27;) === 0)) &#123; return; &#125; // readystate handler is calling before onerror or ontimeout handlers, // so we should call onloadend on the next &#x27;tick&#x27; setTimeout(onloadend); &#125;; &#125; // Handle browser request cancellation (as opposed to a manual cancellation) request.onabort = function handleAbort() &#123; if (!request) &#123; return; &#125; reject(new AxiosError(&#x27;Request aborted&#x27;, AxiosError.ECONNABORTED, config, request)); // Clean up request request = null; &#125;; // Handle low level network errors request.onerror = function handleError() &#123; // Real errors are hidden from us by the browser // onerror should only fire if it&#x27;s a network error reject(new AxiosError(&#x27;Network Error&#x27;, AxiosError.ERR_NETWORK, config, request, request)); // Clean up request request = null; &#125;; // Handle timeout request.ontimeout = function handleTimeout() &#123; var timeoutErrorMessage = config.timeout ? &#x27;timeout of &#x27; + config.timeout + &#x27;ms exceeded&#x27; : &#x27;timeout exceeded&#x27;; var transitional = config.transitional || transitionalDefaults; if (config.timeoutErrorMessage) &#123; timeoutErrorMessage = config.timeoutErrorMessage; &#125; reject(new AxiosError( timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request)); // Clean up request request = null; &#125;; // Add xsrf header // This is only done if running in a standard browser environment. // Specifically not if we&#x27;re in a web worker, or react-native. if (utils.isStandardBrowserEnv()) &#123; // Add xsrf header var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) &amp;&amp; config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined; if (xsrfValue) &#123; requestHeaders[config.xsrfHeaderName] = xsrfValue; &#125; &#125; // Add headers to the request if (&#x27;setRequestHeader&#x27; in request) &#123; utils.forEach(requestHeaders, function setRequestHeader(val, key) &#123; if (typeof requestData === &#x27;undefined&#x27; &amp;&amp; key.toLowerCase() === &#x27;content-type&#x27;) &#123; // Remove Content-Type if data is undefined delete requestHeaders[key]; &#125; else &#123; // Otherwise add header to the request request.setRequestHeader(key, val); &#125; &#125;); &#125; // Add withCredentials to request if needed if (!utils.isUndefined(config.withCredentials)) &#123; request.withCredentials = !!config.withCredentials; &#125; // Add responseType to request if needed if (responseType &amp;&amp; responseType !== &#x27;json&#x27;) &#123; request.responseType = config.responseType; &#125; // Handle progress if needed if (typeof config.onDownloadProgress === &#x27;function&#x27;) &#123; request.addEventListener(&#x27;progress&#x27;, config.onDownloadProgress); &#125; // Not all browsers support upload events if (typeof config.onUploadProgress === &#x27;function&#x27; &amp;&amp; request.upload) &#123; request.upload.addEventListener(&#x27;progress&#x27;, config.onUploadProgress); &#125; // 取消请求相关 if (config.cancelToken || config.signal) &#123; // Handle cancellation // eslint-disable-next-line func-names onCanceled = function(cancel) &#123; if (!request) &#123; return; &#125; reject(!cancel || (cancel &amp;&amp; cancel.type) ? new CanceledError() : cancel); request.abort(); request = null; &#125;; config.cancelToken &amp;&amp; config.cancelToken.subscribe(onCanceled); if (config.signal) &#123; config.signal.aborted ? onCanceled() : config.signal.addEventListener(&#x27;abort&#x27;, onCanceled); &#125; &#125; if (!requestData) &#123; requestData = null; &#125; var protocol = parseProtocol(fullPath); if (protocol &amp;&amp; [ &#x27;http&#x27;, &#x27;https&#x27;, &#x27;file&#x27; ].indexOf(protocol) === -1) &#123; reject(new AxiosError(&#x27;Unsupported protocol &#x27; + protocol + &#x27;:&#x27;, AxiosError.ERR_BAD_REQUEST, config)); return; &#125; // Send the request request.send(requestData); &#125;);&#125;; 注意点： auth是表示授权相关的请求头，axios会默认加上配置 如果是form表单请求，axios会删除Content-Type请求头 在这里也做了取消请求相关的，利用的是xhr的abort函数进行请求取消 参链 学习 axios 源码整体架构，打造属于自己的请求库 axios官网","categories":[{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/categories/axios-%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/tags/axios-%E6%BA%90%E7%A0%81/"}]},{"title":"【js】修饰器（Decorator）","slug":"【JS】修饰器","date":"2024-03-06T03:42:26.957Z","updated":"2024-03-13T08:12:26.256Z","comments":true,"path":"2024/03/06/【JS】修饰器/","permalink":"https://1578536879.github.io/2024/03/06/%E3%80%90JS%E3%80%91%E4%BF%AE%E9%A5%B0%E5%99%A8/","excerpt":"","text":"修饰器修饰器是 ES7 的提案，是一种用于修改类、方法或属性的语法，它可以在不修改原始代码的情况下增强其功能。修饰器可以实现横切关注点（cross-cutting concerns）的功能，例如日志记录、性能分析、缓存等。通过将这些功能与原始代码分离，我们可以更好地组织和维护代码，并实现更高的可重用性和可扩展性。 它的出现可以解决其下两个问题: 不同类之间共享方法 编译期对类和方法的行为进行改变 类修饰器类修饰器用于修改类的行为和属性。它可以在类定义之前应用，以修改类的构造函数或原型。 12345678910111213141516171819202122232425function log(target) &#123; const originCon = target; console.log(&quot;log&quot;, target); function newCon(...args) &#123; console.log(&quot;newCon&quot;, args); args[0] = &quot;234&quot;; //修改传给class的参数 return new originCon(...args); &#125; return newCon;&#125;@logclass classA &#123; constructor(props) &#123; console.log(&quot;classA&quot;, props); &#125;&#125;// 输出：// log class&#123;...&#125;const objA = new classA(&quot;123&quot;);// 输出：// new Con [&#x27;123&#x27;]// classA [&#x27;234&#x27;] 访问静态属性 定义了一个修饰器函数 log，然后将这个修饰器应用在 classA，在使用这个修饰器的时候，就会执行修饰器函数 log。 但是如果需要访问类的静态属性或者方法，会直接报错： 123456789101112@logclass classA &#123; constructor(props) &#123; console.log(&quot;classA&quot;, props); &#125; static staticFn() &#123; console.log(&quot;staticFn&quot;); &#125;&#125;classA.staticFn();// 报错：TypeError: classA.staticFn is not a function 因为 log 返回的新实例，不是原始的类，所以没有 staticFn 方法，导致报错。所以需要在修饰器函数中，将静态属性和方法进行赋值。 1234567891011121314151617181920212223242526function log(target) &#123;const originCon = target;console.dir(target);function newCon(...args) &#123; console.log(&quot;newCon&quot;, args); args[0] = &quot;234&quot;; return new originCon(...args);&#125;// 辅助函数，用于复制静态方法+ function copyStatic(originalConstructor, newConstructor) &#123;+ Reflect.ownKeys(originalConstructor).forEach((prop) =&gt; &#123;+ console.log(&quot;prop&quot;, prop);+ if (prop !== &quot;prototype&quot; &amp;&amp; prop !== &quot;length&quot; &amp;&amp; prop !== &quot;name&quot;) &#123;+ newConstructor[prop] = originalConstructor[prop];+ &#125;+ &#125;);+ &#125;+ copyStatic(originCon, newCon);return newCon;&#125;classA.staticFn();输出：// staticFn 应用场景 日志记录：在类的方法执行前后记录日志信息。 验证和授权：对类的方法进行验证和授权操作。 性能分析：测量类的方法执行时间，进行性能分析。 依赖注入：为类的构造函数注入依赖项。 方法修饰器方法修饰器用于修改类的方法行为。它可以在方法定义之前应用，以修改方法的特性和行为。 12345678910111213141516171819202122232425262728293031323334353637function log(target, name, descriptor) &#123; console.dir(target); console.dir(name); console.dir(descriptor); console.log(&quot;初始化调用修饰器&quot;); return &#123; ...descriptor, value: function (...args) &#123; console.log(&quot;修饰器函数的方法&quot;); const res = descriptor.value.apply(this, args); return res * 100; &#125;, &#125;;&#125;class classA &#123; constructor(props) &#123; console.log(&quot;classA&quot;, props); &#125; @log addFn(a, b) &#123; console.log(&quot;调用了原始函数&quot;); return a + b; &#125;&#125;const objA = new classA(&quot;123&quot;);const res = objA.addFn(1, 2);console.log(&quot;res&quot;, res);// 输出：// Object &#123; addFn, constructor: class classA &#125;// addFn// &#123;value: f addFn(a, b), enumerable: false, configurable: true, writable: true&#125;// 初始化调用修饰器// classA 123// 修饰器函数的方法// 调用了原始函数// res 300 方法修饰器函数接收三个参数，分别是target（类的原型或构造函数）、name（方法名）和descriptor（方法的属性描述符）。修改descriptor.value可以替换原有的方法 应用场景 日志记录：在方法执行前后记录日志信息。 验证和授权：对方法进行验证和授权操作。 性能分析：测量方法执行时间，进行性能分析。 缓存：为方法添加缓存功能，提高性能。 属性修饰器用于修改类的属性行为。它可以在属性定义之前应用，以修改属性的特性和行为 虽然有很多博客说可以直接用类属性修饰器，但是个人实际使用了一下，并未成功 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354function protoDec(initVal) &#123; return function (target, name) &#123; target[name] = initVal; console.dir(target); console.log(name); let val = target[name]; const getter = function () &#123; console.log(&quot;获取值：&quot;, val); return val; &#125;; const setter = function (newVal) &#123; if (typeof newVal === &quot;number&quot;) &#123; console.log(&quot;设置值：&quot;, newVal); val = newVal + 1; &#125; else &#123; throw new Error(&quot;设置值必须为数字&quot;); &#125; &#125;; Object.defineProperty(target, name, &#123; get: getter, set: setter, enumerable: true, configurable: true, &#125;); &#125;;&#125;class classA &#123; @protoDec(&quot;0&quot;) num; constructor(props) &#123; console.log(&quot;classA&quot;, props); &#125;&#125;const objA = new classA(&quot;123&quot;);console.log(&quot;objA&quot;, objA.num);objA.num = 100;console.log(&quot;objA&quot;, objA.num);// 当前输出：// Object &#123; num: &quot;0&quot; &#125;// num// classA 123// objA undefined// objA 100// 预期输出：// Object &#123; num: &quot;0&quot; &#125;// num// classA 123// 获取值：0// objA &quot;0&quot;// 设置值：100// objA 101 参数修饰器参数修饰器用于修改方法的参数行为。它可以在方法参数声明之前应用，以修改参数的特性和行为 参数装饰器只能用来监视一个方法的参数是否被传入，无法修改函数执行结果 参数装饰器表达式会在运行时当作函数被调用，传入下列 3 个参数： 对于静态成员来说是类的构造函数，对于实例成员是类的原型对象。 成员的名字。 参数在函数参数列表中的索引。 参数装饰器的返回值会被忽略。 123456789101112131415161718192021222324252627282930313233function paramsDec(target, name, index) &#123; console.dir(target) console.dir(name) console.dir(index)&#125;class classA &#123; fn(@paramsDec num1, @paramsDec num2) &#123; console.log(&quot;执行函数&quot;) &#125;; constructor(props) &#123; console.log(&quot;classA&quot;, props); &#125;&#125;const objA = new classA(&quot;123&quot;);objA.fn(1, 2)输出：Object &#123; constructor: class classA, fn: ƒ fn(num1, num2)&#125;fn1Object &#123; constructor: class classA, fn: ƒ fn(num1, num2)&#125;fn0classA 123执行函数 装饰器执行顺序当多个装饰器应用在一个声明上时会进行如下步骤的操作： 由上至下依次对装饰器表达式求值。 求值的结果会被当作函数，由下至上依次调用。 参链JavaScript修饰器：简化代码，增强功能 装饰器","categories":[{"name":"JS","slug":"JS","permalink":"https://1578536879.github.io/categories/JS/"}],"tags":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/tags/js/"}]},{"title":"是否外部在调试","slug":"【业务场景】是否外部在调试","date":"2024-02-16T06:37:19.365Z","updated":"2024-02-16T06:55:33.805Z","comments":true,"path":"2024/02/16/【业务场景】是否外部在调试/","permalink":"https://1578536879.github.io/2024/02/16/%E3%80%90%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E3%80%91%E6%98%AF%E5%90%A6%E5%A4%96%E9%83%A8%E5%9C%A8%E8%B0%83%E8%AF%95/","excerpt":"","text":"键盘 用F12键去判断是否有打开 浏览器内外宽度差 开发者人员工具变量是否为true console 代码运行时间差 123456let a = 1;const time = new Date();const b = 2;debuggerconst time2 = new Date();const space = time2 - time; toString 当鼠标放在函数名上时，会调用函数的toString方法 1234567function isDebug() &#123; ...&#125;isDebug.toString() = function()&#123; console.log(&#x27;debuging&#x27;); return isDebug()&#125; caller 返回函数调用方，监测栈的层数 监测非浏览器的环境","categories":[{"name":"业务场景","slug":"业务场景","permalink":"https://1578536879.github.io/categories/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"}],"tags":[{"name":"业务场景","slug":"业务场景","permalink":"https://1578536879.github.io/tags/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"}]},{"title":"SSR和CSR","slug":"【前端】SSR和CSR","date":"2024-02-16T06:28:53.525Z","updated":"2024-02-16T06:36:13.575Z","comments":true,"path":"2024/02/16/【前端】SSR和CSR/","permalink":"https://1578536879.github.io/2024/02/16/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91SSR%E5%92%8CCSR/","excerpt":"","text":"SSR工作流程 浏览器向网站发起请求 服务器接收到请求后，先查询数据库中的动态数据(如用户数据)，然后将数据通过模板引擎编译为HTML字符串，然后再返回给浏览器 浏览器接收到HTML文档后，将其渲染为可视的UI 优点有利于SEO，首屏渲染快 CSR工作流程 浏览器发起请求 服务器接收到请求后，立即返回静态的HTML部分，这部分内容通常是与用户无关的静态数据 浏览器解析html文档，待js脚本加载完成后发起异步请求，获取动态数据 服务器接收到异步请求后，查询数据库并将动态数据返回给网络浏览器 浏览器接收到动态数据后，使用js将数据编译为html字符串并渲染为可视的UI 优点更好支持离线场景和前后端分离等","categories":[{"name":"前端","slug":"前端","permalink":"https://1578536879.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://1578536879.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"性能指标","slug":"性能指标","date":"2024-02-06T06:54:33.517Z","updated":"2024-02-06T07:33:57.377Z","comments":true,"path":"2024/02/06/性能指标/","permalink":"https://1578536879.github.io/2024/02/06/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/","excerpt":"","text":"基于用户的性能指标FCP：白屏时间 FCP 时长 颜色编码 FCP 分数(HTTP 存档百分位数) 0-2s 快速 75-100 2-4s 中等 50-74 &gt;4s 慢 0-49 LCP：主要内容可见时间(可视区域最大-资源较大 元素到屏幕上的间隔时间) 并不是只初始加载页面的，而是指页面元素变化的时候 LCP 考虑的元素 &lt;img&gt;元素 &lt;image&gt;元素的&lt;svg&gt; &lt;video&gt; 通过[url()](https://developer.mozilla.org/en-US/docs/Web/CSS/url())函数加载背景图片的元素 包含文本节点或者其他内联文字元素子级的块级元素 LCP 时长 颜色编码 0-2.5s 快速 2.5-4s 中等 &gt;4s 慢 FID：首次输入延迟第一次与页面交互(点击按钮链接等)到浏览器实际能够响应这次交互的时间 输入延迟是因为浏览器的主线程处于繁忙状态(比如忙于解析和执行程序加载的大量计算的 js)，导致无法及时响应用户。 第一次的输入延迟通常发生在 FCP 和 TTI 之间，因为页面虽然已经呈现了，但是还无法可靠交互 FID 时长 颜色编码 0-0.1s 快速 0.1-0.3s 中等 &gt;0.3s 慢 TTI：第一次完全达到可交互状态浏览器可以持续性的响应用户的交互事件。完全达到可交互的状态时间点是在最后一个长文物(50ms 以上才能完成的任务)完成的事件，并且在随后的 5s 内网络和主线程是空闲的 TTI 时长 颜色编码 0-3.8s 快速 3.8-7.3s 中等 &gt;7.3s 慢 TBT：总阻塞时间即 FCP 和 TTI 之间的间隔时长，在改时间范围内，主线程被阻塞足够长的时间以防止用户的输入事件。 长任务，执行时长超过了 50ms 页面总阻塞时间&#x3D;FCP 和 TTI 之间发生的每个长任务的阻塞时间总和 长任务的阻塞时间&#x3D;长任务的实际执行时长-50ms TBT 时长 颜色编码 0-0.3s 快速 0.3-0.6s 中等 &gt;0.6s 慢 CLS：累计布局偏移在整个生命周期中发生的每个意外的布局移位(即在不是预计的位置偏移或者样式错乱)的所有单独布局。 保证页面的视觉稳定性 元素的意外移动通常是由于异步加载资源或者 DOM 元素动态添加到现有内容商法的页面而发生的 可能是由于尺寸未知的多媒体资源，字体变化或者动态调整自身大小的第三方广告、小部件 TBT 时长 颜色编码 0-0.1ms 快速 0.1-0.25ms 中等 &gt;0.25ms 慢 速度指数(SI)：页面可视区域中内容的填充速度计算页面可见区域内容显示的平均时间来衡量 捕获浏览器加载页面过程的视频，然后对每 100ms 间隔的页面截图计算页面内容的填充百分比 TBT 时长 颜色编码 0-4.3s 快速 4.3-5.8ms 中等 &gt;5.8ms 慢 RAIL 性能模型 RAIL R(响应)：应该尽可能快速的响应用户，应该在 100ms 内相应用户 A(Animation)：在展示动画的时候，每一帧应该以 16ms 进行渲染，这样可以保持动画的一致性，避免卡顿 I(空闲)：当使用 JS 主线程的时候，应该把任务划分到执行时间小于 50ms 的片段中，这样可以释放线程以进行用户交互 L(加载)：应该在小于 1s 的时间内完成加载网页，且可以进行用户交互 感知延迟的时间窗口 延迟时长 用户反映 0-16ms 人眼可以感知每秒 60 帧的动画，即每帧 16ms，除了浏览器将一帧画面绘制到屏幕上的时间，网站应用大约需要 10ms 生成一帧 0-100ms 在该范围内相应用户的操作，属于流畅的体验 100-1000ms 能够感知明显延迟 &gt;1s 用户注意力将离开对执行任务的关注 &gt;10s 感到过于长以至于失望，可能回放弃任务 Web VitalsCore Web Vitals应用于所有 web 页面的 Web Vitals 子集，为其最重要的核心 主要指标 LCP：加载性能 FID：交互性 CLS：视觉稳定性 测试工具 LightHouse WebPageTest DevTools","categories":[{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/categories/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"}],"tags":[]},{"title":"从地址栏到页面展示的流程","slug":"输入url到页面展示","date":"2024-02-06T06:54:33.515Z","updated":"2024-02-16T06:23:53.463Z","comments":true,"path":"2024/02/06/输入url到页面展示/","permalink":"https://1578536879.github.io/2024/02/06/%E8%BE%93%E5%85%A5url%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%A4%BA/","excerpt":"","text":"浏览器进程 1、UI 线程会判断输入的内容是搜索关键词还是 URL 如果是搜索关键词，跳转至默认搜索引擎对应都搜索 URL， 如果输入的内容是 URL，则开始请求 URL。 2、UI 线程将关键词搜索对应的 URL 或输入的 URL 交给网络线程 UI 线程使 Tab 前的图标展示为加载中状态 3、网络线程发出请求，获取请求返回内容 先查询是否有url是ip还是域名，如果是域名，先去进行查看是否有对应的ip解析缓存，没有就进行DNS查询 建立三次握手（AKC，seq这些） 发送请求 服务器返回请求 如果收到服务器的 301 重定向响应，它就会告知 UI 线程进行重定向然后它会再次发起一个新的网络请求。 根据响应头中的 Content-Type 字段来确定响应主体的媒体类型 如果媒体类型是一个HTML文件，则将响应数据交给渲染进程 如果是zip 文件或者其它文件，会把相关数据传输给存储线程，下载管理器。 浏览器会进行 Safe Browsing 安全检查，如果域名或者请求内容匹配到已知的恶意站点，网络线程会展示一个警告页。除此之外，网络线程还会做 CORB（Cross Origin Read Blocking）检查来确定那些敏感的跨站数据不会被发送至渲染进程 四次挥手 4、网络线程确信浏览器可以导航到请求网页，网络线程会通知 UI 线程数据已经准备好，UI 线程会查找到一个 渲染进程进行网页的渲染。 浏览器为了对查找渲染进程这一步骤进行优化，考虑到网络请求获取响应需要时间，所以在第二步开始，浏览器已经预先查找和启动了一个渲染进程，如果中间步骤一切顺利，当 network thread 接收到数据时，渲染进程已经准备好了，但是如果遇到重定向，这个准备好的渲染进程也许就不可用了，这个时候会重新启动一个渲染进程。 5、浏览器进程 会向 渲染进程 发送 IPC 消息(进程通信的一种方式)来确认导航 浏览器进程将准备好的数据发送给渲染进程，渲染进程接收到数据之后，又发送 IPC 消息给浏览器进程，告诉浏览器进程导航已经提交了，页面开始加载。 6、当导航提交完成后，渲染进程开始加载资源及渲染页面，当页面渲染完成后（页面及内部的 iframe 都触发了 onload 事件），会向浏览器进程发送 IPC 消息，告知浏览器进程，这个时候 UI thread 会停止展示 tab 中的加载中图标。 渲染进程-关键渲染路径(CRP) 当渲染进程接受到导航的确认信息后，开始接受来自浏览器进程的数据，主线程会解析数据转化为 DOM 对象。 解析到图片、CSS、JavaScript 脚本等资源，这些资源是需要从网络或者缓存中获取的，主线程在构建 DOM 过程中如果遇到了这些资源，逐一发起请求去获取，而为了提升效率，浏览器也会运行预加载扫描（preload scanner）程序。“预加载扫描器”是并发运行的，如果如果 HTML 中存在 img、link 等标签，预加载扫描程序会把这些请求传递给浏览器进程的网络线程进行资源下载。 找到一个&lt; script &gt;标签时，它会暂停 HTML 文档的解析，并且必须加载、解析和执行 JavaScript 代码。因为 JS 可以使用document.write()改变整个 DOM 结构之类的东西来改变文档的形状（ HTML 规范中的解析模型概述有一个很好的图表）。这就是 HTML 解析器必须等待 JavaScript 运行才能继续解析 HTML 文档的原因。V8 关于 JS 执行中的事情 因此如果 js 没有document.write()，可以添加 async 或 defer 属性到&lt; script &gt;标签。然后浏览器异步加载和运行 JavaScript 代码，这样不会阻止解析 DOM 主线程依据 Css 选择器以及浏览器默认样式来计算每个元素应该具备的具体样式 主线程会遍历 DOM 及相关元素的计算样式，构建出包含每个元素的页面坐标信息及盒子模型大小的布局树（Render Tree），遍历过程中，会跳过隐藏的元素（display: none），另外，伪元素虽然在 DOM 树上不可见，但是在布局树上是可见的。 遍历布局树（layout tree），生成一系列的绘画记录（paint records）。绘画记录可以看做是记录各元素绘制先后顺序的笔记-绘画顺序表。 主线程需要遍历渲染树来创建一棵层次树（Layer Tree），对于添加了 will-change CSS 属性的元素，会被看做单独的一层，没有 will-change CSS 属性的元素，浏览器会根据情况决定是否要把该元素放在单独的层。 当页面的层超过一定的数量后，层的合成操作要比在每个帧中光栅化页面的一小部分还要慢，因此衡量你应用的渲染性能是十分重要的一件事情。 主线程会把这些信息通知给合成器线程，合成器线程开始对层次数的每一层进行光栅化。 为了优化显示体验，合成线程可以给不同的光栅线程赋予不同的优先级，将那些在视口中的或者视口附近的层先被光栅化。 有的层的可以达到整个页面的大小，合成器需要将它们切分为一块又一块的小图块（tiles） 合成器将这些小图块分别进行发送给一系列光栅线程（raster threads）进行光栅化 结束后光栅线程会将每个图块的光栅结果存在 GPU Process 的内存中 合成线程会收集图块上面叫做绘画四边形（draw quads）的信息来构建一个合成帧（compositor frame）。 绘画四边形：包含图块在内存的位置以及图层合成后图块在页面的位置之类的信息。 合成帧：代表页面一个帧的内容的绘制四边形集合。 合成线程就会通过 IPC 向浏览器进程（browser process）提交（commit）一个渲染帧。 这个时候可能有另外一个合成帧被浏览器进程的 UI 线程（UI thread）提交以改变浏览器的 UI。这些合成帧都会被发送给 GPU 从而展示在屏幕上。 如果合成线程收到页面滚动的事件，合成线程会构建另外一个组合帧发送给 GPU 来更新页面。 事件处理 当点击或者输入的时候，首先接受到事件的是浏览器进程 浏览器进程不处理，将事件丢给渲染进程 渲染进程依据事件发生的坐标，找到目标对象，运行附加的事件侦听器来适当地处理事件。 合成器线程会标记页面中绑定有事件处理器的区域为非快速滚动区域(non-fast scrollable region) 当合成器线程向主线程发送输入事件时，首先要运行的是命中测试以找到事件目标。命中测试使用渲染过程中生成的绘制记录数据来找出发生事件的点坐标下方的内容。 如果事件发生在这些存在标注的区域，合成器线程会把事件信息发送给主线程，等待主线程进行事件处理 如果事件不是发生在这些区域，合成器线程则会直接合成新的帧而不用等到主线程的响应。 所以，在进行事件监听的时候，尤其是事件捕获或者对整个文档进行事件监听的时候需要考虑一下，因为整个页面都被标记为非快速滚动区域。这意味着即使不关心来自页面某些部分的输入，合成器线程也必须与主线程通信并在每次输入事件进入时等待它。因此，合成器的平滑滚动能力被打败了。 12// 浏览器在主线程中侦听事件，但合成器也可以继续合成新帧。document.body.addEventListener(enent, func, &#123; passive: true &#125;); 参考链接合成器线程详解&#x2705; 一文搞懂浏览器的工作原理&#x270B; chrome 渲染器进程的内部工作原理&#x270B;","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"}]},{"title":"手写题","slug":"手写题","date":"2024-02-06T06:54:33.513Z","updated":"2024-02-06T07:34:12.951Z","comments":true,"path":"2024/02/06/手写题/","permalink":"https://1578536879.github.io/2024/02/06/%E6%89%8B%E5%86%99%E9%A2%98/","excerpt":"","text":"将一维数组转化为 tree12345678910const list = [ &#123; id: &quot;01&quot;, parentId: 0, name: &quot;节点1&quot; &#125;, &#123; id: &quot;011&quot;, parentId: &quot;01&quot;, name: &quot;节点1-1&quot; &#125;, &#123; id: &quot;0111&quot;, parentId: &quot;011&quot;, name: &quot;节点1-1-1&quot; &#125;, &#123; id: &quot;02&quot;, parentId: 0, name: &quot;节点2&quot; &#125;, &#123; id: &quot;022&quot;, parentId: &quot;02&quot;, name: &quot;节点2-2&quot; &#125;, &#123; id: &quot;023&quot;, parentId: &quot;02&quot;, name: &quot;节点2-3&quot; &#125;, &#123; id: &quot;0222&quot;, parentId: &quot;022&quot;, name: &quot;节点2-2-2&quot; &#125;, &#123; id: &quot;03&quot;, parentId: 0, name: &quot;节点3&quot; &#125;,]; 解法 1： 使用循环+递归的形式 12345678910111213141516171819202122232425262728293031function findParent(tree, child) &#123; for (const cur of tree) &#123; if ( cur.id !== child.parentId &amp;&amp; cur.children &amp;&amp; cur.children.length !== 0 ) &#123; cur = findParent(cur.children, child); &#125; else if (cur.id === child.parentId) &#123; if (cur.children) &#123; cur.children.push(child); &#125; else &#123; cur.children = [child]; &#125; return tree; &#125; &#125; return tree;&#125;function arrToTree(arr) &#123; let tree = []; const len = arr.length; for (let i = 0; i &lt; len; i++) &#123; if (arr[i].parentId === 0) &#123; tree.push(arr[i]); &#125; else &#123; tree = findParent(tree, arr[i]); &#125; &#125; return tree;&#125; 解法 2： 使用 map 映射和 js 当引用类型赋值时，是拷贝的地址的特性 1234567891011121314function con(arr) &#123; const res = []; const map = arr.reduce((res, v) =&gt; ((res[v.id] = v), res), &#123;&#125;); for (const item of arr) &#123; if (item.parentId in map) &#123; const parent = map[item.parentId]; parent.children = parent.children || []; parent.children.push(item); &#125; else &#123; res.push(item); &#125; &#125; return res;&#125; object 键扁平化原始数据： 1234567891011121314151617181920&#123; &quot;a&quot;: &#123; &quot;b&quot;: &#123; &quot;c&quot;: 2 &#125;, &quot;d&quot;: 3 &#125;, &quot;d&quot;: &quot;d&quot;, &quot;e&quot;: &#123; &quot;f&quot;: &#123; &quot;g&quot;: &quot;g&quot;, &quot;f&quot;: &#123; &quot;h&quot;: &#123; &quot;i&quot;: &quot;i&quot; &#125; &#125; &#125;, &quot;g&quot;: &quot;g2&quot; &#125;&#125; 转换数据： 12345678&#123; &quot;a.b.c&quot;: 2, &quot;a.d&quot;: 3, &quot;d&quot;: &quot;d&quot;, &quot;e.f.g&quot;: &quot;g&quot;, &quot;e.f.f.h.i&quot;: &quot;i&quot;, &quot;e.g&quot;: &quot;g2&quot;&#125; 解法 1采用 dfs 思维做 123456789101112131415161718192021222324252627282930313233343536function dfs(tree, preKey = &quot;&quot;) &#123; if (typeof tree !== &quot;object&quot;) &#123; return &#123; key: preKey, value: tree, &#125;; &#125; const keys = Reflect.ownKeys(tree); let res = []; for (const key of keys) &#123; let val = dfs(tree[key], preKey + &quot;.&quot; + key); if (Array.isArray(val)) &#123; res = res.concat(val); &#125; else &#123; res.push(val); &#125; &#125; return res;&#125;function ObjectKeyToStr(obj) &#123; const keys = Reflect.ownKeys(obj); let res = &#123;&#125;; for (const key of keys) &#123; const data = dfs(obj[key], key); if (Array.isArray(data)) &#123; data.forEach((ele) =&gt; &#123; res[ele.key] = ele.value; &#125;); &#125; else &#123; res[data.key] = data.value; &#125; &#125; console.log(res); return res;&#125; 解法 2 采用类bfs的思路 123456789101112131415161718192021222324252627282930function getKeys(tree) &#123; return Reflect.ownKeys(tree);&#125;function bfs(tree) &#123; let stack = []; let res = &#123;&#125;; let item = tree; while (item) &#123; getKeys(item).forEach((ele) =&gt; &#123; const currdata = item[ele]; // 因为额外加了_key属性，因此需要跳过这个属性 if (ele !== &quot;_key&quot;) &#123; if (Object.prototype.toString.call(currdata) === &quot;[object Object]&quot;) &#123; stack.unshift(&#123; ...currdata, _key: item._key ? item._key + &quot;.&quot; + ele : ele, &#125;); &#125; else &#123; const key = item._key ? item._key + &quot;.&quot; + ele : ele; delete currdata._key; res[key] = currdata; &#125; &#125; &#125;); item = stack.shift(); &#125; console.log(res); return res;&#125;","categories":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/categories/js/"}],"tags":[]},{"title":"大数据渲染","slug":"大数据渲染","date":"2024-02-06T06:54:33.511Z","updated":"2024-02-06T07:33:41.113Z","comments":true,"path":"2024/02/06/大数据渲染/","permalink":"https://1578536879.github.io/2024/02/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93/","excerpt":"","text":"大数据渲染table 分页 每页展示固定的数据 定时更新,分批渲染用requestAnimationFrame或者定时器, 加上DocumentFragment进行每次数据的加载 12345678910window.requestAnimationFrame(() =&gt; &#123; const fragment = new DocumentFragment(); const fruits = [&quot;Apple&quot;, &quot;Orange&quot;, &quot;Banana&quot;, &quot;Melon&quot;]; fruits.forEach((fruit) =&gt; &#123; const ele = document.createElement(&quot;p&quot;); ele.textContent = fruit; fragment.appendChild(ele); &#125;); document.body.appendChild(fragment);&#125;); requestAnimationFrame是在style/layout/paint之前触发 使用虚拟列表IntersectionObserver123456789101112// 新建一个监听对象let io = new IntersectionObserver( (entris) =&gt; &#123; console.log(&quot;IntersectionObserver&quot;, entris); &#125;, &#123; root: null, thresholds: 1, &#125;);// 开始监听io.observe(document.getElementById(&quot;b&quot;)); 当元素初次在页面上显示, 以及之后每次显示和隐藏都会触发回调 IntersectionObserver API 是异步的，不随着目标元素的滚动同步触发。 只有线程空闲下来，才会执行观察器。这意味着，这个观察器的优先级非常低，只在其他任务执行完，浏览器有了空闲才会执行。","categories":[{"name":"业务场景","slug":"业务场景","permalink":"https://1578536879.github.io/categories/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"}],"tags":[]},{"title":"v-model 和 reactive 组合使用的问题","slug":"v-model和reactive组合使用的问题","date":"2024-02-06T06:54:33.509Z","updated":"2024-02-06T07:33:18.115Z","comments":true,"path":"2024/02/06/v-model和reactive组合使用的问题/","permalink":"https://1578536879.github.io/2024/02/06/v-model%E5%92%8Creactive%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/","excerpt":"","text":"问题描述概述父组件的数据是一个reactive的数据，传入子组件时用v-model:xxx的形式传入子组件，那么子组件在此情况下调用update:xxx时，并不会引起父组件的数据变化(包含页面和通过watch等方式去监听的回调) 演示 父组件代码 1&lt;test v-model:data=&quot;testdata&quot; /&gt; 12345678910const testdata = reactive(&#123; name: &quot;父级参数&quot;,&#125;);watch( () =&gt; testdata, (val) =&gt; &#123; console.log(&quot;父级变化了11111&quot;, val); &#125;, &#123; deep: true &#125;); 子组件代码 1234567891011121314151617181920212223&lt;template&gt; &lt;div&gt; &lt;input :value=&quot;test.name&quot; @input=&quot;onIpt&quot;/&gt; &lt;/div&gt;&lt;/template&gt;&lt;script setup&gt;import &#123;reactive, watchEffect&#125; from &quot;vue&quot;const props = defineProps([&#x27;data&#x27;])const emit = defineEmits([&#x27;update:data&#x27;])const test = reactive(&#123; name: &quot;123&quot;&#125;)const onIpt = e =&gt; &#123; test.name = e.target.value console.log(&quot;子组件更新&quot;, test) emit(&quot;update:data&quot;, test)&#125;watchEffect(() =&gt; &#123; console.log(&quot;子组件接收到的父组件数据更新&quot;, test) test.name = props.data.name;&#125;)&lt;/script&gt; 实际操作 在进行输入的时候，只触发了onIpt函数，父组件的watch和子组件的watchEffect都未触发 原因在vue的官方文档上面写明的reactive的局限性： 有限的值类型 它只能用于对象类型 (对象、数组和如 Map、Set 这样的集合类型)。它不能持有如 string、number 或 boolean 这样的原始类型。 不能替换整个对象 由于 Vue 的响应式跟踪是通过属性访问实现的，因此我们必须始终保持对响应式对象的相同引用。这意味着我们不能轻易地“替换”响应式对象，因为这样的话与第一个引用的响应性连接将丢失 对解构操作不友好 当我们将响应式对象的原始类型属性解构为本地变量时，或者将该属性传递给函数时，我们将丢失响应性连接 上面第二条说明了reactive的响应式是依据 属性访问 实现的，而update:data的时候是传递的整个对象，所以并不会引起reactive的响应式。 解决方案父组件的数据改为refref是针对整体的一个响应式，因此就不会产生这个问题 利用js引用对象的特性，修改prop的属性1234567const onIpt = e =&gt; &#123; const data = props.data; data.name = e.target.value console.log(&quot;子组件更新&quot;, data) // 实际是否加上update的函数，父组件的watch都会触发 // emit(&quot;update:data&quot;, test)&#125; 但是这样不符合单向数据流的特性，因此这个方法不合适 父组件监听事件1&lt;test v-model:data=&quot;testdata&quot; @update:data=&quot;onUpdateData&quot;/&gt; 123const onUpdateData = (data) =&gt; &#123; console.log(&quot;父组件事件的回调&quot;, data)&#125; 这样在子组件调用update:data的方法时，也会触发父组件的onUpdateData方法","categories":[{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/categories/vue/"}],"tags":[]},{"title":"v-html渲染自定义组件","slug":"v-html渲染自定义组件","date":"2024-02-06T06:54:33.507Z","updated":"2024-02-06T07:33:00.298Z","comments":true,"path":"2024/02/06/v-html渲染自定义组件/","permalink":"https://1578536879.github.io/2024/02/06/v-html%E6%B8%B2%E6%9F%93%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6/","excerpt":"","text":"v-html渲染自定义组件前景 需求场景 后端返回的特定的元素，前端用穿梭框显示，拿到对应的元素后，将其替换为vant组件进行渲染。 坑点： v-html是vue3用于渲染html的指令，但是由于是直接渲染html的，自定义组件vue不会默认重新转化渲染。因此需要进行处理 方案使用vue自带的compile函数进行进行渲染转换，再用h函数进行显示 将v-html所用到的组件设置为全局组件 1234import &#123; Lazyload, SwipeItem, Swipe &#125; from &quot;vant&quot;;const app = createApp(App);app.component(&#x27;Swipe&#x27;, Swipe)app.component(&#x27;swipeitem&#x27;, SwipeItem) 新建一个用于渲染的组件 1234567891011121314 &lt;script lang=&quot;ts&quot;&gt; import &#123; h,&#125; from &#x27;vue&#x27;; // 如果直接从vue引入会报warning，因此引入路径需要修改 import &#123;compile&#125; from &quot;vue/dist/vue.esm-bundler.js&quot; export default &#123; props: &#123; html: &#123; type: String, required: true &#125; &#125;, setup(props)&#123; return () =&gt; h(compile(props.html)) &#125; &#125;&lt;/script&gt; 优缺点 优点 自定义组件也可以进行渲染 缺点 需要将用到的组件设置为全局组件，那么这样会使初始包变大 无法响应事件。组件标签上的事件无法执行，会有warning；事件只能在内部实现，无法暴露出去 参考link记录一下vue3 渲染带组件html字符串的方法","categories":[{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/categories/vue/"}],"tags":[]},{"title":"npm、npx与pnpm","slug":"npm、npx与pnpm","date":"2024-02-06T06:54:33.505Z","updated":"2024-02-06T07:32:44.837Z","comments":true,"path":"2024/02/06/npm、npx与pnpm/","permalink":"https://1578536879.github.io/2024/02/06/npm%E3%80%81npx%E4%B8%8Epnpm/","excerpt":"","text":"npm、npx 与 pnpmnpmnpm i与npm update npm i：先检查 node_modules 模块是否有对应的指定模块，如果存在，就不再进行安装，即使远程有新版本也不会重新获取 npm i在安装包的依赖包时，包的依赖包会安装符合规则的最高版本 npm 都要强制重新安装，可以使用-f 或–force 参数。 npm update：每次安装都会先请求远程仓库的最新版本，然后查询本地版本。 如果本地版本不存在或者远程版本较新，那么更新版本 安装非发布的包官网表明了如下几个情况可以直接使用 a:包含一个由 package.json 文件描述的程序的文件夹。 b:包含（a）的 gzipped tarball 。 c:解析为（b）的 URL。 d:&lt;name&gt;@&lt;version&gt;: 在 registry 上发布的(c) e:&lt;name&gt;@&lt;tag&gt; : 能指向（d）。 f:&lt;name&gt; 具有 latest 标签，且满足（e）。 g:git url，当 clone 时，得到（a） 1234git://github.com/user/project.git#commit-ishgit+ssh://user@hostname:project.git#commit-ishgit+http://user@hostname/project/blah.git#commit-ishgit+https://user@hostname/project/blah.git#commit-ish commit-ish 可以是任何 tag、分支或者 sha，可以用git checkout切换的，默认是master npm 缓存由于安装时，即使本地有缓存，但是也不会进行读取，那么这就导致在弱网或者无网情况下，无法安装依赖包或者安装速度极低 --cache-min：参数指定了一个时间(以分钟为单位)，只有超过这个时间的模块，才会从远程进行下载安装 1npm install --cache-min 9999999 &lt;package-name&gt; npm i流程 发出npm i命令 执行工程自身 preinstall 如果当前工程定义了 preintsall 钩子，那么会调用这个钩子函数 确定首层依赖 确定当前项目中package.json中的dependencies和devDependencies指定的模块 当前项目中的每个依赖包是每个依赖树的根节点，所以 npm 开启多线程对每个依赖包进行更深层级的节点 获取模块 确定下载的模块版本 如果版本描述文件（npm-shrinkwrap.json 或 package-lock. json）有对应模块的信息，那么直接依据对应的信息获取 如果没有，向registry查询模块压缩 包的网址，然后依据package.json文件中的版本去仓库中获取。 获取到模块的 resloved 字段，即压缩包的地址后。获取到后，npm 依据此地址检查本地缓存，如果缓存中有，那么直接从缓存中(只会检查node_modules目录，而不会检查~/.npm目录)拿；如果没有，那么从仓库中进行下载 查找该模块的依赖，如果有依赖则回到第一步，没有则停止 扁平化模块 获取到完整的依赖树后，里面可能包含大量的重复模块，npm3 之前会严格按照依赖树的结构进行安装，这样会造成大量的模块冗余； npm3 之后默认加入了一个dedupe的过程，遍历所有节点，将模块放在根节点下面（node_modules 下），当发现有了重复模块时，将其丢弃 重复模块：模块名相同且semver兼容。每个 semver 基本都对应一段版本允许范围，如果两个模块的版本允许范围有交集，那么可以得到一个兼容版本。这样就不需要版本号完全一致了，减少更多的冗余模块在这个阶段中直接去掉 比如 A 模块依赖 package@^1.0.0，B 模块依赖 package@^1.1.0，则 1.1.0 为兼容版本 node_modules–A node_modules–B node_modules--package@^1.1.0 比如 A 模块依赖 package@^1.0.0，B 模块依赖 package@^2.1.0，则没有兼容版本，会将一个版本放在 node_modules，一个继续保留在依赖树中 node_modules--A--package@^1.0.0 node_modules--B--package@^1.1.0 安装模块 下载压缩包，存放在~&#x2F;.npm 目录 解压到当前项目的 node_modules 目录 执行模块中的生命周期函数（按照 preinstall、install、postinstall 的顺序）。 执行当前项目自身的生命周期 当前 npm 工程如果定义了钩子此时会被执行（按照 install、postinstall、prepublish、prepare 的顺序）。 生成或者更新版本描述文件（npm-shrinkwrap.json 或 package-lock. json） npxnpx是npm@5.25.2增加的命令，如果 npm 版本低于这个版本，那么用npm i -g npx安装即可 与 npm 的不同 npx 是下载到一个临时目录中，然后使用完成之后，进行删除。没有 npm 一样的缓存 npx 还可以运行可执行文件(远程的也可以)，比如只安装 webpack 了，那么用npm run webpack会报错，用npx run webpack就可以成功运行 npx 会检查 node_modules 和系统变量$PATH的命令是否存在 --no-install: 如果本地不存在该模块，那么会报错。可以用于强制使用本地模块 --ignore-existing: 不管是否本地存在，都强制安装使用远程模块。可以用于获取最新的包，即用即删 pnpm硬连接与符号连接 硬连接：使用 inode 指向源文件，即使源文件目录地址变化了，但是依旧能进行访问。因为其 inode 仍指向该文件。没有对原始文件的引用。 符号连接：指向的源文件地址，如果源文件目的地址修改了，那么就无法再访问；如果有一个新的文件名字与源文件一致，那么再次访问时，访问的是新文件 pnpm缓存pnpm 和 npm 一样，有一个缓存目录 Mac&#x2F;linux 中默认会设置到{home dir}&gt;&#x2F;.pnpm-store&#x2F;v3；windows 下会设置到当前盘的根目录下，比如 C（C&#x2F;.pnpm-store&#x2F;v3）、D 盘（D&#x2F;.pnpm-store&#x2F;v3）。 pnpm 可以在一个电脑上不同的磁盘设置同一个分区，在这种情况下，pnpm 将复制包而不是硬链接它们，因为硬链接只能发生在同一文件系统同一分区上 npm 在安装时，不会去检查缓存；而 pnpm 在安装时，会先检查是否有对应包及其版本的缓存，如果有的话，直接硬链接到这个缓存地址 模块依赖 pnpm 使用平铺的方式，类似于npm2的结构，但是增加了一个.pnpm目录，其中的包命名格式如下： 12 .pnpm/&lt;organization-name&gt;+&lt;package-name&gt;@&lt;version&gt;/node_modules/&lt;name&gt;// 组织名(若无会省略)+包名@版本号/node_modules/名称(项目名称) 对于 PeerDependencies 来说，命名规则稍许不同 12.pnpm/&lt;organization-name&gt;+&lt;package-name&gt;@&lt;version&gt;_&lt;organization-name&gt;+&lt;package-name&gt;@&lt;version&gt;/node_modules/&lt;name&gt;// peerDep组织名(若无会省略)+包名@版本号_组织名(若无会省略)+包名@版本号/node_modules/名称(项目名称) pnpm 使用硬链接，将 node_modules 的包地址硬链接到 pnpm 的缓存中；对于同包同版本使用符号连接. npm 与 pnpm 差别 功能 pnpm npm 隔离的 node_modules ✅ ❌ 自动安装 peers ✅ 通过 auto-install-peers&#x3D;true ✅ Plug’n’Play(即插即用) ✅ ❌ 管理 Node.js 版本 ✅ pnpm env &lt;cmd&gt; ❌ 内容可寻址存储 ✅ ❌ Side-effects cache(缓存的副作用) ✅ ❌ 有锁文件 pnpm-lock.yaml package-lock.json 即用即删 pnpm dlx npx 参链 npm npm 模块安装机制与实现原理 npm 和 package.json 那些不为常人所知的小秘密 npx npx 简介 npx 是什么命令？npx 和 npm 有什么区别？ pnpm pnpm","categories":[{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/categories/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"}],"tags":[]},{"title":"Chrome的Performance","slug":"Chrome--performance","date":"2024-02-06T06:54:33.503Z","updated":"2024-02-16T06:29:19.886Z","comments":true,"path":"2024/02/06/Chrome--performance/","permalink":"https://1578536879.github.io/2024/02/06/Chrome--performance/","excerpt":"","text":"Chrome 的 performance开始记录可以通过调整这两个参数模拟低网低 cpu 情况 点击按钮，刷新页面或者只需要旁边的刷新按钮开始进行记录分析 操作设置栏 controls 可以通过这个下拉框看到之前的分析数据 其他配置 页面性能的高级汇总 overview 颜色表示 HTML 脚本 样式 媒体资源 其他资源 名称 描述 FPS，帧数 绿色竖线越高，FPS 越高。 FPS 图表上的红色块表示长时间帧，很可能会出现卡顿 CPU，CPU 资源 指示消耗 CPU 资源的事件类型 NET，网络请求 每条彩色横杠表示一种资源。横杠越长，检索资源所需的时间越长。 每个横杠的浅色部分表示等待时间（从请求资源到第一个字节下载完成的时间），可以在屏幕快照下面查看具体的网络请求数据 火焰图： CPU 堆叠可视化 Timing FCP: First Contentful Paint，白屏时间，第一个元素出现的时间 LCP: Largest Contentful Paint，视窗最大可见图片或者文本块的渲染时间 FMP: First Meaningful Paint，首次有效绘制时间，页面的“主要内容”开始出现在屏幕上的时间点 DCL: DOMContentLoaded Event，dom 加载完毕时间 L: Onload Event，完全加载完毕时间 名称 描述 Network 资源加载顺序及时长 Main 渲染进程中主线程的执行记录，点击 main 可以看到某个任务执行的具体情况 Timings 用户交互操作，比如点击鼠标、输入文字、动画等 Compositor r 合成线程的执行记录，用来记录 html 绘制阶段 (Paint)结束后的图层合成操 Raster 光栅化线程池，用来让 GPU 执行光栅化的任务 GPU GPU 进程主线程的执行过程记录，如 可以直观看到何时启动 GPU 加速 Frame ifream 框架加载详情 Memory 不同的时间段的执行情况。页面中的内存使用的情况 在火焰图上看到一到三条垂直的虚线。蓝线代表 DOMContentLoaded 事件。 绿线代表首次绘制的时间。 红线代表 load 事件 如果是耗时长的 Task，其右上角会标红，这个时候，我们可以选中标红的 Task，然后放大，看其具体的耗时点。放大后，这里可以看到都在做哪些操作，哪些函数耗时了多少,这里代码有压缩，看到的是压缩后的函数名。然后我们点击一下某个函数，在面板最下面，就会出现代码的信息，是哪个函数，耗时多少，在哪个文件上的第几行等。这样我们就很方便地定位到耗时函数了。 Summary性能摘要 颜色表示 Loading：网络通信和HTML解析 Scripting：JavaScript执行 Rendering：样式计算和布局，即重排 Painting：重绘 other：其它事件花费的时间 Idle：空闲时间 事件包含 参考Chrome Performance 使用栗子 Chrome Performance 页面性能分析指南 饼状图分析 performance","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[{"name":"浏览器 Performance Chrome","slug":"浏览器-Performance-Chrome","permalink":"https://1578536879.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8-Performance-Chrome/"}]},{"title":"【小程序】上传文件","slug":"【小程序】上传文件","date":"2024-02-06T06:54:33.501Z","updated":"2024-02-06T07:31:40.983Z","comments":true,"path":"2024/02/06/【小程序】上传文件/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90%E5%B0%8F%E7%A8%8B%E5%BA%8F%E3%80%91%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/","excerpt":"","text":"小程序上传文件选择文件拍摄或从手机相册中选择图片或视频。wx.chooseMedia 1234567891011121314151617181920212223/** * @description: 拍摄或从手机相册中选择图片或视频。 * @param &#123;*&#125; mediaType 文件类型 mix/video/image * @param &#123;*&#125; count 最多可以选择的文件个数，基础库2.25.0前，最多可支持9个文件，2.25.0及以后最多可支持20个文件 * @param &#123;*&#125; sourceType 图片和视频选择的来源 [&quot;album&quot;, &quot;camera&quot;] * @param &#123;*&#125; maxDuration 拍摄视频最长拍摄时间，单位秒。时间范围为 3s 至 60s 之间。不限制相册。 * @param &#123;*&#125; camera 仅在 sourceType 为 camera 时生效，使用前置或后置摄像头 * @return &#123;*&#125; 文件内容 */wx.chooseMedia(&#123; count, mediaType: [mediaType], sourceType, maxDuration, camera, success(res) &#123; return res; &#125;, fail(err) &#123; console.log(&quot;文件chooseMedia失败-----&quot;, err); reject(err); &#125;,&#125;); 从聊天会话选择文件。wx.chooseMessageFile 12345678910111213141516171819/** * @description: 从会话选择文件。 * @param &#123;*&#125; type 所选的文件的类型 * @param &#123;*&#125; count 最多可以选择的文件个数，可以 0～100 * @param &#123;*&#125; extension 根据文件拓展名过滤，仅 type==file 时有效。每一项都不能是空字符串。默认不过滤。 * @return &#123;*&#125; 文件内容 */wx.chooseMessageFile(&#123; count, type, extension, success(res) &#123; onHandleFile(res, &quot;path&quot;).then((data) =&gt; reslove(data)); &#125;, fail(err) &#123; console.log(&quot;文件chooseMedia失败-----&quot;, err); reject(err); &#125;,&#125;); 上传到后端调用 uploadFile 选择文件后，调用uploadFile传入本地路径，即可进行文件上传 123456789101112131415161718192021222324252627282930/** * @description: 进行文件上传 * @param &#123;*&#125; url 文件上传地址 * @param &#123;*&#125; filePath 要上传文件资源的路径 (本地路径) * @param &#123;*&#125; name 文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容 * @param &#123;*&#125; formData HTTP 请求中其他额外的 form data * @param &#123;*&#125; header HTTP 请求 Header，Header 中不能设置 Referer */new Promise((reslove, reject) =&gt; &#123; wx.showLoading(&#123; title: &quot;上传中...&quot;, mask: true, &#125;); wx.uploadFile(&#123; url, filePath, name, formData, header, success: (res) =&gt; &#123; reslove(res); &#125;, fail: (err) =&gt; &#123; reject(err); &#125;, complete: () =&gt; &#123; wx.hideLoading(); &#125;, &#125;);&#125;); 上传到腾讯云此方式在选择文件后，直接调用接口，无需再调用uploadFile 下载 sdk在腾讯云小程序上传中下载cos-js-sdk-v5.min.js文件，放入项目中 引入及配置1const cosSDK = require(&quot;../static/js/cos-js-sdk-v5.min.js&quot;); 进行腾讯云的 sdk 配置 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141 //生成随机数 const getRandomSecret = (num: number) =&gt; &#123; let t = &quot;xxx&quot;, a = t.length, n = &quot;&quot;; for (let i = 0; i &lt; num; i++) n += t.charAt(Math.floor(Math.random() * a)); return n; &#125;; //获取十位的时间戳 const getTimeStamp = (date?) =&gt; &#123; return Math.floor(new Date(date).getTime() / 1000); &#125;; //获取密钥 const getSDKToken = (fileName: string) =&gt; &#123; return new Promise((resolve, reject) =&gt; &#123; // 通过后端获取密钥 getCosToken(&#123;&#125;).then( (res) =&gt; &#123; const &#123; access_secret_id, access_secret_key, expiration, security_token, config, &#125; = res ?? &#123;&#125;; const &#123; bucket, region, tenant_id &#125; = config; const fileType = fileName.split(&quot;.&quot;).pop(); const ExpiredTime = getTimeStamp(expiration); const StartTime = getTimeStamp(new Date()); const random = getRandomSecret(7); uploadParams.Bucket = bucket; uploadParams.Region = region; //文件名是13位时间戳和7位随机数 uploadParams.Key = `$&#123;tenant_id&#125;/$&#123;StartTime&#125;$&#123;random&#125;.$&#123;fileType&#125;`; const cosInitParams: TCosInitParams = &#123; TmpSecretId: access_secret_id, TmpSecretKey: access_secret_key, SecurityToken: security_token, StartTime, ExpiredTime, &#125;; resolve(cosInitParams); &#125;, () =&gt; &#123; reject(&#123;&#125;); &#125; ); &#125;); &#125;; //配置sdk const configSDK = (params) =&gt; &#123; return new Promise((resolve) =&gt; &#123; cos = new cosSDK(&#123; getAuthorization: (options, callback) =&gt; callback(params), FileParallelLimit: 10, ChunkParallelLimit: 10, &#125;); resolve(&quot;success&quot;); &#125;); &#125;; //上传文件 const onUpload = (filePath) =&gt; &#123; return new Promise((resolve) =&gt; &#123; cos?.uploadFile( &#123; ...uploadParams, FilePath: filePath, onProgress: function (progressData) &#123; /* 非必须 */ console.log(&quot;--------onProgress--------&quot;); &#125;, &#125;, (err, data) =&gt; &#123; resolve(err || data); &#125; ); &#125;); &#125;;/** * @description: 开始cos上传 * @param &#123;*&#125; fileName 选择的文件名称 * @param &#123;*&#125; filePath 本地临时文件路径 (本地路径) * @param &#123;*&#125; fileSize 本地临时文件大小，单位 B * @param &#123;*&#125; fileType 选择的文件类型 * @return &#123;*&#125; */ const onStartUpload = async (fileName, filePath, fileSize, fileType) =&gt; &#123; // 因为从手机选择文件上传无法获取文件名称，如果在无名称时上传，那么会报错 if (!fileName) &#123; fileName = filePath.slice(filePath.indexOf(&quot;//&quot;) + 1); &#125; const sdkParams: TCosInitParams | &#123;&#125; = await getSDKToken(fileName); wx.showLoading(&#123; title: &quot;上传中...&quot;, mask: true, &#125;); return new Promise((resolve, reject) =&gt; &#123; configSDK(sdkParams as TCosInitParams).then(() =&gt; &#123; onUpload(filePath).then( (data: TCosUploadResponse) =&gt; &#123; const params = &#123; cos_file_name: fileName, cos_file_size: fileSize, cos_file_type: fileType, cos_url: data.Location, &#125; const &#123; cos_url, cos_file_name &#125; = params; //如果是视频的话需要额外传视频首祯图和视频封面 if (judgeFileType(cos_url) === &quot;video&quot;) &#123; const screen = getVideoScreen(cos_url); getThumbnailLogo(screen, cos_file_name).then( (res: TGetThumbnailLogoResponse) =&gt; &#123; const &#123; screen: logo &#125; = res ?? &#123;&#125;; wx.hideLoading(); resolve(&#123; ...params, cos_video_file_screen: screen, cos_video_thumbnail_logo: logo, &#125;); &#125; ); &#125; else &#123; wx.hideLoading(); resolve(params); &#125; &#125;, (error) =&gt; &#123; wx.hideLoading(); reject(error); &#125; ); &#125;); &#125;); &#125;; 使用12345678910111213141516uni.chooseMessageFile(&#123; count, type, extension, success(res) &#123; const tempFilePaths = res.tempFiles; const &#123; name, path, size, type &#125; = tempFilePaths[0]; onStartUpload(name, path, size, type).then((res) =&gt; &#123; reslove(res); &#125;); &#125;, fail(err) &#123; console.log(&quot;文件chooseMedia失败-----&quot;, err); reject(err); &#125;,&#125;);","categories":[{"name":"小程序","slug":"小程序","permalink":"https://1578536879.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}],"tags":[]},{"title":"【小程序】uniapp发布插件","slug":"【小程序】uniapp发布插件","date":"2024-02-06T06:54:33.499Z","updated":"2024-02-06T07:31:21.858Z","comments":true,"path":"2024/02/06/【小程序】uniapp发布插件/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90%E5%B0%8F%E7%A8%8B%E5%BA%8F%E3%80%91uniapp%E5%8F%91%E5%B8%83%E6%8F%92%E4%BB%B6/","excerpt":"","text":"【小程序】uniapp发布插件uni-modules-插件 新建发布uni_modules插件 在uni_modules右键，选择新建一个uni_modules插件 此时会生成一个插件模板代码 写好对应的文件后，在插件目录右键，选择发布到插件市场 填写好对应的信息后，直接进行保存即可 发布好后，即可在uniapp插件市场中进行下载 更新插件 更新好具体的内容后，右键选择发布到插件市场 更新即可 注意点 发布和导入是同一个项目 项目里面如果又导入了这个插件，那么在uni_modules下导入的插件会被覆盖 发布的包必须包含的文件 components/插件名/插件名.vue 如果没有这个文件，那么在发布时会报错 package.json 用于配置发布插件的一些信息","categories":[{"name":"小程序","slug":"小程序","permalink":"https://1578536879.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"}],"tags":[]},{"title":"【手写】call、apply、bind","slug":"【手写】call、apply、bind","date":"2024-02-06T06:54:33.497Z","updated":"2024-02-06T07:32:04.346Z","comments":true,"path":"2024/02/06/【手写】call、apply、bind/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90%E6%89%8B%E5%86%99%E3%80%91call%E3%80%81apply%E3%80%81bind/","excerpt":"","text":"callcall 可以改变调用函数时的 this 指向，当调用但什么都不传入时，默认是 window 对象 内部流程es 文档上编写的流程如下: 让一个函数 func 指向 this 如果这个函数 func 不能被调用，那么抛出 TypeError 准备尾调用 PrepareForTailCall 返回执行结果 思路 判断需要改变的 context 是否为空，如果为空，那么就默认指为 window。保留这个新的 context，作为后面函数调用时需要的 this 指向 将当前的 this 指向赋值给上一步保留的 context，作为 context 的一个属性 调用第一步保留的 context 的第二步赋值的属性函数，将所需要的参数传递给上一步新赋值的属性 实现 call 12345678910111213function call_handle_writing(fn) &#123; // ctx指向obj，因为fn为非空 const ctx = fn || window; // ctx.cb指向的是fn1 ctx.cb = this; // 获取参数 const args = [...arguments].slice(1); // 调用fn1函数，但是由于是ctx调用的，那么fn1被调用的时候的this指向是ctx const res = ctx.cb(...args); return res;&#125;Function.prototype.call_handle_writing = call_handle_writing; 使用 12345678function fn1() &#123; this.a = 1; console.log(&quot;out&quot;, this, arguments);&#125;let obj = &#123; a: 100,&#125;;fn1.call_handle_writing(obj, 1, 2, 3); apply实现流程 Let func be the this value. If IsCallable(func) is false, throw a TypeError exception. If argArray is either undefined or null, then a. Perform PrepareForTailCall().b. Return ? Call(func, thisArg). Let argList be ? CreateListFromArrayLike(argArray). Perform PrepareForTailCall(). Return ? Call(func, thisArg, argList). 其实就是接受一个数组作为参数，实际最后的调用时，调用的也是 call 方法 apply 调用 call 的时候，会用到扩展运算符，将参数放到 call 的参数中，因此这在一定程度上，导致了 apply 的性能会稍低于 call 具体实现1234567function apply_handle_writing(fn, params) &#123; if (Array.isArray(params)) &#123; return this.call_handle_writing(fn, ...params); &#125; return this.call_handle_writing(fn);&#125;Function.prototype.apply_handle_writing = apply_handle_writing; bind内部流程 Let Target be the this value. If IsCallable(Target) is false, throw a TypeError exception. Let F be ? BoundFunctionCreate(Target, thisArg, args). Let L be 0. Let targetHasLength be ? HasOwnProperty(Target, “length”). If targetHasLength is true, then a. Let targetLen be ? Get(Target, “length”).b. If targetLen is a Number, then i. If targetLen is +∞𝔽, set L to +∞. ii. Else if targetLen is -∞𝔽, set L to 0.iii. Else, Let targetLenAsInt be ! ToIntegerOrInfinity(targetLen). Assert: targetLenAsInt is finite. Let argCount be the number of elements in args. Set L to max(targetLenAsInt - argCount, 0). Perform SetFunctionLength(F, L). Let targetName be ? Get(Target, “name”). If targetName is not a String, set targetName to the empty String. Perform SetFunctionName(F, targetName, “bound”). Return F. 考虑场景： 12345function A() &#123;&#125;A.prototype.say = function () &#123;&#125;;function B() &#123;&#125;const C = A.bind(B);const c = new C(); 调用 bind 后，使用new去创建一个实例，那么在new的时候不应该改变this指向 在返回的函数中，用instanceof判断是否是通过new方法进行调用的 调用 bind 后，在 c 上面可以调用 A 上 prototype 的方法 采用继承的方式，在返回的函数上，继承 A 具体实现123456789101112131415function bind_handle_writing(fn) &#123; const that = this; const args = [...arguments].slice(1); function cb() &#123; const params = [...arguments, ...args]; fn = this instanceof cb ? this : fn; return that.call(fn, ...params); &#125; // 用一个中间函数，在原型链上加一层，防止属性覆盖 const buf = function () &#123;&#125;; buf.prototype = this.prototype; cb.prototype = Object.create(this.prototype); return cb;&#125;Function.prototype.bind_handle_writing = bind_handle_writing; 参考链接如何手写一个 bind 方法","categories":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/categories/js/"}],"tags":[]},{"title":"【前端缓存】随机数位置区别","slug":"【前端缓存】随机数位置区别","date":"2024-02-06T06:54:33.495Z","updated":"2024-02-06T07:30:56.880Z","comments":true,"path":"2024/02/06/【前端缓存】随机数位置区别/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90%E5%89%8D%E7%AB%AF%E7%BC%93%E5%AD%98%E3%80%91%E9%9A%8F%E6%9C%BA%E6%95%B0%E4%BD%8D%E7%BD%AE%E5%8C%BA%E5%88%AB/","excerpt":"","text":"文件随机数存放位置区别文件url+?+随机数 https://xxx?v=1.x.x 一般用于版本号对应的文件 https://xxx?c=s45sdf 一般用于文件内容生成的hash值 文件名+hash值https://xxxs45sdf hash值一般由文件内容生成 区别以上两种存放位置都可以使浏览器获取最新的文件，而不是走缓存拿文件 当前主流的一般是用文件名+hash值的形式。原因如下 一般发版时，是有html文件和js、css文件的。浏览器首先去请求html文件，html嵌入了js、css等其他文件。那么在请求html和js、css等文件的这个时间差内，如果采用第一种方式(文件url+?+随机数)，就容易出现问题 如果先发html文件，再发js、css等文件 客户请求时，浏览器不会走缓存，会去取最新的文件。 但是可能这个时候取的js、css文件还是老的文件。那么就导致客户端下次再去请求时，走的其实是缓存。 先发js、css等文件，再发html文件 对于有缓存的用户不会造成影响。 但是对于无缓存的用户，拿取数据时，会拿取到最新的js、css等文件，那么最直观的影响可能是页面样式问题。但当html发布成功后，页面会恢复正常 对于异步加载的情况 代码发布后，用户在使用过程中，进入了一个新路由 在新路由页面，获取的是最新的代码文件，但是在进入之前，获取的是老代码文件，那么这里就会导致新老代码文件交替，容易出现问题 因此，采用文件名+hash的方式，无论是先发html还是js、css文件，由于是直接通过文件名去获取的，那么就不会产生上述问题。 先发js、css等文件 由于文件名不同，由于文件名已经不一样了，所以不会覆盖掉之前存在的资源文件，客户端依旧可以安全的访问。 再发html文件 因为js、css等文件已经发布完毕了，那么当html更新了之后，再获取的js、css等文件就已经是最新的了 参链大公司里怎样开发和部署前端代码","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[]},{"title":"【wasb】环境搭建","slug":"【wasb】环境搭建","date":"2024-02-06T06:54:33.492Z","updated":"2024-02-06T07:30:28.782Z","comments":true,"path":"2024/02/06/【wasb】环境搭建/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90wasb%E3%80%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","excerpt":"","text":"【webAsb】- Emscripten环境搭建依赖环境 python git 这两项环境是必要的，否则无法进行安装 安装下载项目1git clone https://github.com/juj/emsdk.git 下载emscripten项目 安装依赖包等1234cd emsdk // 进入项目目录中emsdk update // 安装各种工具emsdk install latest //下载各种包，时间比较长emsdk activate latest //生成 ~/.emscripten 文件，激活配置 配置环境变量可以先执行emsdk_env脚本，这个脚本默认会写入环境变量，但是也会有不成功的情况。 在非emsdk目录下执行emcc --version，判断是否报错，如果报错，就证明环境并未配置成功；如果未报错，那么环境已经配置完成啦 环境未配置成功 执行 emcmdprompt.bat命令 将带有PATH +=的路径写入环境变量的Path中 将下面带有键值对的写入系统变量中 记住不能有空格，否则会执行不成功 在非emsdk目录下执行emcc --version 环境配置成功 配置c++环境安装配置c&#x2F;c++ 安装 安装c&#x2F;c++编译器：https://sourceforge.net/projects/mingw-w64/ 配置 在环境变量的Path中，把解压的mingw的bin目录加入进去 测试在cmd输入gcc -v，没有报错即可 参链 测试编写测试程序建立一个cpp文件，写入c的代码 12345678#include &lt;iostream&gt;using namespace std;int main() &#123; cout &lt;&lt; &quot;Hello, world!&quot; &lt;&lt; endl; return 0;&#125; 生成js代码 emcc test.cpp -o test.html 会生成html，js和wasm文件，html默认引入js文件，js的作用是引入wasm文件 -s 表明编译到 Wasm，否则编译到 Asm.js（Wasm 的前身）， 最初 emscripten 是用于编译到 Asm.js 的。 SIDE_MODULE 表明编译为副模块。有副模块就有主模块，简单理解副模块会去除 C 标准库函数，因为副模块会在运行时被链接到一个主模块，而主模块有C标准库函数。SIDE_MODULE的值可选 1 或者 2，前者会自动导出代码里所有的函数，而后者需要手动声明。 -o xxxx 导出选项，导出的文件可选 .html、.js、.wasm，区别在于前面两者会帮你把胶水代码写好 ，而 .wasm 则需要在 JS 自己编写胶水代码了，但是前面两者代码冗余，比如编译为 JS 文件时，JS 文件会包含两千多行代码，不过这是学习 Wasm 的现成实例。 搭建本地服务器在代码路径中，搭建本地服务。在浏览器访问本地的文件会报错 pnpm init 创建package.json文件 pnpm i http-server 安装http-server http-server -o 起本地服务，在浏览器打开html文件 验收用http-server起了本地服务后，在浏览器访问对应的域名加上生成的html文件，正常运行项目 参链Emscripten编译器安装教程，亲测成功编译出第一个WebAssembly","categories":[{"name":"webAssembly","slug":"webAssembly","permalink":"https://1578536879.github.io/categories/webAssembly/"}],"tags":[]},{"title":"【pwa】mainifest","slug":"【pwa】mainifest","date":"2024-02-06T06:54:33.472Z","updated":"2024-02-06T07:26:01.903Z","comments":true,"path":"2024/02/06/【pwa】mainifest/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90pwa%E3%80%91mainifest/","excerpt":"","text":"mainifest.json用途通过 manifest.json 可以实现自定义启动画面、打开 url、设置界面颜色、设置桌面图标等 常用字段123456789101112131415&#123; &quot;short_name&quot;: &quot;pwa1&quot;, &quot;name&quot;: &quot;pwa-测试用例1&quot;, &quot;icons&quot;: [ &#123; &quot;src&quot;: &quot;qr-code-fill-144.png&quot;, &quot;sizes&quot;: &quot;144x144&quot;, &quot;type&quot;: &quot;image/png&quot; &#125; ], &quot;start_url&quot;: &quot;/test1&quot;, &quot;display&quot;: &quot;standalone&quot;, &quot;theme_color&quot;: &quot;blue&quot;, &quot;background_color&quot;: &quot;black&quot;&#125; name: string 描述应用的名称，会显示在桌面图标的标题位置和启动画面中 short_name: string 描述应用的短名称。当应用名字过长，在桌面图标无法全部显示时，会显示 shortname scope：string 设置 manifest 对于网站的作用范围。 start_url: string 描述用户从设备主屏幕点击图标进入时的第一个地址，start_url 必须在 scope 的作用范围内 如果为空，则以 manifest.json 作为 url 如果 url 打开失败，则和正常显示的网页打开错误的样式一样 如果设置的 url 和当前的项目不在一个域下，无法正常显示 如果 starturl 为相对地址，那么根路径基于 manifest 的路径 如果 starturl 为绝对路径，那么根路径为将 icon：TIcon 设置 webapp 图标集合。 12345type TIcon = &#123; src: string; //图标地址 type: string; //图标mime类型，只能为image/png sizes: string; //图标大小，用来表示width x height，单位为px，如果图标要适配多个尺寸，则多个尺寸用空格隔开。与真实图片大小要一致&#125;; 适配规则： 将 webapp 添加到桌面时，浏览器会适配最合适尺寸的图标。浏览器会首先去找与显示密度想匹配且尺寸调整为 48dp 屏幕密度的图标。例如在 2 倍像素的设备上使用 96px，3 倍像素的设备上使用 144px 的 如果没有找到合适的图标，那么会查找与设备特性匹配度最高的图标 如果图标路径错误，那么将显示浏览器的默认图标 background_color: string 启动画面的背景颜色。rgbs、hsl、hsla 等写法浏览器不支持。未设置时，默认白色 theme_color: string 显示 web app 的主题色，显示在 banner 位置 display: &#39;fullscreen&#39;|&#39;standalone&#39;|&#39;minimal-ui&#39;|&#39;browser&#39; webapp 被启动时显示的类型 orientation: &#39;landscape-primary&#39;|&#39;landscape-secondary&#39;|&#39;landscape&#39;|&#39;portrait-primary&#39;|&#39;portrait-secondary&#39;|&#39;portrait&#39;|&#39;natural&#39;|&#39;any&#39; webapp 在屏幕上的显示方向 dir: &#39;ltr&#39;|&#39;rtl&#39;|&#39;auto&#39; 文字的显示方向 related_applications: &#39;platform&#39;|&#39;id&#39; 用于定义对应的原生应用，类似应用安装横幅提示的形式去推广、引流原生应用 prefer_related_applications: Boolean 设置是否只允许用户安装原生应用 生效条件 必须是 https 或者 localhost 必须注册运行 service worker，且有 fetch 事件监听 manifest 必须要有 icons,且必须要至少有尺寸为144x144的 diaplay 设置为 standalone 或者 fullscreen 必须有 name 或者 short_name，start_url prefer_related_applications 未设置或者为 false 引导安装12345678910111213window.addEventListener(&quot;beforeinstallprompt&quot;, (e) =&gt; &#123; console.log(&quot;beforeinstallprompt&quot;); e.preventDefault(); e.prompt();//显示安装弹窗&#125;);navigator.serviceWorker .register(&quot;pwa1.js&quot;) .then((res) =&gt; &#123; console.log(&quot;service-pwa1注册成功&quot;, res); &#125;) .catch((err) =&gt; &#123; console.log(&quot;service-pwa1注册失败&quot;, err); &#125;);","categories":[{"name":"PWA","slug":"PWA","permalink":"https://1578536879.github.io/categories/PWA/"}],"tags":[]},{"title":"【HTML】templates and slots","slug":"【HTML】templates and slots","date":"2024-02-06T06:54:33.470Z","updated":"2024-02-06T07:25:37.552Z","comments":true,"path":"2024/02/06/【HTML】templates and slots/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90HTML%E3%80%91templates%20and%20slots/","excerpt":"","text":"【HTML】templates and slots概况可以用来灵活填充 Web 组件的 shadow DOM 的模板。可以复用相同的标记结构。 使用 编写一个 template 直接在页面中编写一个 template 不会直接在页面中显示出来 12345678910&lt;template id=&quot;test&quot;&gt; &lt;style&gt; p &#123; color: white; background-color: #666; padding: 5px; &#125; &lt;/style&gt; &lt;p&gt;测试template&lt;/p&gt;&lt;/template&gt; 注册自定义模板 12345678910111213customElements.define( &quot;test-template&quot;, class extends HTMLElement &#123; constructor() &#123; super(); let template = document.getElementById(&quot;test&quot;); let templateContent = template.content; const shadowRoot = this.attachShadow(&#123; mode: &quot;open&quot; &#125;); shadowRoot.appendChild(templateContent.cloneNode(true)); &#125; &#125;); 组件显示 1&lt;test-template /&gt; 页面显示 template 的元素的样式也是独立的，并不会因为父级定义的同一个样式而影响内部。 虽然 template 和使用在同一个页面，但是如果直接在 Elements 面板里面修改 template 的内容，不会影响到渲染的地方。 添加 slot 添加的slot的样式只收到父级的影响，并不会受到template中定义的样式影响 如果是template中并没有定义对于的slot，那么传入的slot并不会被渲染 12345678910111213141516&lt;template id=&quot;test&quot;&gt; &lt;style&gt; p &#123; color: white; background-color: #666; padding: 5px; &#125; &lt;/style&gt; &lt;slot&gt;&lt;/slot&gt; &lt;slot name=&quot;text1&quot;&gt;&lt;/slot&gt; &lt;p&gt;测试template&lt;/p&gt;&lt;/template&gt;&lt;test-template&gt; &lt;p&gt;默认slot的内容&lt;/p&gt; &lt;p slot=&quot;text1&quot;&gt;具名插槽的内容&lt;/p&gt;&lt;/test-template&gt; 获取slot名 12345let el = document.querySelectorAll(&#x27;test-template p&#x27;) el.forEach(ele=&gt;&#123; console.log(ele.slot) &#125;)// 输出：&quot;&quot;, &quot;text1&quot;, &quot;text2&quot; 参链使用 templates and slots shadow dom解析","categories":[{"name":"HTML","slug":"HTML","permalink":"https://1578536879.github.io/categories/HTML/"}],"tags":[]},{"title":"【HTML】Shadow DOM","slug":"【HTML】Shadow DOM","date":"2024-02-06T06:54:33.468Z","updated":"2024-02-06T07:23:51.448Z","comments":true,"path":"2024/02/06/【HTML】Shadow DOM/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90HTML%E3%80%91Shadow%20DOM/","excerpt":"","text":"【HTML】Shadow DOM概况定义能够为 Web 组件中的 DOM 和 CSS 提供了封装，实际上是在浏览器渲染文档的时候会给指定的 DOM 结构插入编写好的 DOM 元素，但是插入的 Shadow DOM 会与主文档的 DOM 保持分离，也就是说 Shadow DOM不存在于主 DOM 树上。shadow root 节点为起始根节点，在这个根节点的下方，可以是任意元素，和普通的 DOM 元素一样。 并且 Shadow DOM 封装出来的 DOM 元素是独立的，外部的配置不会影响到内部，内部的配置也不会影响外部。 查看控制台-》设置按钮-》Preference -》 Elements -》点击 show user anent shadow dom 的 checkbox 打开之后可以看到一些元素的真实布局及内容组成。 结构 Shadow host：一个常规 DOM 节点，Shadow DOM 会被附加到这个节点上。 Shadow tree：Shadow DOM 内部的 DOM 树。 Shadow boundary：Shadow DOM 结束的地方，也是常规 DOM 开始的地方。 Shadow root: Shadow tree 的根节点。 custom element(自定义标签)概况可以注册一个自定义标签，CustomElementRegistry提供注册自定义元素和查询已注册元素的方法，使用customElements可以直接获取其实例。 方法 方法名 作用 参数 返回值 customElements.define 定义了一个自定义元素 name: 自定义元素名; constructor: 自定义元素构造器; options: 控制元素如何定义(目前只支持extends) - customElements.get 返回以前定义自定义元素的构造函数 name: 返回引用的构造函数的自定义元素的名字 指定名字的自定义元素的构造函数，如果没有使用该名称的自定义元素定义，则为undefined。 customElements.upgrade 将更新节点子树中所有包含阴影的自定义元素，甚至在它们连接到主文档之前也是如此 root: 待升级的包含阴影的派生元素节点 - customElements.whenDefined 当一个自定义节点被定义时走入then，如果这个元素名没有被定义，那么返回的是一直pending状态 name: 自定义元素名 Promise 使用1customElements.define(&quot;test-shadow-dom&quot;, TestShadowCls) 使用挂载 shadow dom可以调用Element.attachShadow将 Shadow Dom 选择挂载或者卸载。此方法返回的是一个类 dom，可以像操作普通 dom 一样对其进行操作 参数名 作用 可选值 mode 指定 Shadow DOM 树封装模式的字符串 open&#x2F;closed delegatesFocus 焦点委托 boolean 挂载 1234const shadow = el.attachShadow(&#123; mode: &quot;open&quot;,&#125;);console.dir(shadow); 操作 shadow dom 12const html = `&lt;p&gt;测试1&lt;/p&gt;`;shadow.innerHTML = html; 自定义元素Shadow DOM 可以渲染自定义的元素，类似于 vue3 中的组件，但里面的样式并不互相干扰。 新建类 12345class TestShadowCls extends HTMLElement &#123; constructor() &#123; super(); //必要的，因为属于子类 &#125;&#125; 创建一个 Shadow DOM 并为其加上需要的数据 123456789101112131415161718addShadow()&#123; this.shadow = this.attachShadow(&#123; mode: &quot;open&quot; &#125;)&#125;createChild()&#123; const el = document.createElement(&quot;div&quot;); const pel = document.createElement(&quot;p&quot;); pel.textContent = &quot;测试文案&quot;; pel.setAttribute(&quot;class&quot;, &quot;test&quot;) const imgae = document.createElement(&quot;img&quot;); imgae.setAttribute(&quot;src&quot;, &quot;https://psstatic.cdn.bcebos.com/video/wiseindex/aa6eef91f8b5b1a33b454c401_1660835115000.png&quot;) imgae.src=&quot;https://psstatic.cdn.bcebos.com/video/wiseindex/aa6eef91f8b5b1a33b454c401_1660835115000.png&quot;; el.appendChild(pel); el.appendChild(imgae) this.shadow.appendChild(el)&#125; 定义自定义的元素名 1customElements.define(&quot;test-shadow-dom&quot;, TestShadowCls) 使用 123456&lt;style&gt; p&#123; color: red; &#125;&lt;/style&gt;&lt;test-shadow-dom /&gt; 渲染效果如下，里面的文案并没有因为style加上的元素样式而生效 添加样式 12345678910createClass()&#123; const style = document.createElement(&quot;style&quot;); style.textContent = ` .test&#123; color: blue; font-weight: 600 &#125; ` this.shadow.appendChild(style)&#125; 加上了之后，样式生效 参链使用 shadow DOM 究竟什么是 Shadow DOM？","categories":[{"name":"HTML","slug":"HTML","permalink":"https://1578536879.github.io/categories/HTML/"}],"tags":[]},{"title":"【devTools】常用面板","slug":"【devTools】常用面板","date":"2024-02-06T06:54:33.466Z","updated":"2024-02-06T07:17:45.233Z","comments":true,"path":"2024/02/06/【devTools】常用面板/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90devTools%E3%80%91%E5%B8%B8%E7%94%A8%E9%9D%A2%E6%9D%BF/","excerpt":"","text":"【devTools】常用面板Elements面板将元素存入变量 右击 选择store as global variable 通过$0、$1…获取对应的元素 console面板自动合并相似信息Group similar message in console，浏览器默认开启的 Hide network隐藏网络的错误提示信息 preserve log页面跳转时保留console信息 show timestamps打印时，会默认输入每一行信息的时间 打开：devtools右上角设置按钮，perferces下show timestamps $_作用：获取最近一次的执行结果 $和$$$：document.querySelector $$: document.querySelectorAll $x可以使用xpath选择元素。 eg：$x(“&#x2F;html&#x2F;body&#x2F;div”) debug执行到该函数时就会触发断点 12345const fn = () =&gt; &#123; return 1;&#125;debug(fn)fn() monitor函数执行时打印参数值，但无法打印箭头函数的参数 执行unmonitor删除效果 123456function fn3(a, b)&#123; return a+b&#125;monitor(fn3)fn3(1,2)//输出：VM3370:1 function fn3 called with arguments: 1, 2 monitroEvents监听并打印元素触发的事件，可以用数组一次性监听多个事件。 执行unmonitorEvents取消监听 getEventListeners获取注册在元素上的所有事件监听器 queryObjects获取所有原型链中包含该原型的对象 source面板FileSystem可以直接与本地的文件连接，在devtools修改文件之后，会将本地的文件内容也进行修改 overrides可以以本地的文件取代页面中载入的资源 断点条件断点在source代码块需要设置时，在对应的行号右键，选择Add Condition Break Point，写上具体的条件 断点打印信息，Logpoint在执行时经过该程序代码时打印信息 dom断点在element tab，右键元素，展开break on，有三种断点形式： subtree modifications ：元素内发生变化时暂停，如添加、删除、修改子节点 attribute modifications ：添加、删除、修改元素本身的属性时暂停 node removal：元素被删除时暂停，同时删除dom断点 请求断点在debugger时，点击在XHR&#x2F;fetch Breapoints列表右上角的+按钮，输入data，回车保存。 事件监听器断点在debugger时，在Event Listener BreakPoint列表的Control下勾选对应的事件，然后手动触发对应的事件 忽略进入文件在对应的文件代码内容区域，右键选择Add script to ignore list，添加之后，这个文件就不会在调试时进入了 NetWork设置区域 Use large request rows 使用宽版的流量记录列表来显示 Group by frame 将来自相同iframe的请求聚焦在一起 show overview 是否显示时间轴 Capture screenslots 是否截图","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[]},{"title":"【devTools】performance","slug":"【devTools】performance","date":"2024-02-06T06:54:33.464Z","updated":"2024-02-06T07:17:15.144Z","comments":true,"path":"2024/02/06/【devTools】performance/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90devTools%E3%80%91performance/","excerpt":"","text":"Performance面板开始前提 保持环境整洁，例如使用隐私模式、清除缓存等 确定目标，在执行过程中，尽可能缩短持续时间，避免额外的操作等 开始记录 打开devTools，切换到Performance面板 点击左上角的圆形按钮开始记录 记录过程种可以做一些交互 点击stop停止监测 生成内容 工具栏：与整体面板有关的操作选项和设置 overview图表：可视化呈现完整时间轴的基本信息 Activities：将性能信息以方块式的Activity为单位显示在不同种类的列表中 工具栏 Disabled Javascript Call StackMain列表不会显示js的Call stack信息 Enable advanced paint instrumentation记录绘制性能的详细信息，并显示在 Frames：Frame activity的Layers分页 Main：Paint activity的Paint Profiler分页 Overview图表 名称 描述 FPS，帧数 绿色竖线越高，FPS 越高。 FPS 图表上的红色块表示长时间帧，很可能会出现卡顿 CPU，CPU 资源 指示消耗 CPU 资源的事件类型 NET，网络请求 每条彩色横杠表示一种资源。横杠越长，检索资源所需的时间越长。 每个横杠的浅色部分表示等待时间（从请求资源到第一个字节下载完成的时间），可以在屏幕快照下面查看具体的网络请求数据 FPS绿色方块：每秒帧数的变化，红色、粉色横条为低帧数警告，即可能会让用户感受到卡顿的部分 CPU 灰色：浏览器内部的工作 蓝色：HTML请求、文件解析 黄色：事件、js 绿色：图像处理、画面绘制 紫色：样式计算 NET 蓝色：有请求正在执行 深色：优先权较高的请求 ActivitiesMain 作用 显示主线程所有的任务，持续事件超过50ms（长任务）的任务会以红色虚线和右上角的三角形标识 任务底下的Activities依据类型有不同颜色，黄色的js Activity底下以随机颜色显示Call Stack Activities Network 左侧的细线：连接至发送请求前 浅色区域：等待服务器响应 深色区域：下载资源 右侧的细线：解析资源 左上角的小方块：请求优先级，深色表示高，浅色表示浅 Frames显示每一帧画面的详细信息 Timeings显示网页使用的重要时间点 DCL：HTML已经加载且解析完毕 FP：绘制出默认背景颜色之外的任何内容 FCP：绘制出任何文字、图片、有颜色的canvas时 LCP：绘制出页面最大的内容时 L：解析HTML期间请求的资源都载入完成时 Experience显示所有元素位移并计算分数，越低表示页面稳定性越高 GPU显示GPU的使用事件 Raster定义：浏览器渲染流程中Paint阶段的一环 作用：显示产生Raster时各个线程的信息 信息面板： summary：显示activity的持续时间，并将期间发生的其他activities分类显示 botton-up：将同一种activity的运行时间加总 call tree：以触发关系自上而下显示activities，最上方的称为root activity，是下面各个activities的起点 event log：以时间顺序显示activities 注：activity占用主线程超过50ms会被加上红色三角形，成为long task Summary显示该Activity的持续事件，并将期间发生的其他Activists分类显示 call tree call tree会显示任务由哪些activities组成，若activity的类型为程序代码，则层层展开可以看到函数的call stack self time 函数本身的运行时间，并不包含函数执行其他函数的时间 total time 函数本身和其下所有函数的运行时间的总和 bottom-up会将同一种activity的运行时间加总，因此分页中self time较长的函数通常是性能瓶颈的来源 注：总运行时间长也可能是因为执行次数多 Event Log以触发事件顺序显示Activities performance monitor打开1、在devtool按esc打开drawer，在左上角三个点打开 2、在devtools右上角的三个点，打开more tools打开 作用实时监测性能信息，用于检查特定功能是否存在内存泄漏的问题，实时反应内存用量的趋势。一般会把重点放在js heap size（js内存使用占有量）和dom tools Web VitalsLCP：前端性能指标，用于表示加载速度可以在performance的timeing中可以看到 FID：表示首次输入延迟通过rendering分页的Core Web Vitals来判断 CLS：表示累计布局偏移通过performance的Experience的layout shift标签","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[]},{"title":"【devTools】layers","slug":"【devTools】layers","date":"2024-02-06T06:54:33.462Z","updated":"2024-02-06T07:16:46.967Z","comments":true,"path":"2024/02/06/【devTools】layers/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90devTools%E3%80%91layers/","excerpt":"","text":"【devTools】layers元素绘制可以查看哪些元素正在绘制 打开 在devtools页面按esc，点击左上角的三个点，打开rendering分页 勾选对应的选项 页面表现 勾选了paint flashing 元素正在绘制时，会由绿色小框表示 勾选layer borders 可以显示每个图层的区域范围 layers打开在devtools右上角三个点，点击more tools，点击layers打开layers标签 效果 可以显示当前页面存在哪些图层，对于具体的图层，可以看到其对应的大小、产生原因及内存占有量","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[]},{"title":"【css】记录小点","slug":"【css】记录小点","date":"2024-02-06T06:54:33.458Z","updated":"2024-02-06T07:16:27.552Z","comments":true,"path":"2024/02/06/【css】记录小点/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90css%E3%80%91%E8%AE%B0%E5%BD%95%E5%B0%8F%E7%82%B9/","excerpt":"","text":"border：0与border：none区别相同点两者都可以将元素的边框设为不可见 不同点 性能差异 border：0 其表示为将元素边框设置为0像素，虽然在页面上无法看见，但是浏览器依旧会对边框进行渲染。因此渲染的是一个像素为0的b order。 即border：0依旧会占用内存 border：none 其表示的是将元素边框设置无，因此浏览器在解析时，并不会对其进行渲染 即其不会占用浏览器内存 兼容 在ie6&#x2F;7的button元素中，border：none并不会生效 垂直居中图片123display: table-cell;// 子元素vertical-align: center; 文字 line-height 12height: 20px;line-height: 20px; line-height line-height指的是两行文字基线与基线之间的高度 单位为%时，计算规则是相对于当前元素的font-size计算的，即0.x*fontsize 无单位时，是相对于当前元素的font-size计算的，即x*fontsize vertical-align 元素没有设置时，继承的是父元素line-height的像素值，即如果父元素的line-height是%单位，那么浏览器计算出来的实际line-height值才会被子元素继承。 元素选择器 选择器 说明 # id选择器 . class选择器 M N 后代选择器，选择M元素内部后代的所有N元素 M&gt;N 子代选择器，选择M元素内部后代的第一个子级N元素 M～N 兄弟选择器，选择M元素后所有的同级N元素 M+N 相邻选择器，选择M元素相邻的下一个N元素，M和N是同一级 包含块作用与css盒子模型类似。作用是为这个矩形内部的后代元素提供一个参考，一个元素的大小和定位往往是由该元素所在的包含块决定的。 类型 根元素 html元素，它没有父元素，是页面中最顶端的元素。根元素存在的包含块，被称为初始包含块。 固定定位元素 若元素的position&#x3D;fixed，那么它的包含块是当前可视窗口，即当前浏览器的窗口 静态定位和相对定位元素 若元素的position&#x3D;relative&#x2F;absolute，那么其包含块是由离他最近的块级祖先元素创建的。祖先元素必须是block、inline-block或table-cell 绝对定位元素 若元素的position&#x3D;absolute，那么其包含块是最近的position！&#x3D;static的元素。祖先元素可以是块元素，也可以是行内元素 emem是相对于当前元素的父元素计算的 但是当用于fontsize时，如果多有个嵌套的元素，那么从父层到子层，其元素字号会越来越小 background-size: auto 渲染规则 如果图像没有内在尺寸和内在比例 按背景定位区域的大小进行渲染，等同于设置属性100% 水平和垂直方向同时具有内在尺寸 按图像原始大小进行渲染 没有内在尺寸，但有内在比例 渲染效果等同于contain 只有一个方向有内在尺寸，但具有内在比例 图像会拉伸到该内在尺寸的大小，同时宽高比符合内在比例 只有一个方向有内在尺寸，没有内在比例 图像有内在尺寸的一侧会拉伸到该内在尺寸大小，没有设置内在尺寸的一侧会拉伸到背景定位区域大小 ##background-size：一个为auto，一个为非auto 有内在比例 会拉伸到指定的尺寸，宽高依然保持原有的比例 没有内在比例 图像会拉伸到指定尺寸。 如果图像有内在尺寸，则auto到计算尺寸就是图像的尺寸 如果图像没有内在尺寸，那么auto的计算尺寸就是背景定位区域的尺寸 background-position 只有一个值 例如：20px &#x3D;&#x3D; 20px center 如果只有一个值，那么无论是具体的数值或者百分比或者是关键字，另一个值一定是center 两个值 两个都是关键属性值 left、right表示水平，top、bottom表示垂直。 不能包含对立的方位，即top bottom是无效的 一个是关键属性值，一个是数值或者百分比 如果第一个值是百分比或者数值，那么表示水平方向，另一个关键属性值表示垂直方向 如果第一个值是关键属性值，那么表示水平方向，另一个百分比或者数值表示垂直方向 两个值都是数值或者百分比 第一个表示水平方向，第二个表示垂直方向 3个值或者4个值 数值和百分比表示偏移量，第一个值一定要是关键属性值，这个关键属性值表示偏移方向 opacityopacity不等于1的元素会创建一个层叠上下文，层叠顺序会变高 border-raduis语法 只有一个值 表示圆角属性作用在全部四个角上 有两个值 第一个作用于左上角和右下角，第二个作用于右上角和左下角 三个值 第一个作用于左上角，第二个作用于右上角和左下角，第三个作用于右下角 四个值 按照顺时针的方向，左上、右上、右下、左下 水平半径和垂直半径12border-left-top-radius: 10px 20pxborder-raduis：10px / 20px 表示圆角是水平半径为10px，垂直半径为20px的椭圆产生的 重叠曲线f&#x3D;min(Lh&#x2F;Sh, Lv&#x2F;Sv) S为半径之和，L为元素宽高，h和v表示方向，f为计算值。 Lh：元素宽 Sh：垂直方向的半径和 Lv：元素高度 Sv：水平方向的半径和 如果f计算值小于1，那么所有圆角半径都乘以f eg： 1234border-top-left-raduis：30px 100%；border-bottom-left-raduis：30px 100%；width：150px；height：100px； 左上角和左下角的垂直半径是100%（元素高），水平半径是30pxf&#x3D;min（150&#x2F;60，100&#x2F;200）&#x3D;0.5 所以渲染结果为 12border-top-left-raduis：15px 50%；border-bottom-left-raduis：15px 50%；","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[]},{"title":"【css】滚动贴合","slug":"【css】滚动贴合","date":"2024-02-06T06:54:33.456Z","updated":"2024-02-06T07:16:04.953Z","comments":true,"path":"2024/02/06/【css】滚动贴合/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90css%E3%80%91%E6%BB%9A%E5%8A%A8%E8%B4%B4%E5%90%88/","excerpt":"","text":"【css】滚动贴合scroll-snap-type作用可以设置滚动贴合的方向和方式。 属性 none 没有贴合点的效果 x&#x2F;y 或者 inline&#x2F;block x: 可以设置水平轴上的捕捉位置 y: 可以设置垂直轴上的捕捉位置 block 可以设置块状元素排列一个滚动方向的捕捉位置，默认文档流指的是垂直方向 inline 可以设置内联状元素排列一个滚动方向的捕捉位置，默认文档流指的是水平方向 在默认文档流的情况下，这x和inline, y和block的表现都是一样的。但其实际上还是有区别的 x和y是物理轴，x对应于水平滚动，y对应于垂直滚动。 block和inline是逻辑轴，block对应于垂直滚动，inline对应于水平滚动。 在改变文档流(writing-mode)之后，那么x和inline的表现就会不一致了。 普通文档流的情况下，设置的x属性，贴合属性的生效 改变文档流的情况下，设置的x属性，贴合属性的不生效 改变文档流的情况下，设置的inline属性，贴合属性的生效 both 滚动容器会独立捕捉到其两个轴上的位置（可能会捕捉到每个轴上的不同元素） 不管是正常文档流和改变文档流后，都会被捕获 mandatory和proximity mandatory 滚动操作结束后，滚动容器必须对齐到最近的一个滚动捕捉点。无论用户滚动的距离有多远，都会强制对齐到最近的捕捉点。这种模式下，用户不能停在两个捕捉点之间。 proximity 当滚动操作结束后，只有当最近的滚动捕捉点在一定范围内时，滚动容器才会对齐到该捕捉点。如果最近的捕捉点距离太远，用户可以停在两个捕捉点之间。 所以，mandatory比proximity更严格，它会强制滚动容器对齐到最近的滚动捕捉点，而proximity则允许用户在两个滚动捕捉点之间停下。 scroll-snap-align作用用于子元素的属性，设置其捕获点 属性 start 设置捕获点为元素的起始位置 center 设置捕获点是元素居中 start 设置捕获点为元素的结束位置 scroll-margin &#x2F; scroll-padding作用可以设置贴合间距 scroll-margin是作用于子元素的，而scroll-margin是父元素才生效的。这两个属性和margin&#x2F;padding一样，可以设置例如scroll-margin-top这些属性用于不同方向的样式 scroll-behavior作用可以设置滚动时是否需要显示动画 属性 auto 默认值，表示滚动行为立即跳转到目标位置，没有过渡效果 smooth 滚动行为会平滑地过渡到目标位置，产生一种动画效果。 overscroll-behavior作用用于控制页面在滚动到底部或顶部时的行为。即如果子元素滚动到最底部后继续滚动，是否需要连带父元素滚动 属性 auto 允许滚动行为传播到父元素 contain 防止滚动行为传播到父元素，但允许页面的弹性滚动效果（比如在移动设备上，滚动到底部时页面会稍微弹一下） none 不允许滚动行为传播到父元素 兼容性 scroll-snap-type 和 scroll-snap-align：这两个属性在所有主流浏览器中都得到了支持，包括 Firefox、Chrome、Edge、Opera 和 Safari。 scroll-margin：这个属性在 Firefox 和 Chrome（包括基于 Chromium 的浏览器如 Edge 和 Opera）中得到了支持，但在 Safari 中的支持情况不太理想。 overscroll-behavior和scroll-behavior：这个属性在 Firefox 和 Chrome（包括基于 Chromium 的浏览器如 Edge 和 Opera）中得到了很好的支持，但在 Safari 中尚未被支持。","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[]},{"title":"【css】层叠上下文","slug":"【css】层叠上下文","date":"2024-02-06T06:54:33.454Z","updated":"2024-02-06T07:15:24.899Z","comments":true,"path":"2024/02/06/【css】层叠上下文/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90css%E3%80%91%E5%B1%82%E5%8F%A0%E4%B8%8A%E4%B8%8B%E6%96%87/","excerpt":"","text":"【css】层叠上下文层叠水平层叠水平，stacking level，其决定了同一个层叠上下文中元素在z轴上的显示顺序 所有元素都有层叠水平，包括层叠上下文和普通元素。但对于普通元素的层叠水平只局限于当前的层叠上下文中。 zindex在某些情况下可以影响层叠水平，但仅限于定位元素以及flex盒子的子元素，而层叠水平是所有元素都存在。 层叠顺序stacking order，其表示元素层叠时有特定的垂直显示顺序，其是规则而非概念 层叠顺序规则从下到上的顺序为： 层叠上下文 background&#x2F;border -&gt; 负zindex -&gt; block块状水平盒子 -&gt; float浮动盒子 -&gt; inline水平盒子 -&gt; zindex&#x3D;auto&#x2F;0 -&gt; 正zindex 注： 位于最下面的background&#x2F;border指层叠上下文元素的边框和背景色，每个层叠顺序规则仅适用于当前层叠上下文元素的小世界 inline水平盒子指的是 inline&#x2F;inline-block&#x2F;inline- table background&#x2F;border作为装饰属性，float&#x2F;block一般用于布局，inline都是内容，而内容的重要性是相对优先的 层叠准则当元素发生层叠的时候，其覆盖关系遵循下面两天准则 谁大谁上：当有明显的层叠水平标识时，如生效的zindex，在同一个层叠上下文领域，层叠水平值大的一个覆盖小的一个 后来居上：当元素的层叠水平一致、层叠顺序相同时，在dom流中处于后面的元素覆盖前面的元素 层叠上下文定义层叠上下文（Stacking Context）是一个HTML元素的三维概念。在CSS2.1规范中，每个盒模型的位置是三维的，分别是平面画布上的x轴、y轴和表示层叠的z轴。 它是页面中的一部分，决定了元素在Z轴上的堆叠顺序。在层叠上下文中，元素可以在三维空间中相对于其他元素前后排列，类似于一叠卡片。 层叠上下文的创建是可以嵌套的，也就是说一个层叠上下文内部可以包含另一个层叠上下文.在这种情况下，内部的层叠上下文会被整体地放在外部层叠上下文的某个层叠等级上，而内部层叠上下文的z-index值不会影响到外部层叠上下文的堆叠顺序。 作用 这个概念主要用于解决覆盖和重叠元素的问题，例如当元素的部分透明或定位不同导致元素重叠时，层叠上下文就会决定哪个元素在上面，哪个在下面。 特性 层叠上下文的层叠水平高于普通元素 层叠上下文可以阻断元素的混合模式 层叠上下文可以嵌套，内部层叠上下文及其所有子元素均受制于外部的层叠上下文 每个层叠上下文和兄弟元素独立，即当进行层叠变化或者渲染时，只需要考虑后代元素 每个层叠上下文是自成体系的，当元素发生层叠时，整个元素被认为是在父层叠上下文的层叠顺序中 层叠等级 层叠等级（stacking level），又称层叠级别、层叠水平。在同一个层叠上下文中有作用。 作用 决定该层叠上下文中的层叠上下文元素在z轴上的上下顺序 在普通元素中，它决定这些普通元素在z轴上的上下顺序 层叠顺序 层叠顺序（stacking order）表示元素发生层叠时有着特定的垂直显示顺序。 注: 层叠上下文和层叠水平是概念，层叠顺序是规则 层叠上下文与层叠顺序 如果层叠上下文元素不依赖于zindex，其层叠顺序是zindex：auto，可看成zindex&#x3D;0 如果层叠上下文依赖于zindex数值，则层叠顺序由zindex决定 从下到上的顺序为： 层叠上下文 background&#x2F;border -&gt; 负zindex -&gt; block块状水平盒子 -&gt; float浮动盒子 -&gt; inline水平盒子 -&gt; zindex&#x3D;auto&#x2F;0 ，不依赖zindex的层叠上下文-&gt; 正zindex 因此，元素一旦成为定位元素，其zindex会自动生效，此时其zindex就是默认的auto，即0级别，根据上面的层叠顺序表，其会覆盖float&#x2F;block&#x2F;inline元素 触发条件创建根层叠上下文指页面根元素，可以看成是html元素. HTML中的根元素本身就具有层叠上下文，称为“根层叠上下文”。这也时绝对定位元素在没有其他定位元素限制时，会相对于浏览器窗口定位的原因。 页面中所有元素一定处于至少一个层叠结界中 定位元素与传统层叠上下文 position&#x3D;relative&#x2F;absolute position&#x3D;fixed（Firefox&#x2F;ie，不包括chrome chrome在此情景下，会将此元素作为天然层叠上下文元素 当满足上面其一条件时，zindex！&#x3D;auto时，会创建层叠上下文 css3 flex元素，同时zindex！&#x3D; auto opacity ！&#x3D; 1 mix-blend-mode ！&#x3D; normal filter ！&#x3D; none isolation &#x3D; isolate will-change为上面2～6的任意一个 -webkit- overflow-scrolling &#x3D; touch 比较规则 同一个层叠上下文中， 元素层级不同 比较“内部元素层叠级别”，层叠等级大的元素显示在上，层叠等级小的显示在下 两个元素的层叠等级相同 后面元素堆叠到前面元素的上面，即“后来者居上” 在不同层叠上下文中 比较“父级元素层叠等级”，元素显示顺序以“父级”的层叠级别来决定元素的先后顺序，与自身的层叠顺序无关 当页面中两个元素发生堆叠时，其或其祖先元素必处于同一层叠上下文（最差情况下同处根层叠上下文） 参链 层叠上下文、层叠等级、层叠顺序","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[]},{"title":"【css】contain","slug":"【css】contain","date":"2024-02-06T06:54:33.450Z","updated":"2024-02-06T08:32:19.622Z","comments":true,"path":"2024/02/06/【css】contain/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90css%E3%80%91contain/","excerpt":"","text":"【css】contain标示了元素及其内容尽可能独立于文档树的其余部分。可以防止元素内部在其包围盒外产生副作用。局限使 DOM 的一部分得以被隔离，且通过将布局、样式、绘制、尺寸或其任意组合的计算限制于 DOM 子树而非整个页面使性能受益。局限也可用于限制 CSS 计数器和引号的作用域。 局限的主要益处在于浏览器无需经常重渲 DOM 或页面布局，由此在静态页面的渲染中带来小幅性能收益，在更动态的应用中带来更多的性能收益。 允许我们指定特定的 DOM 元素和它的子元素，让它们能够独立于整个 DOM 树结构之外。目的是能够让浏览器有能力只对部分元素进行重绘、重排，而不必每次针对整个页面。著作权归作者所有。 属性值此属性为五个标准值的子集或两个简写值之一构成的以空格分隔的列表 123456789101112131415161718192021/* 关键词值 */contain: none;contain: strict;contain: content;contain: size;contain: inline-size;contain: layout;contain: style;contain: paint;/* 多个关键词 */contain: size paint;contain: size layout paint;contain: inline-size layout;/* 全局值 */contain: inherit;contain: initial;contain: revert;contain: revert-layer;contain: unset; 注：layout、paint、strict 或 content将创建： 新的包含区块（针对其 position 属性为 absolute 或 fixed 的后代元素）。 新的层叠上下文。 新的区块格式化上下文。 none元素照常渲染，不应用局限。 size在行向和块向上将尺寸局限应用于元素。元素尺寸可无视子元素单独计算。 此值不可与 inline-size 结合使用。 示例 原始代码 12345 &lt;div class=&quot;wrap&quot; id=&quot;wrap&quot;&gt; &lt;p&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;parent&quot;&gt;&lt;/div&gt;&lt;/body&gt; 12345678910111213141516.wrap &#123; width: 300px; border: 5px solid black; margin-top: 100px; min-height: 200px;&#125;.parent &#123; width: 300px; height: 200px; border: 5px solid yellowgreen;&#125;p &#123; width: 200px; height: 90px; background-color: royalblue;&#125; 12345678910function fn() &#123; document.getElementById(&quot;wrap&quot;).addEventListener(&quot;click&quot;, () =&gt; &#123; const child = document.createElement(&quot;p&quot;); child.textContent = &quot;这是内容这是内容这是内容这是内容这是内容这是内容这是内容&quot;; document.getElementById(&quot;wrap&quot;).appendChild(child); &#125;);&#125;fn(); 修改后的 1234.wrap &#123; width: 300px;+ contain: size;&#125; inline-size将行向尺寸局限应用于元素。元素的行向尺寸可无视子元素单独计算 此值不可与 size 结合使用。 layout从页面的其余部分中隔离出元素的内部布局。此值意味着元素外的任意内容和元素内部布局互不影响。 示例 原始样式 1234567891011121314151617&lt;body&gt; &lt;div class=&quot;wrap&quot; id=&quot;wrap&quot;&gt; &lt;p&gt;这是内容这是内容这是内容这是内容这是内容这是内容这是内容&lt;/p&gt; &lt;p style=&quot;top: 140px;&quot;&gt; 这是内容这是内容这是内容这是内容这是内容这是内容这是内容 &lt;/p&gt; &lt;p style=&quot;top: 460px;&quot;&gt; 这是内容这是内容这是内容这是内容这是内容这是内容这是内容 &lt;/p&gt; &lt;p class=&quot;float&quot;&gt;这是浮动元素这是浮动元素这是浮动元素&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;parent&quot;&gt; &lt;div class=&quot;&quot;&gt; 兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点 &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 12345678910111213141516171819202122232425.wrap &#123; width: 300px; height: 200px; border: 5px solid black; margin-top: 100px;&#125;.parent &#123; width: 300px; height: 200px; border: 5px solid yellowgreen;&#125;p &#123; width: 200px; height: 90px; background-color: royalblue; position: fixed; top: 10px; margin-top: 10px; color: white;&#125;.float &#123; float: left; margin-top: 150px; position: inherit;&#125; 修改样式 1234567.wrap &#123; width: 300px; height: 200px; border: 5px solid black;+ contain: layout; margin-top: 100px;&#125; 这里有两个变化： 1、子元素的定位从相对于窗口定位变为了相对于父元素定位 2、子元素层级高于父元素的兄弟元素 3、浮动元素不会影响其他节点 paint元素后代不在元素边界外显示。若包含盒在屏外，则浏览器无需绘制其被局限的元素——这些元素因为完全局限于此盒故必定也在屏外。若后代元素溢出包含元素的边界，则此后代元素将被裁剪至包含元素的边框盒。 类似于overflow:hidden，但contain:paint超出的范围不会再被绘制，所以其对于性能更加友好，但是overflow的兼容性更高 示例 原始代码 12345678910&lt;body&gt; &lt;div class=&quot;wrap&quot; id=&quot;wrap&quot;&gt; &lt;p&gt;这是内容这是内容这是内容这是内容这是内容这是内容这是内容&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;parent&quot;&gt; &lt;div class=&quot;&quot;&gt; 兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点兄弟结点 &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 123456789101112131415161718.wrap &#123; width: 300px; height: 200px; border: 5px solid black; margin-top: 100px;&#125;.parent &#123; width: 300px; height: 200px; border: 5px solid yellowgreen;&#125;p &#123; width: 400px; height: 60px; background-color: royalblue; margin-top: 10px; color: white;&#125; 修改样式 1234567.wrap &#123; width: 300px; height: 200px; border: 5px solid black;+ contain: paint; margin-top: 100px;&#125; 超出父元素的内容都被隐藏掉了 style对于可在元素及其后代外产生影响的属性，其影响将不会逃离包含元素。计数器和引号的作用域被限制为元素及其内容。 示例 原始数据 123456789101112131415&lt;ul&gt; &lt;li&gt;元素甲&lt;/li&gt; &lt;li&gt;元素乙&lt;/li&gt; &lt;li&gt;元素丙&lt;/li&gt; &lt;li&gt;元素丁&lt;/li&gt; &lt;li&gt;元素戊&lt;/li&gt;&lt;/ul&gt;&lt;span class=&quot;open-quote&quot;&gt; 外 &lt;span&gt; &lt;span class=&quot;open-quote&quot;&gt;内&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;close-quote&quot;&gt;闭 &lt;/span&gt; 123456789101112131415161718ul &#123; counter-reset: list-items;&#125;li::before &#123; counter-increment: list-items; content: counter(list-items) &quot;：&quot;;&#125;body &#123; quotes: &quot;【&quot; &quot;】&quot; &quot;〈&quot; &quot;〉&quot;;&#125;.open-quote:before &#123; content: open-quote;&#125;.close-quote:after &#123; content: close-quote;&#125; li 元素按 1、2、3 排序，引号也是按顺序排列 修改后 1234567&lt;span class=&quot;open-quote&quot;&gt; 外+ &lt;span style=&quot;contain: style&quot;&gt; &lt;span class=&quot;open-quote&quot;&gt;内&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;close-quote&quot;&gt;闭 &lt;/span&gt; 123+ li:nth-last-child(2n + 2) &#123;+ contain: style;+ &#125; 变化点：1、元素计数器会重新开始，且不影响之前的数据 2、括号没有计算到第二个，直接以【为关闭 参链MDN-contain CSS新特性contain的语法、作用及使用场景 初探CSS的容器模块","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/tags/css/"}]},{"title":"【css】border-raduis","slug":"【css】border-raduis","date":"2024-02-06T06:54:33.448Z","updated":"2024-02-06T08:31:38.997Z","comments":true,"path":"2024/02/06/【css】border-raduis/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90css%E3%80%91border-raduis/","excerpt":"","text":"border-raduis语法 只有一个值 表示圆角属性作用在全部四个角上 有两个值 第一个作用于左上角和右下角，第二个作用于右上角和左下角 三个值 第一个作用于左上角，第二个作用于右上角和左下角，第三个作用于右下角 四个值 按照顺时针的方向，左上、右上、右下、左下 水平半径和垂直半径12border-left-top-radius: 10px 20pxborder-raduis：10px / 20px 表示圆角是水平半径为10px，垂直半径为20px的椭圆产生的 重叠曲线f&#x3D;min(Lh&#x2F;Sh, Lv&#x2F;Sv) S为半径之和，L为元素宽高，h和v表示方向，f为计算值。 Lh：元素宽 Sh：垂直方向的半径和 Lv：元素高度 Sv：水平方向的半径和 如果f计算值小于1，那么所有圆角半径都乘以f eg： 1234border-top-left-raduis：30px 100%；border-bottom-left-raduis：30px 100%；width：150px；height：100px； 左上角和左下角的垂直半径是100%（元素高），水平半径是30pxf&#x3D;min（150&#x2F;60，100&#x2F;200）&#x3D;0.5 所以渲染结果为 12border-top-left-raduis：15px 50%；border-bottom-left-raduis：15px 50%； 渲染细节如果元素设置了border边框，则圆角半径会被分为内半径和外半径 padding边缘的圆角大小为设置的border- radius - 边框厚度 如果相邻两侧边框厚度不同，则圆角大小将在较厚和较薄边界之间显示平滑过度 圆角边框的连接线和直角边框连接线位置一致，但是角度有所不同 border-raduis不支持负值 圆角以外的区域不可点击，无法响应click事件 borser-radius没有继承性 支持transition过渡效果，支持animation动画效果","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[]},{"title":"【css】BFC","slug":"【css】BFC","date":"2024-02-06T06:54:33.446Z","updated":"2024-02-06T08:31:46.622Z","comments":true,"path":"2024/02/06/【css】BFC/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90css%E3%80%91BFC/","excerpt":"","text":"定义：页面中的一块渲染区域，同一个格式化上下文内和不同格式化上下文之间的定位方式都会发生变化 bfc(块级格式化上下文)创建条件 根元素 脱离普通文档流的元素(浮动，绝对定位，固定定位) 非块级元素(包含flex，table) overflow ！&#x3D;&#x3D; visible(默认值)的块级元素 影响 同一个bfc内的相邻块级元素垂直外边距会发生折叠，即两者边距取决于双方边距的最大值而不是边距和 内部元素与外部元素互不影响，因为bfc是独立容器 在计算bfc高度时，内部的浮动元素也会被计算在哪内 ifc(内联格式化上下文)形成多个内联（块级）元素排列在一起的时候，这些内联（块级）元素之间不能穿插块级元素，否则会被切割为多个ifc 影响 一个ifc内的元素都是水平排列的 横向的margin，border，padding属性对这些元素都是有效的","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[]},{"title":"解析 attrs","slug":"【AST】-解析attrs","date":"2024-02-06T06:54:33.444Z","updated":"2024-02-06T08:31:02.758Z","comments":true,"path":"2024/02/06/【AST】-解析attrs/","permalink":"https://1578536879.github.io/2024/02/06/%E3%80%90AST%E3%80%91-%E8%A7%A3%E6%9E%90attrs/","excerpt":"","text":"【AST】-解析 attrs考虑情况 普通情况 1class=&quot;a&quot; 空格情况 1class=&quot;a b c&quot; 无引号情况 1data = 1; 无赋值情况 1data - a; 方案前情1、attrs 作为一整串字符串传入，因为第二种(空格)情况的存在，不能通过空格进行数组分割 2、存在第二种(无引号)的情况，不能完全通过引号作为标志位进行分割 结论 以引号和等于同时作为标志位，对字符串进行切分。引号为第一准则，等号为附用 在切分 key 与 value 时，以等号作为分割符，但还需要检查 key 中是否存在空格，如果有空格，则表示存在第四种(无赋值情况)情况 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384function getKeyValue(strs) &#123; // 存放key-value/attr字符的数组 let res = []; // 是否是有双引号的标志位 let is_start = false; // 是否是有等号的标志位 let is_equal = false; // 存放每个key-value的字符 let str = &quot;&quot;; // 遍历整个attrs字符串 for (let i = 0; i &lt; strs.length; i++) &#123; str += strs[i]; // 如果当前的字符是引号，那么表示一个attr值的开始或者结束，class=&quot;(开始)a&quot;(结束) if (strs[i] === `&quot;`) &#123; // 如果之前已经出现了引号，那么表示这个引号是attr的结束位，class=&quot;a&quot;(结束) if (is_start) &#123; // 那么就需要将当前收集的字符存到attr的数组中 str = str.replaceAll(&#x27;&quot;&#x27;, &quot;&quot;); res.push(str); // 需要重新收集，那么一切回到初始 is_start = false; is_equal = false; str = &quot;&quot;; &#125; else &#123; // 如果之前没有引号，那么表示这个引号是attr值的开始位，class=&quot;(开始)a&quot; is_start = true; &#125; &#125; // 如果有=，但是没有&quot;表示开始，那么就表示是x=1的形式 if (strs[i] === &quot;=&quot; &amp;&amp; !is_start) &#123; is_equal = true; &#125; // 如果当时是空格，并且是出现过等号且没有出现过引号，那么表示是data=1的情况 if (strs[i] === &quot; &quot; &amp;&amp; is_equal &amp;&amp; !is_start) &#123; // 那么就需要将当前收集的字符存到attr的数组中 res.push(str); // 需要重新收集，那么一切回到初始 is_start = false; is_equal = false; str = &quot;&quot;; &#125; &#125; // 数据已经遍历完成，但是str还没有结束 if (str) &#123; res.push(str); &#125; const data = res.reduce((pre, cur) =&gt; &#123; // 通过等号将attr的str分隔开 let [key, val = &quot;&quot;] = cur.split(&quot;=&quot;); // 去掉key的左右空格 key = key.trim(); // 如果key还存在空格，那么就表示是data-b data=1的情况 if (key.includes(&quot; &quot;)) &#123; // 需要将key以空格分割开 const keys = key.split(&quot; &quot;); // 将在最后一个key之前的key都放入attrs数组里面 for (let i = 0; i &lt; keys.length - 1; i++) &#123; pre.push(&#123; key: keys[i].trim(), val: &quot;&quot; &#125;); &#125; // 最后一个key作为对于的value值 key = keys[keys.length - 1].trim(); &#125; // 在attrs里面添加attr的key及value pre.push(&#123; key: key.trim(), val: val.trim() &#125;); return pre; &#125;, []); return data;&#125;getKeyValue( ` class=&quot;a b c &quot; id=&quot;d &quot; data-b data-c data=1 data-a=&quot;111&quot; data-d`);// 输出// res(keyvalue)数组： [&#x27; class=a b c &#x27;, &#x27; id=d &#x27;, &#x27; data-b data-c data=1 &#x27;, &#x27; data-a=111&#x27;, &#x27; data-d&#x27;]// data结果：[ &#123;key: &#x27;class&#x27;, val: &#x27;a b c&#x27;&#125;, &#123;key: &#x27;id&#x27;, val: &#x27;d&#x27;&#125;, &#123;key: &#x27;data-b&#x27;, val: &#x27;&#x27;&#125;, &#123;key: &#x27;data-c&#x27;, val: &#x27;&#x27;&#125;, &#123;key: &#x27;data&#x27;, val: &#x27;1&#x27;&#125;, &#123;key: &#x27;data-a&#x27;, val: &#x27;111&#x27;&#125;, &#123;key: &#x27;data-d&#x27;, val: &#x27;&#x27;&#125;,]","categories":[{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/tags/vue/"}]},{"title":"浏览器安全","slug":"读书笔记/浏览器安全","date":"2024-02-06T06:54:33.441Z","updated":"2024-02-06T07:12:41.667Z","comments":true,"path":"2024/02/06/读书笔记/浏览器安全/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8/","excerpt":"","text":"url规范形式 scheme：&#x2F;&#x2F;[user:password@]domain:port&#x2F;path?query_string#fragments scheme 方案名，也常被当为协议名混用。一般为http、https、ftp等，告诉浏览器应该如何进行连接。浏览器在识别时不区分大小写 [user:password]。可选 验证信息，提供登陆主机的身份信息，不建议使用这种方式进行身份验证，因为传递时是明文，且并非所有浏览器都支持 domain 主机名，使用域名，主机名或者合法ip均可。如果要使用ipv6地址，则地址必须要在中括号([])中括起来，如http:&#x2F;&#x2F;[::1]。不区分域名大小写 port 端口号，表明浏览器应该连接目标的哪个端口，如果没有指定，使用默认端口（http为80，https为443） path 路径，表明浏览器获取什么数据。如果服务器的文件系统是大小写敏感，那么路径也可能是大小写敏感 query_string 查询字符串，由一个或多个“key&#x3D;value”对组成，表示需要传递给服务器的内容 fragments 片段字符，hash部分，表明文档资源的某个部分位置。例如可以让浏览器定位到锚点（通称超级链接锚点标签，anchor）的id处。一般情况下，hash值改变不会使得浏览器发出请求 安全 字形欺骗 利用字形相似来进行url的替换，例如英文l和数字1，不同国家之间的符号欺骗等 浏览器的自纠错 分解映射：浏览器会对一些字符有自动分解，会将一些特定字符分解为浏览器可识别的内容。 例如将罗马数字，cjk兼容字符，带圈数字&#x2F;英文等替换为ascii字符 httpcrlf攻击通过注入http头来篡改响应消息，，也可以构建超长的http头攻击运行着apache2.2.0～2.2.21服务器，使用户的http only的cookie泄漏 401利用浏览器的特性—当用户正在访问需要认证的资源时，服务器会响应401，浏览器收到这个状态码后，会根据服务器提供的认证提示信息弹出认证窗口。 xss-存储型：用户输入内容没有做校验 页面点击劫持将页面用iframe或者其他形式放在页面底层，用户查看的页面和实际点击的数据不一致。 -预防：x-frame-option设置页面是否支持iframe显示 中间人攻击###阻止hsts，即阻止http升级https","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[]},{"title":"性能评估模型","slug":"读书笔记/性能评估模型","date":"2024-02-06T06:54:33.440Z","updated":"2024-02-06T07:12:22.896Z","comments":true,"path":"2024/02/06/读书笔记/性能评估模型/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%80%A7%E8%83%BD%E8%AF%84%E4%BC%B0%E6%A8%A1%E5%9E%8B/","excerpt":"","text":"客户端场景参数 设备特征：包括类型（pc&#x2F;手机&#x2F;pad）、硬件配置（cpu&#x2F;内存等）、操作系统（ios&#x2F;安卓等）以及操作系统版本等， 浏览器特征：品牌、版本等 网络情况：连接方式（光纤&#x2F;Wi-Fi&#x2F;移动）、运营商、地区、带宽等。 加载阶段目标领浏览器尽可能快地完成网址初始状态（即第一屏）的呈现，给用户留下良好的第一印象。 优化方向 从视觉角度提高网站内容的渲染速度 白屏时间 计算时间：将用户在浏览器地址栏中输入url按下回车那一刻作为计时起点，将有可视化的图像渲染到浏览器视窗的时间点作为计时终点，其中的差值就是白屏时间。 浏览器工作：域名查询、与web服务器建立tcp连接、发送http请求、接受并渲染文档等。 首屏时间 计算：计时终点是浏览器的第一屏首次完全渲染完毕的时间点。而计时起点有两种说法，一种是从用户按下回车键开始，即白屏时间被算入首屏时间；一种是将白屏时间的终点作为首屏时间的起点。 可交互节点 将网站首次可以响应用户操作反馈的那一刻作为可交互节点，其代表的是一个时刻而不是一个时间间隔。 从交互角度缩短从打开网站到可交互之间的时间间隔，对应可交互节点指标 首次有效绘制 对应于不同的业务，在页面上的元素有不同的优先级渲染排序。比如地图中，最重要的元素是地图本身而不是工具箱。因此为了达到更好的效益，优先级高的内容应该相对更早地展示给用户，首次有效绘制指的就是优先级最高的内容被首次渲染的时间节点 广告可视节点 更快地将广告展示给用户能间接提高与广告商之间的议价，对于公司来说，广告是非常重要甚至是主要的创收途径。 可交互阶段衡量角度 反馈速度尽可能快的响应用户的操作，根据具体的架构设计可表现在不同的角度。 动画帧率对于游戏、地图等涉及数据量庞大时，这个是需要主要的考虑点。","categories":[{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/categories/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"}],"tags":[]},{"title":"【webwork】介绍","slug":"读书笔记/【webwork】介绍","date":"2024-02-06T06:54:33.438Z","updated":"2024-02-16T06:23:24.349Z","comments":true,"path":"2024/02/06/读书笔记/【webwork】介绍/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90webwork%E3%80%91%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"特性 能长时间运行 启动性能理想 内存消耗理想 线程webwork依赖于浏览器（宿主环境）来实现的，从而实现了浏览器对多线程的支持 种类 dedicated worker（专用线程）：只能被首次生成它的脚本使用 shared worker（共享线程）：可以同时被多个脚本使用 模式和执行流模式 主线程提交任务 WorkerGlobal做子任务分配，分配到某个worker worker子线程分配后，将处理结果返回给WorkerGlobal，WorkerGlobal再将结果返回给主线程 执行流 主线程调用new Worker，内核异步创建worker 浏览器内核创建WebCore：Worker 主线程调用postMessage通知。 如果当时worker没有创建完成，那么会在浏览器内核中的message队列存放信息，当worker创建完成后，由浏览器内核将消息从队列中放入到worker线程中的执行循环 如果worker创建已经完成了，那么主线程直接通知到worker线程中的onmessage，不会经历浏览器内核 worker执行完成后，调用postMessage将信息传递给主线程的onmessage回调中。不经历浏览器内核 api主线程 构造 1const worker = new Worker(url, options) 注： 页面不允许启动worker，会引发security error 脚本类型只接收mime类型为text&#x2F;javascript url无法解析会导致syntaxerror","categories":[{"name":"webwork","slug":"webwork","permalink":"https://1578536879.github.io/categories/webwork/"}],"tags":[{"name":"webwork","slug":"webwork","permalink":"https://1578536879.github.io/tags/webwork/"}]},{"title":"【webpack】配置项","slug":"读书笔记/【webpack】配置项","date":"2024-02-06T06:54:33.436Z","updated":"2024-02-06T07:10:53.414Z","comments":true,"path":"2024/02/06/读书笔记/【webpack】配置项/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90webpack%E3%80%91%E9%85%8D%E7%BD%AE%E9%A1%B9/","excerpt":"","text":"entrycontext在查找相对路径时，以context为根目录。默认为webpack启动时的所在工作目录。注：context必须是一个绝对路径的字符串 entry类型：string&#x2F;array&#x2F;object｜类型｜例子｜说明｜｜——-｜——-｜——-｜｜string｜index•js｜入口模块的文件路径，可以是相对路径｜｜array｜【index。js，index2。js】｜入口模块的文件路径，可以是相对路径｜｜object｜{a：index。js}｜配置多个入口，每个入口生成一个chunk｜ 如果是array，搭配output。library时，只有数组的最后一个入口文件的模块会被导出 outputfilename id：chunk的唯一标识，从0开始 name：chunk的名称 hash：chunk的唯一标识的hash值 chunkhash：chunk内容的hash 其他target代码运行的不同环境，默认为web web：针对浏览器，所有代码都集中到一个文件中 node：针对nodejs，使用require加载chunk模块 async-node：针对nodejs，异步加载chunk代码 webworker：针对webworker electron-main：针对electon主线程 electron-rendrer：针对electron渲染线程 loader svg- inline- loader：和raw- loader类似，但是会分析svg的内容，去除其不必要的部分，减少svg的体积 优化缩小文件搜索范围 loader配置 可以通过include去告诉webpack只有那些文件会被这个loader处理，用exclude排除不需要的文件 优化resolve.modules配置配置webpack去哪些目录下寻找第三方模块 指明依赖包的具体目录位置，减少查询时间。 优化reslove.main Fields配置配置第三方模块使用哪个入口文件 指明采用字段作为入口文件的描述字段，减少搜索步骤 注：需要考虑是否所有依赖包的第三方入口文件的描述字段，一个模块出错，就会导致所有的代码无法正常运行 优化reslove.alias 配置库的具体引用路径，减少查询时间 resolve.extensions 频率最高的放在最前面。 列表不能太长 优化module.noParse happypack将任务分解给多个子进程去并发执行，子进程处理完后再将结果发送给主进程 ParallelUglifyPluginuglfyjs是webpack内置的，但是在构建线上代码时会卡住，即是在进行代码压缩。压缩代码需要将代码解析成用object抽象表示的ast语法树，再去应用各种规则分析和处理ast，因此导致这个过程计算量很大，非常耗时 ParallelUglifyPlugin会开启多个子线程，将对多个文件的压缩工作分配给多个子进程去完成，每个子进程还是用uglfyjs压缩。 自动刷新 文件监听原理： 定时获取文件的最后编辑时间，每次存下最新的最后编辑时间，如果发现当前的获取的时间和最后一次保存的编辑时间不一致，就认为该文件发生了变化 watchOptions.poll用于控制定时时长，每秒检查多少次 当某个文件被判定为发生了变化时，并不会立刻告诉监听者，而是会先缓存起来，搜集一段时间后，再一次性告诉监听者。 watchOptions.aggregateTimeout 用于配置这个等待时间 自动刷新原理 控制浏览器自动刷新方法： 借助浏览器扩展去通过浏览器的提供的借口刷新，比如webstorm的liveedit 向要开发的网页中注入代理客户端的代码，通过客户端的去刷新页面 将要开发的网页装入一个iframe中，通过刷新iframe去看到最新效果 webpack通过devServer.inline控制是否向每个chunk中注入代理客户端，在开启inline时，devserver会向每个chunk注入代理客户端的代码，而项目中chunk有很多chunk，因此会导致构建缓慢。 启动项目时，可以通过执行命令webpack-dev-server。—inline false完成。那么就会采用第三种方式进行页面刷新。 模块热替换 原理 和自动刷新原理类似，都需要在开发的网页中注入一个代理客户端来连接devserver和网页。当子模块发生更新时，更新事件会一层层向上传递，直到有某层的文件接收了当前变化的模块，这时就会掉用callback函数去执行自定义的逻辑。如果事件一直往上抛，到最外层都没有事件接收他，那么会直接刷新页面。 优化 监听更少的文件，忽略nodemodules目录下的文件。 cdn加速 缓存问题 cdn一般会为资源开启很长时间的缓存，可能会导致最新的发布不能用 针对html入口文件，放到自己的服务器中，关闭自己服务器上的缓存，自己的服务器只提供html和数据接口 针对静态的js，css，图片等文件，开启cdn和缓存，每个文件带自己内容的hash值 使用 在output.publicPath设置js的地址 在css-loader.publicPath设置css导入的资源地址 在webplugin.stylepublicpath设置css文件的地址 压缩代码 js 使用 uglifyplugin和paralleugifyplugin（多线程）进行压缩 压缩es6 优点：对于一样的逻辑，es6代码量少于es5；js对es6的语法做了性能优化，例如针对const声明的变量有更快的读取速度。 使用uglifyes进行压缩 压缩css 使用cssnano进行压缩 tree shaking去除无用的死代码配置babel保留es6模块化语句，presets：modules：false 启动时带上—display-used- exports参数，指出哪些函数有用和无用。 启动时带上—optimize-minimize去除无用代码 配置reslove.mainfields，优先采用jsnext：main（第三方包打包出的es6模块） export default无法做tree shaking，因为导出的是一整个对象 提取公共代码 使用commonchunkplugin 分割代码按需加载 原则 1: 将整个网站划分成一个个小功能，再按照每个功能的相关程度将它们分成几类。 2: 将每一类合并为一个chunk，按需加载对应的chunk 3: 不要按需加载用户首次打开网站时需要看到的画面所对应的功能，将其放入执行入口所在的chunk中，以减少用户能感知的网页加载时间 4: 对于不依赖大量代码的功能点，例如依赖echart画图，将其进行按需加载 webpackChunkName：name import（&#x2F;* webpackChunkName：name *&#x2F; path）：为动态生成的chunk赋予一个名称，方便追踪和调试代码，若不指定名称，那么默认为[id].js 以path路径下的文件为入口重新生成一个chunk，当代码执行到import所在的语句时，才会去加载chunk对应生成的文件。import会返回一个promise，当文件加载成功时可以在promise的then方法获取对应的文件内容。 scope hoisting 实现原理 分析模块之间的依赖关系，尽可能将被打散的模块合并到一个函数中。但前提是不能造成代码冗余，因此只有被引用了一次的模块才能被合并。 prepack 在保持运行结果一致的情况下，改变源码的运行逻辑，输出性能更好的js代码 工作流程： 1: 通过Babel将js源码解析成抽象语法树，以更细粒度地分析yuanma 2: prepack实现了一个js解释器，用于执行源码。借助这个解释器，prepack才能理解源码具体是如何执行的，并将执行过程中的结果返回到输出中。 使用prepack-webpack-plugin插件。 可视化打包结果 webpack-bundle- analyzer http://wepack.github.io/analyse","categories":[{"name":"webpack","slug":"webpack","permalink":"https://1578536879.github.io/categories/webpack/"}],"tags":[]},{"title":"【webpack】工作流程","slug":"读书笔记/【webpack】工作流程","date":"2024-02-06T06:54:33.434Z","updated":"2024-02-16T06:23:10.637Z","comments":true,"path":"2024/02/06/读书笔记/【webpack】工作流程/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90webpack%E3%80%91%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/","excerpt":"","text":"http://wepack.wuhaolin.cn/5-2输出文件分析.zip bundle.js能直接中浏览器运行是因为输出的文件中通过__webpack_require__定义了一个可以在浏览器执行的加载函数，模拟nodejs的require。 原本一个个独立的模块文件被合并到了一个单独的bundle.js的原因是浏览器不能像nodejs一样快速在本地加载一个个模块文件，而必须通过网络请求去加载还未得到的文件。如果模块数量很多，那么加载时间会很长，因此将所有模块都存放到了数组中，执行一次网络加载。 流程概括初始化参数 从配置文件和shell语句中读取和合并参数，得出最终的参数 发生事件 event name desc 初始化参数 从配置文件和shell语句中读取合并参数，得出最终的参数，在这个过程中还会执行配置文件中的插件实例化语句 new Plugin（） 实例化compiler 用上一步得到的参数初始化compiler实例，compiler负责文件监听和启动编译，在compiler实例中包含了完整的webpack配置，全局只有一个compiler实例 加载插件 依次调用插件的apply方法，让插件可以监听后续的所有事件节点。同时向插件传入compiler实例的引用，以方便插件通过compiler调用webpack提供的api environment 开始应用nodejs风格的文件系统到complier对象，以方便后续的文件寻找和读取 entry-option 读取配置的entrys，为每个entry实例化一个对应的entrypath，为后面该entry的递归解析工作做准备 after-plugins 调用完所有的内置和配置的插件apply方法 after-resolvers 根据配置初始化resolver，resolver负责在文件系统中寻找指定路径的文件 编译阶段开始编译 用上一步得到的参数初始化compiler对象，加载所有配置的插件，通过执行对象的run方法开始执行编译 确定入口 配置的entry找出所有的入口文件 编译模块从入口文件出发，调用所有的配置的loader对模块进行翻译，再找出模块依赖的模块，再递归本步骤直至所有的入口依赖的文件都经过本步骤的处理 完成编译模块使用loader翻译完所有的模块后，得到每个模块被翻译后的最终内容以及它们之间的依赖关系 发生事件 事件 解释 run 启动一次新的编译 watch-run 和run类似，但是是在监听模式下启动编译，可以获取是哪些文件发生变化导致重新启动编译 compile 告诉插件一次新的编译将要启动，同时会给插件带上compiler对象 compilation 当webpack以开发模式运行时，每当检测到文件的变化，便有一次新的Compilation被创建。一个Compilation对象包含了当前当模块资源，编译生成资源，变化的文件等，此对象也提供很多事件回调给插件进行扩展 make 一个新的Compilation创建完毕，即将从entry开始读取文件，根据文件当类型和配置的loader对文件进行编译，编译完成后再找出该文件依赖的文件，递归的编译解析 after-compile 一次Compilation执行完成 invalid 当遇到文件不存在，文件编译错误等异常时会触发该事件，该事件不会导致webpack退出 compilation阶段的事件 事件 说明 build-module 使用对应的loader去转换一个模块 normal- module- loader 在用loader转换完一个模块后，使用acorn解析转换后的内容，输出对应的ast，方便web pack对后面的代码进行分析 program 从配置的入口模块开始，分析其ast，当遇到require等导入其他模块的语句时，便将其加入依赖的模块列表中，同时对新找出的依赖模块递归分析，最终弄清所有模块的依赖关系 seal 所有模块及其依赖的模块都通过loader转换完成，依据依赖关系开始生成chunk 输出阶段输出资源根据入口和模块之间的依赖关系，组装成一个个包含多个模块的chunk，再将每个chunk转换成一个单独的文件加入输出列表中。 输出完成确定好输出内容后，根据配置确定输出的路径和文件名，将文件的内容写入文件系统中 发生事件 事件 描述 should-emit 所有需要输出的文件已经生成，询问插件哪些文件需要输出，哪些不需要输出 emit 确定好要输出哪些文件后，执行文件输出，可以在此回调中获取和修改输出的内容 after-emit 文件输出完毕 done 成功完成一次完整的编译输出流程 failed 如果在编译和输出的流程中遇到异常，导致webpack退出，就会直接跳转到本步骤，插件在本事件中可以获取具体的错误原因 事件流webpack通过tapable来组织广播打包流程。webpack在运行时会广播事件，插件只需要监听它所关心的事件，就能加入这条线中，去改变打包的结果。 webpack的事件流机制保证了插件的有序性，使得整个系统的扩展性良好。事件流机制应用了观察者模式，和nodejs的eventemitter类似。compiler和compilation都继承至tapable，可以直接中在complier和compilation对象上广播和监听事件。","categories":[{"name":"webpack","slug":"webpack","permalink":"https://1578536879.github.io/categories/webpack/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"https://1578536879.github.io/tags/webpack/"}]},{"title":"【Web3】基本介绍","slug":"读书笔记/【Web3】基本介绍","date":"2024-02-06T06:54:33.432Z","updated":"2024-02-16T06:23:02.442Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】基本介绍/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"钱包作用用硬件或软件的方式，可以访问资金，与去中心化应用程序进行交互，充当无银行金融服务的网关、收集NFT、创建链上身份与社区，并提供比传统钱包更多的用途 组成条件 公钥：链接到自己可以发售和接收交易的地址 私钥：用于签署新交易并允许访问资金，必须保密 种子短语：用于生成多个私钥。作为根密钥，可以访问用户钱包中其他密钥和地址，也可以创建新的密钥 分类热钱包（软钱包）可以存储、发送、接收和查看代币，所以比其他类型的钱包更加方便 托管地：可以访问互联网和加密货币网络的设备上 实用性：最高 安全性：容易收到黑客攻击，因为连接到网络了 桌面钱包会被作为应用程序下载到电脑上，在本地运行被认为是可用的，最安全的热钱包类型 托管地：电脑 网络钱包允许通过浏览器界面进行交互和访问，无须在本地设备上下载或者安装任何内容具有与桌面钱包完全相同的功能，使用相同的区块链和区块浏览器来搜索区块和交易 托管地：其他人的计算机或者服务器上 手机钱包与桌面钱包类似，只是托管地是手机与桌面钱包相比，手机钱包的功能相对更简单一些 冷钱包无须连接到互联网，那么这就使得冷钱包是存储加密货币的更安全的替代方案，因为有物理介质可以离线存储密钥 安全性：抵抗黑客能力更强，对长期投资者来说很实用 硬件钱包使用随机生成器生成公钥和私钥的物理电子设备最适合长期投资和存储使用，因为它们不太容易获得 主要用例：确保未分配的、用于持续使用的大笔资金的安全性 安全性：最安全的存储方案之一，因为能够在设备中保存公钥和私钥，而无须借助任何互联网连接。这样对加密货币的访问是处于离线状态 纸钱包由物理打印出的区块链地址和私钥组成，到纸上。这些信息会被打印成二维码，可以通过扫描二维码来汇款 托管地：纸 缺点；只能一次性发送全部余额，不能多次发送部分 市面上主流钱包 以太坊钱包 metamask trust Wallet argent imToken 其他生态 phantom：Solana生态 keplr：Cosmos生态 polkadot：Polkadot生态 tezos：Temple生态 助记词由于私钥一般情况下，都非常冗长复杂，不适合记忆，为了方便使用，密码学家将其简化成了12或者24位不等的单词或者中文字符，简化之后的就被称为助记词 即： 助记词是密钥的另外一种形式 通过助记词可以获取相关的多个私钥，但是通过私钥无法获取助记词 区块链浏览器定义区块链浏览器是一种软件，它使用api和区块链节点从区块链中提取各种数据，然后使用数据库来排列搜索到的数据，并以可搜索的格式将数据呈现给用户 背景区块链钱包可以提供不同类型的数据，但仅限于与钱包管理的密钥相关的数据。区块链浏览器用于查看与在给定区块链的所有钱包上执行的交易相关的数据。特殊之处就是在于透明度，它允许用户检查智能合约地址的余额和支出，如当用户参数首次代币发行时。 作用 查看任何钱包地址的交易历史能够审计任何钱包地址并提高区块链的透明度 查看接收和更改地址可以查看交易接收地址、更改地址。将加密货币返回给支出者，以防输入值过多用于交易费用，提高了交易的透明度 查看当天最大的交易 查看内存池的状态可以查看区块链上未确认的交易及其详细信息 查看双花交易部门浏览器支持 查看孤立和陈旧区块孤立区块：挖掘之后没有附加到最长的区块链上，并且它们的父区块链是未知的 陈旧区块：已知父区块链，但未链接到已知最长链的区块 查看发现或开采特点区块的个人或矿池 查看创世区块 允许用户查看交易费用、区块链难度、哈希率和其他数据 优势 将加密货币发送给某人之前会检查钱包地址是否对区块链有效 检查加密货币是否已经发送给目标个人。所有者可以检查他们的钱包余额 可以帮助解释尚未通过或确认的交易出现的问题以及查看确认jieduan 帮助用户了解交易或Gas当前的成本，从而帮助计划未来的Gas支出 帮助用户了解某个组是不是挖掘交易的人，并有助于决定是否为未来的挖掘活动投入更多的计算资源 可以帮助正在开发钱包的人，如果它可以进行正常的工作（发送、接收、存储和加密货币） 与其他软件一起使用，可以证实数据和信息 工作流程 资源管理器首先使用节点接口提取给定区块链中的所有数据，一旦它导出数据，就会将其存储在可搜索的表格中 将收集最新的交易和区块，根据定义的可搜索类别进行排列。它为用户提供了一个界面用于搜索。在技术方面，资源管理器可以使用关系数据库、sql数据库和api 每个区块链节点都可以直接读取区块链上的数据，获取最新交易和挖掘区块等数据等详细信息，然后将其发送到数据库，其中数据以可搜索表格的形式排列，使得资源管理器可以快速使用这些数据。 大部分的区块链使用表格，每一行都有唯一的id或者键用于区分 域名系统在区块链中，域名系统和网络中的域名概念不同。区块链中，域名指向的是钱包地址，是一种身份的关联和映射，解决了ip或钱包地址过长的问题 ENS域名系统含义ens由两个以太坊智能合约组成：记录域名的ens注册表和将域名与机器的可读地址互相转换的解析器 获取在ens app上注册 DAS域名账户系统含义das是web3的去中心化身份认证系统，和ens类似，允许用户将个人域名绑定都适用所有链的人类可读地址。 预言机预言机充当区块链上的app接口，通过查询可以获取智能合约的相关信息。预言机也可以向真实世界发送数据 背景大多数区块链都有用于转移价值、启用协议操作或促进治理的本地加密货币，一些区块链支持智能合约，而智能合约可以在没有第三方的情况下执行，并且可以设计为执行几乎任何可以想象得到的合约。 区块链和链上智能合约需要一种方法来利用外部的链下数据，以便智能合约执行影响现实世界的app，因此预言机就需要被用到 分类 软件预言机 提供来自网站、服务器或数据库等数字源的数据。可以提供实时信息 硬件预言机 提供来自现实世界的数据，可以传递和中继来自项目运动传感器 集中式预言机 它由单个实体控制，并充当智能合约的唯一数据提供者。它要求合同参与者对一个实体给予极大的信任；它还代表单点故障，这可能会威胁到智能合约的安全性，如果预言机被破坏，智能合约也会被破坏。智能合约的准确性和有效性在很大程度上取决于所提供数据的质量，因此预言机对智能合约有很大的权利。 预言机问题：预言机可以使智能合约在去信任方之间执行，但当他变得过度中心化时，可能会有它试图成为中间人的风险。 去中心化预言机 去中心化预言机试图实现依赖因果关系而不是个人关系的去信任和确定性结果。它以与区块链网络相同的方式实现这些结果，在许多网络参与者之间分配信任。通过利用许多不同的数据源并实施不受单个实体控制的预言机系统，去中心化的预言机网络可能成为为智能合约提供更高级别的安全性和公平性。 实例Chainlink","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】去中心化存储协议","slug":"读书笔记/【Web3】去中心化存储协议","date":"2024-02-06T06:54:33.430Z","updated":"2024-02-16T06:22:54.804Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】去中心化存储协议/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%AD%98%E5%82%A8%E5%8D%8F%E8%AE%AE/","excerpt":"","text":"IPFS定义ipfs星际文件系统是一种点对点的文件的共享协议。ipfs用于存储和访问文件、网站、app和数据，使用内容寻址来识别连接所有计算设备的全局命名空间中的每个文件。ipfs不是通过位置，而是通过文件内容进行文件寻址的。为了识别内容，使用内容的加密hash值。 ifps允许用户通过对等文件共享以分散的方式托管和接收内容，那么这样表示用户操作员拥有一部份整体数据，从而创建了一个强大的文件存储和共享系统。网络中的任何用户都可以简单的通过文件的内容地址来提供文件，其他用户可以通过分布式hash表（dht）定位并请求任何拥有该内容的人。 工作流程组成组件： 分布式哈希表（dht dht使用散列函数来计算索引，用户可以从中找到需要的值。即数据分布在计算机网络中，并进行协调，实现节点的分布式间的高效访问和查找。 优势：去中心化程度高、容错性能、可扩展性高 bitTorrent 是一种文件共享系统，能够通过数据交换协议来协调节点间的数据传输。但仅适用于Torrent系统。而ipfs提供bitswap，是该协议的更加通用版本 merkle dag 它是merkle树和有向无环图（dag）的组合，merkle树负责确保p2p网络上交换的数据块是正确的，并且绝对不会发生变化。 验证是使用加密散列函数组织数据块完成的，该函数接受输入并计算与该输入对应的唯一散列，以确保产生的散列比较简单，但很难通过散列猜测输入 dag是一种没有环的拓扑信息序列进行建模的方法。家谱是dag的基本表示。merkle dag本质上是一种数据结构，其中hash值用于引用数据块和对象。 ipfs的主要原理是在广义merkle dag上所有数据进行建模 sfs：自认证文件系统 sfs是一种分布式文件系统，不需要特殊权限即可交换数据。提供给用户的数据仅提供文件名进行身份验证，该文件名由服务器签名，即用户可以通过本地存储的透明性安全的访问远程内容 优势去中心化的ifps有一个主要目标：可以从不由一个组织管理的多个位置下载一个文件 支持强大的互联网。当无法访问服务器时，可以从其他人检索到相同的信息 增加审查内容的难度。因为ipfs上的文件可能来自多个位置 arweave定义arweave可以看作为使用区块链开安全、永久地存储全球信息的去中心化协议。 arweave的p2p协议允许硬盘驱动器中拥有大存储空间的各种用户（节点）连接到arweave网络，并为他人存储数据，然后ar网络会奖励这些节点。当存储在特定系统中的数据逐渐增加，共识需要的散列量减少，从而产生更具有成本效益的数据存储。 工作流程arweave包含blokcweave和permaweb blockweave blockweave除了存储交易信息外，还存储每个区块的数据信息。blockweave上的每个块都引用其前一个块，前一个块被附加到一个随机选择到块上，即召回块。 arweave协议通过部署一种名为SPoRA的全新共识机制启用此架构，这种共识机制奖励网络中的参与节点存储arweare的所有交易历史。 例如如果想管理其中一个节点，要获取区块奖励，那么必须向blockweave证明可以完全访问前一个区块的数据以及一些随机选择的召回块。如果无权访问召回块，那么就知道没有将所有的交易数据全部放在arweave区块链上，因此会拒绝奖励。 permaweb 建立在arweave区块链上的去中心化网络，存储所有arweave dapps的地方。arweave使用http，用permaweb可以与网络进行交互 特点 使用方便 技术细节都放在后端；使用扩展程序保存的页面可以由去中心化的网络中的其他用户查看和共享 不变性 以用户和开发人员为中心的精神 它奖励并鼓励开发人员提高所构建的app的质量。推动开发人员并建立和参与使用其dapp的社区。 优缺点 优点 数据不会被丢失 每秒可以处理超5k笔交易 ar代币有相当稳定的历史价格走势。 缺点 解决可扩展性问题的协议可能不被人相信 icp协议：去中心化计算机定义icp是一种完善的区块链开发方案的聚合，使在线开发人员能够不再依赖商业云服务、数据库服务器、web服务器、dns服务、防火墙以及大型科技企业的专有应用程序编程接口。开发人员使用icp将可以自由地构建和部署安全、自主和防篡改的计算单元，这种计算单元类似于docker，它几乎可以完成任何事情。 icp是基于智能合约演变来的，它以分布式、复制的方式运行软件，同时还能捕获该软件程序状态的完整技术。用户通过互联网身份与这些容器进行交互，这是一种匿名区块链身份验证框架，将在线活动与物理技术设备相关联 重要性 icp作为一种区块链技术，仍然具有民主精神，参与者可以通过质押icp投票决定icp的未来。 icp设计初衷是保护用户的数字身份，防止其被广告商、黑客和其他恶意软件滥用。icp通过消除用户的互联网身份来实现匿名，通过区块链身份验证框架确保用户拥有自己的数据，这些数据由区块链备份，并只有持有对应备份的私钥用户本人才能访问。如果用户任何物理设备被入侵，那么可以使用存储在安全位置的助记词快速恢复其互联网身份 icp在分散、集成的生态系统中重新构建了智能合约和软件，同步服务可以最好的满足用户需求。 icp提出了一种新的价值模型，通过将加密货币与法定货币的有效用标记化相关联来补充比特币，而不会存在集中管理的弱点。icp在模型上是比特币的升级版本，具有直接标记实用程序的优势，而没有法定货币集中管理的劣势。icp允许使用网络神经（nns）参与网络治理，并且可以重新启动以运行分散的app。 icp承诺将与比特币进行深度绑定，并和比特币的价值一起成长。icp的目的是准备与现有的加密代币和web3结构建立共生关系，以连接和授权它们。 icp的区块链是环保的。执行交易或者其他日常任务时的电力消耗与发送邮件的电力消耗基本等同。 工作流程icp有为计算提供动力的循环机制，icp代币用于铸造新的周期，这些周期由icp子网络燃烧以进行计算 在icp区块链上，稳定的周期使基于icp的软件开发成本可预测且始终处于较低水平。icp循环可以发送到icp容器以供其以后在执行计算或者存储数据时使用。icp软件可以用任何可以编译为webassembly的编程语言编写，以部署在icp的区块链上。 icp可以与环境分离，并与其他容器或用户交互以执行计算和智能合约代码。","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】公链","slug":"读书笔记/【Web3】公链","date":"2024-02-06T06:54:33.428Z","updated":"2024-02-16T06:22:44.682Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】公链/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91%E5%85%AC%E9%93%BE/","excerpt":"","text":"阶段第一阶段：2008-2015以早期比特币之类的数字货币公链为主，可以理解为一种“公共账本” 第二阶段：2015～以太坊公链的出现为开端，标志着底层公链时代，智能合约被提出。 主流的公链有：比特币链、以太坊链、币安链、瑞波链、艾达链、索拉纳链、波卡链、雪崩链、波场链、马蹄链 以太坊EVM：以太坊虚拟机建立在以太坊上的抽象虚拟机，可以使DApps之间彼此隔离，并且与主链分离。即它是一个虚拟的运行环境，以太坊智能合约的运行是建立在此基础上的。 特点可扩展、可编程、安全和去中心化 以太币智能合约本质是一段小的代码程序，那么运行它的载体上通过以太坊网络的矿工进行维护的。给予矿工以太币-Gas费，因此智能合约想运行在以太坊公链上，那么需要支付Gas费，当无法支付时，那么程序也就停止了。 DApps 含义 是一种去中心化的数字应用程序，存在并运行于计算机的区块链或点对点(P2P)网络上，而不是单个计算机。 DApps不在单一机构的权限和控制范围内，通常说建立在以太坊平台上，可以被开发为用于各种目的的App，包括游戏、社交App等。 App权限普通应用程序中，其开发者们拥有对这个app及其工作的完全权限。 而DApps不同，它在公链上运行，不受任何单一机构的控制和干扰，例如在以太坊上发布运行了一个DApp，若有人通过这个智能合约购买了一个商品，智能合约被执行，任何人都无法删除这个合约的执行信息。 优劣 优势：保护用户的隐私，使用去中心化的dapp，用户无须提交个人信息即可使用app；dapp使用智能合约完成交易，无须依赖中间机构 劣势：执行智能合约需要Gas，因此费用一般较贵；有效扩展在需要大量计算以及网络过载导致网络拥堵的时候容易存在问题 Cosmos生态含义cosmos也被称为区块链互联网，是一个由独立但可以互相操作的区块链组成的去中心化网络，用户可以在无须许可的交换信息和代币 Cosmos中“区域”的独立区块链由基于拜占庭容错的权益证明Tendermint共识算法支持。拜占庭容错共识算法允许网络达成共识，即使某些节点发生故障或者恶意行为 目的提供工具帮助开发人员为各种用例快速构建独立的区块链，使得网络中的区块链可以互相通信，从而解决区块链面料的比如可扩展性、可用性和治理问题等。 加密货币：ATOMATOM是Cosmos背后的驱动力。 功能： 维护网络共识 通过基于激励的验证节点进行质押 减少垃圾邮件作为支付Gas费的媒介 提供投票机制，通过Cosmos治理提案提出网络修正 用途 通过权益证明共识机制的运行 验证者质押或者锁定他们的ATOM并运行专门的软件，该软件通过新区块和验证交易维护Cosmos网络 持有者可以选择将自己的ATOM代币委托给验证者，允许获得一部份质押奖励。 实现 Tendermint Core BFT共识机制 Tendermint主要成立目的是解决工作量证明共识算法的速度慢、可扩展性差以及高性能耗问题 它提供即使、可证明安全的移动客户端支付验证的方法。在设计上，它是不允许分叉的，所以移动钱包可以实时接收交易确认，从而在手机上实现信任的支付方式 它需要一种“验证人”，类似于比特币的矿工，是一种专门用于提交区块的安全机器(和矿工需要大量的Gas一样，需要消耗大量的代币)。验证人可以向非验证人租借代币，并承诺收益，但验证人被攻击或者违反协议规定，那么就会有一定的惩罚，比如削减代币 可互操作 Cosmos Hub是一个及其强大的去中心化区块链网络，其结构和治理允许网络参与者保持冷静。ATOM作为一种质押机构用于增强安全性、达成共识、提高运营效率 优势 互操作性：Cosmos协议广泛支持现在的主流公链，而不是像EVM或者非EVM局限在自己的代码框架体系里，它是一种去中心化的交易中心 可扩展性：对于传统公链，每笔交易都需要Gas费，而且每秒事务处理量往往只能达到每秒几笔的规模，而Cosmos基于自身协议的前瞻性，每秒可以处理几千笔 Avalanche链定义采用了一种独特的方式，在其主要平台中使用三条独立的区块链：交易链(X-Chain)、合约链(C-Chain)、平台链(P-Chain)。 Avalanche链最重要的突破之一是雪崩协议(Avalanche Consensus)，它是使用验证者重复的子抽样投票来快速达成共识的用户负担得起的方法。 Avalanche链还将子网作为一种新的水平扩展方法，允许创建可定制的、可互操作的区块链，子网没有数量限制 区块链分类 交易链：X链负责AVAX或者其他数字资产的创建和交易 合约链：C链 可以为DApps创建智能合约。该链实现了以太坊虚拟机下，支持兼容EVM的DApps。合约链使用Snowman共识协议，它是Avalanche共识协议的修订版 平台链：P链 用于协调验证者和子网。使用Snowman共识协议 解决问题 可扩展性差和去中心化弱 传统区块链活动增加的网络可能会迅速堵塞，例如比特币，在网络拥堵期间，交易有时候需要数小时或者几天才能完成 那么解决方法之一就是让网络更加集中，让更少的人有更多的权限来验证网络活动，从而提高交易速度。但由于去中心化是区块链中非常重要的特点 Avalanche共识协议不需要领导者达成共识，例如Pow、PoS(权益证明)或者DPoS(委托协议证明)。因此中不牺牲可扩展性的情况下，提高了Avalanche网络的去中心化程度 交易费用高 Avalanche共识协议不需要领导者达成共识 互操作性不佳 Avalanche链提供带有子网的解决方案，共享主网络的安全性、速度和兼容性的自定义应用程序特定区块链 特点 共识机制 Avalanche使用的是雪崩共识，虽然并不是唯一具有新颖共识机制的区块链 交易速度和最终确定 权利下放 可互操作的区块链 可互操作区块链的数量可能是无限的 Solana链（非EVM定义基于RUST语言，原生加密货币SOL用于支付交易费用和质押。历史证明机制(PoH)使其能够高度可扩展且搞笑的网络 Solana链是一个加密计算平台，旨在不牺牲去中心化的情况下实现高交易速度 功能 PoH机制 该机制可以提供数字记录，确认网络上任何时间点都发生过什么事情。可以呈现为一个加密时钟，为每笔交易提供时间戳以及添加简单的数据结构 PoH机制依赖于使用BFT算法的交易时间权益证明(PoS)共识机制，BFT使用同步时钟的优势，可以在不产生任何大量事务延迟或消息传递开销的情况下达成共识，保证网络安全和运行，并充当验证交易的附加工具 PoH可以被视为一种高频可验证延迟函数(VDF)，VDF是一种三重函数(设置、评估、验证)，可以产生独特且可靠的输出。VDF通过证明区块生产者已经等待足够长的时间，让网络继续前进来维持网络中的秩序 Turbine Turbine是网络上的块传播协议，它支持更轻松地将数据传输到区块链节点，通过将数据分解为更小的数据包来实现高效的数据传输。因此Solana区块链可以解决与带宽有关的问题，提高整体容量，加快交易结算速度 湾流(Gulf Stream) 作用是承担着将事务缓存转发到网络边缘的，因此验证者可以确保提前执行交易，减少确认时间。湾流有助于更快的切换领导者，同时减少来自不同未确认交易池的验证者的内存压力 Sea Level 海平面是一个超并行事务处理引擎，用于在各种SSD和GPU之间进行性能扩展 Pipeline 用于优化验证的事务处理单元，该过程设计将输入数据流分配给不同的硬件组件，因此可以支持在网络中的不同节点上更快地验证和复制交易信息 Cloudbreak 它是Solana链的横向扩展帐户数据库，有助于在Solana网络上实现所需的可扩展性。Cloudbreak是一种数据结构，是跨网络并发读写操作的理想选择 Archivers 存档器 散列算法：SHA-256","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】二层网络","slug":"读书笔记/【Web3】二层网络","date":"2024-02-06T06:54:33.426Z","updated":"2024-02-16T06:22:07.069Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】二层网络/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91%E4%BA%8C%E5%B1%82%E7%BD%91%E7%BB%9C/","excerpt":"","text":"二层网络定义指构建在现有区块链系统之上的二级框架或者协议，这些协议的主要目的是解决主要加密货币网络面临的交易速度低和扩展困难的问题 “二层”指的是针对区块链可扩展性问题提出的多种解决方案。例如早期的二层解决方案：比特币闪电网络和以太坊等离子体，虽然受限于自身工作机制和特殊性，但这两种解决方案都尽量为区块链系统提供更高的吞吐量 二层网络技术侧链它是一条平行于主链的独立运行的链。不依赖于主链的安全策略，有自己独立的安全策略。 状态通道只记录出入该通道的某一瞬间的交易。但其安全性不足，因为需要保证状态通道的运营者是可以信任的，否则投入就会有不安全性 卷叠把一切复杂的交易都交给二层网络，复杂的数据都交给卷叠处理，处理完成后只返回数据摘要或处理结果。这样对性能有一定的提升。 ZK-RollupsZK-Rollups协议促进了交易者和中继者的交互。 工作流程 交易者创建并将其交易数据广播到网络，此信息包括索引的双方地址、交易价值、网络费用和仅使用一次的数字。利用索引地址减少资源处理，交易价值产生存款和取款金额。然后智能合约将地址记录到一个Merkle树，并将交易值记录到另一个Merkle树 中继器负责收集创建汇总的事务。中继器生成一个简洁的非交互零知识论证证明，用于比较每笔交易前后的区块链状态（钱包余额）。由此产生的变化以可验证的方式散列并到达主链。 Optimistic Rollups和ZK-Rollups类似，但ORs仅向主链发布最少的信息，仅在欺诈案件中生成证明。 工作流程 当用户将交易发送到链外ORs时，聚合器注册并提交欺诈证明 聚合器在本地部署交易以生成新的智能合约。计算新的状态根，聚合器将交易和状态根发送回主链 如果用户认为聚合器返回了欺诈状态根，包括无效交易，他们可以质疑聚合器。用户可以通过发布正确的状态根和验证它所需的Merkle证明在注册这一挑战。对于违规的聚合器，以及任何建立在无效区块之上的聚合器，其保证金被削减，这些收益流向报告用户 一旦识别出无效块并完成欺诈证明，二层链就会回滚，并在前一个非欺诈块处恢复 优劣 劣势 无效状态：OP允许存在无效的区块链状态。因此，在提交欺诈证明前，可能会存在无效状态 安全性：由于其基于博弈论模型，OP可能更容易受到攻击，因为用户可以参与报告欺诈 可扩展性：随着交易规模的扩大，在某些情况下，OP可能需要更多的主链计算资源，从而导致更高的成本。 Arbitrum是解决以太坊网络拥塞和高费用问题的解决方案之一 工作流程Arbitrum生态系统中包含四个角色：验证者、虚拟机、密钥和管理器。 Arbitrum基于简单的加密货币设计，其中各方可以将智能合约实现为对合约规则进行编码的VM，它是中Arbitrum虚拟机架构上运行的程序。虚拟机的一组管理器由VM的设计者指定。 基于Arbitrum协议，任何一个管理者都可以强制VM根据VM的代码运行，与VM的结果有利害关系的各方可以选择各自信任的人代表他们这样做或者直接担任管理者。VM的状态可以通过依赖管理者器以及降低验证者的成本来提升，验证者只需跟踪虚拟机状态的hash值，而不是整个状态。","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"web3","slug":"web3","permalink":"https://1578536879.github.io/tags/web3/"}]},{"title":"【Web3】SocialFi","slug":"读书笔记/【Web3】SocialFi","date":"2024-02-06T06:54:33.423Z","updated":"2024-02-16T06:22:37.314Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】SocialFi/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91SocialFi/","excerpt":"","text":"SocialFi汇集了社交媒体和defi的原则，它提供了一种去中心化的方法来创建、管理和存储社交媒体几其参与者生产的内容。 在SocialFi的核心，应用程序是内容创建者、影响者和参与者，它们希望更好的控制自己的数据，保障言论自由以及通过参与社交媒体获利。货币化通常发生在加密货币中，而身份管理和数字所有权则由nft驱动。 构建模块货币化SocialFi应用程序通过使用社交代币或者应用内实用代币，这些代币不仅可以在应用程序级别创建，而且可以在用户级别创建，创作者可以通过社交代币管理自己的经济。 模型的基本设计原则： 只有那些持有创作者社交代币的人才能参与他们的帖子， 如果想引起影响者的注意，持有最多数量的社交代币时，消息回复会出现在回复页面首页 创作者和影响者可以设置阈值，允许拥有超过一定数量社交代币的追随者直接向他们发送消息 当用户想要通过点赞或者分享与某人进行互动时，需要花钱。 审查与言论自由SocialFi平台通过标记链上数据进行去中心化管理。SocialFi平台所有可公开查看的帖子都在链上，因此，这些链上数据可供规则引擎根据主题和所用词的性质来解析和快速标记帖子。 每个单独的节点都可以选择阻止一些标签并与其他标签互动。如果一个节点选择参与和认可一个有害帖子时，它将收到法律起诉。因此，在网络中必须允许非中央机构或中央组织内的小团体做出选择，控制器和责任在于个人。 数字所有权和身份如果用户想创建一个SocialFi资料，可以使用自己的nft作为个人头像，并通过连接他们的钱包来确认自己的nft所有权。 SocialFi平台中的nft为创作者提供分发功能来广播他们的作品。","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】NFT","slug":"读书笔记/【Web3】NFT","date":"2024-02-06T06:54:33.421Z","updated":"2024-02-16T06:22:32.017Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】NFT/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91NFT/","excerpt":"","text":"定义nft是以数字形式表示的加密货币资产，每个nft都是独一无二的，这样有形资产和无形资产都能够被标记。即nft指可以投资于有价值的东西，而无须实际拥有或者存储它们，因此，在公开市场上买卖nft变得非常容易。 每个nft都可以通过唯一的交易hash值识别，即没有两个nft是完全一致的。 工作流程冷现金是属于同质化资产（可替换，实际价值不变），而nft是一种非同质化资产，即无法相互转换，转换之后价值也不能完全一致，因为每个代币都是唯一的。 区块链协议 所有最好的nft都托管在区块链协议上，许多nft的创建者更喜欢以太坊区块链，尤其是因为它支持erc-721代币。即以太坊区块链这个特定子集非常适合nft，因为每个erc-721代币都是独一无二的。 以太坊铸币 铸币指的是创建尚未存在的新nft的过程。即当购买nft时，购买的是已经由其他人创建的数字资产。如果希望获取的是第一次被创建的nft，那么可以通过以太坊或者币安链等区块链网络铸造nft，这样nft可以验证你是否是真正的所属者。 类型分割式nft以类似于股权的形式去分配一个nft，每个拥有的人都有可以获取一定比例的财产。 但是这个功能目前还未完全定型，处于探索状态。 实物不动产实物房地产是用nft表示的资产的完美示例，房产和nft都是独一无二的。 常见用例是部份所有权，例如房地产开发商想向零售客户开放投资机会，那么开发商可以让nft与一定比例的所有权相关联，然后在公开市场上发行nft 元宇宙中的虚拟房地产CryptoPunks和其他数字收藏品CryptoPunks是2007年创建的1k个数字图像的集合，每个CryptoPunks都是独一无二的，并由nft支持。 体育nft有些体育品牌正在出售来自关键游戏赛事的视频剪辑的所有权或者比赛时的个别物品 游戏nft好处 适合内容创作者 保护知识产权 价值存储 现在所被创造出来的nft都是有价值的，因为铸币nft是需要有价值的东西才能被铸造。 市场较大 nft可用抵押品 nft与加密货币 相同点 以数字形式表示 构建和存储在区块链中 不同点 nft是非同质化货币，而加密货币是同质化产品。 每个nft都是独一无二的，价值也是独一无二的 CryptoPunks定义CryptoPunks是larva labs创建，是一个拥有1w个数字图像的系列，在以太坊区块链上被标记为nft。 nft实际上是对数字项目的所有权契约，持有CryptoPunks nft表示是该独一无二像素头像的唯一所有者。 BAYC定义BAYC是在以太坊区块链上铸造的一系列的nft头像，由1k枚nft组成，样式设计为以太坊区块链的猿猴。","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】GameFi","slug":"读书笔记/【Web3】GameFi","date":"2024-02-06T06:54:33.419Z","updated":"2024-02-16T06:22:20.209Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】GameFi/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91GameFi/","excerpt":"","text":"定义GameFi是游戏和金融的组合，涉及到区块链游戏，对玩家提供经济激励。奖励包含游戏内部的奖励或者以nft为载体的奖励。 示例 Decentraland（MANA和LAND代币）、 the sandbox（结合DAO和NFT） axie infinity（AXS代币） 前期需要准备3个axie nft作为起始，后续可以通过此游戏赚取回报获取slp代币，可以兑换为金钱 Gala Games（以GALA为代币） 将自己定位为一个游戏区块链生态孵化者，经济驱动剂是根据以太坊区块链上的erc-20标准创建的gala代币，兼容币安智能链。 其生态系统包含游戏、游戏发布平台、nft市场、游戏云托管服务和平台自身的代币经济学。 玩家可以通过特定的投票机制决定gala games平台应该添加哪些游戏。 Enjin（是生态系统范围的解决方案，旨在通过对游戏内资产进行代币化并注入项目的原生代币ENJ） 基础设施包含GraphQL和可信云。由于enjin允许开发人员用sdk和api以便根据需求访问响应功能，因此它采用graphql简化访问资源的方式，促进了虚拟世界和智能合约区块链之间的交互。而可信云允许enjin网络sdk和api的游戏与以太坊区块链互联 游戏公会YGGygg是专注于区块链p2p游戏的游戏公会，投资nft资产并将全球的区块链游玩家连接到一起的社区。 目标是建立一个属于玩家和投资者的网络，帮助彼此在nft游戏领域起步和成长。 定义投资于区块链游戏中使用nft的dao？游戏包含较为广义的元宇宙，具有基于区块链的数字世界中的众多元素，包括数字土地&#x2F;货币等。 运行结合了defi和nft，在以太坊区块链上创建了一种元宇宙经济。 ygg由多个subDAO（依附于DAO的较小DAO）组成，而这些subdao由来自特定nft游戏或地理位置的玩家群体组成。每个subdao都有自己的一套规则，用于管理各自的p2e游戏的活动和资产。 在ygg上，所有nft和数字资产都存储于社区控制的ygg金库中，金库为每个subdao提供nft，包括多个区块链游戏的p2e资产。 代币ygg代币是一种赋予持有人对ygg dao的治理权利的erc-20代币。ygg代币可以用于支付网络上的服务费用，也可以在质押后在ygg收益池中获取奖励，或用于解锁ygg discord频道上的独家内容。此外，ygg代币持有者还可以提交提案，并对公会的技术、产品、项目、代币分配和整体治理结构等决策进行投票，最终在dao中得到实施的获胜建议将获得ygg代币奖励。 dappradar 常用信息平台该平台通过包括以太坊、eos和ont在内的20多个协议跟踪1w+dapps，使用户可以分析和比较各自dapps。 定义网站自称为为全球用户带来了关于去中心化应用程序的高质量、准确的见解，迅速成为值得信赖的行业信息来源；发现dapps的起点，托管来自30多个协议的9k个dapps；能提供全面的nft估值和投资组合管理，并在数据主导、可操作的行业报告方面处于领先地位。 它的代币RADAR具有多种功能：持有人可以质押radar以赚取被动收入；是一种治理代币，允许持有者对生态系统的未来发展进行投票；用户可以获得对特定功能和见解的独占访问权限。","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】DAO","slug":"读书笔记/【Web3】Defi","date":"2024-02-06T06:54:33.417Z","updated":"2024-02-16T06:22:26.293Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】Defi/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91Defi/","excerpt":"","text":"defi是“去中心化金融”的缩写，是加密货币或者区块链中各种金融app的总称。 defi从区块链中获取灵感。区块链是数字货币背后的技术，它允许多个实体持有交易历史的副本，这意味着它不受单一的中央来源控制。 主流的defi应用 去中心化交易所（dex）。它帮助用户将货币兑换为其他货币，它直接连接用户，因此他们可以直接交易加密货币，而无须信任中介机构的资金 稳定币：一种与加密货币以外的资产挂钩并具有稳定价格的加密货币 借贷平台：这些平台使用智能合约来代替中间管理借贷的银行等中介机构 跨链比特币（wbtc）。将比特币发送到以太坊网络的方式，因此比特币可以直接在以太坊的defi系统中使用。wbtc允许用户通过在上述去中心化借出的btc赚取利息。 预测市场。投注未来事件结果的市场。defi版本的预测市场目标是提供相同的功能但没有中介机构。 dex：去中心化交易所dex是一个点对点市场，交易直接发生在加密交易者之间。处理加密货币之间的交易 工作流程通过cex（中心化交易所），可以将加密货币与法定货币之间互换。这些所有交易都是由交易所自己通过“订单薄”处理的，该订单薄根据当前的买卖订单确定特定加密货币的价格。而dex是不允许法定与加密货币之间的交易。 dex只是一种智能合约，它通过算法确定各种加密货币的价格，并促进流动性池（投资者锁定资金以换取类似的利息奖励来促进交易。 cex的交易记录在该交易所的内部数据库中，而dex的交易直接在区块链上结算 优缺点 优点 种类繁多。dex几乎提供了无限的代币种类 降低黑客风险。由于dex交易中的所有资金都存储在交易者自己的钱包中，因此理论上它们不太容易受到黑客攻击。dex还降低了“交易对手风险”（违约的可能性） 匿名性。使用主流的dex不需要个人信息 缺点 需要用户做大量的前期研究准备，不能指望dex本身提供很多帮助。在dex中进行复杂交易需要一些专业知识 智能合约漏洞。任何defi协议的安全性都取决于为其提供支持的智能合约，而合约代码可能存在可利用的漏洞。 风险更高的代币。dex上面存在未经审查的代币 案例uniswap 稳定币稳定币是一种储备资产挂钩的数字货币，旨在降低相对于比特币等非挂钩加密货币的波动性。 常用的稳定币包括USDT、USDC、DAI等 DAIdai是一种加密资产，试图通过将其他加密资产锁定在合约中与美元保持1:1的价值关系。dai是一种名为maker协议的开源软件的产品，运行在以太坊区块链之上的dapp。dai保持其价值的方式是使用以ETH计价的抵押债务。抵押债务为贷方提供了一种使用他们拥有的资产获得贷款的方式。 maker协议通过以太坊运行的智能合约，使借款人能锁定ETH和其他加密资产，从而对其进行抵押，以便贷款的形式生成新的dai。如果借款人想收回抵押的eth，必须将dai返回给协议并且支付费用，如果发生清算，maker协议将使用基于市场的内部拍卖机制获取抵押品并出售。 工作流程dai是一种由其他加密货币抵押的加密资产。如果用户想获取dai，那么可以在交易所花费eth购买等值的dai，也可以使用maker协议抵押eth和其他资产。 抵押债务头寸（cdp）是maker上的智能合约，用户可以利用它来锁定其抵押资产（eth或bat）并生成dai。cdp可以视为存储抵押品的安全保险库。dai一般会被超额抵押，即所需的存款金额通常要高于dai的价值。 借贷平台借贷市场将借款人与加密货币的贷方联系起来。主流平台Compound允许用户借用加密货币或者提供自己的钱款，用户可以通过借款获取利息。Compound通过算法设置利率，因此如果借入加密货币的需求更高，利率将被推高。 defi借贷是基于抵押品的。 Compound它是建立在以太坊上的可公开访问的智能合约系统，允许借款人通过将其加密资产锁定到协议中来获取贷款和为贷方提供钱款。借款人和贷款人支付和收取的利率由每种加密货币的供求关系决定。每个区块的开采都会产生利率，贷款可随时还款，锁定资产可以随时提现。 原生代币是cToken，它允许用户从他们的钱中赚取利息，也能在其他应用程序转移、交易和使用 流动性质押质押是赚取资产被动收入的一种方式，同时可以支持区块链网络的安全和运营。流动性质押协议提供与常规pos质押相同的好处，减少了潜在的缺点。 流动性质押协议处于加密货币质押经济的最前沿，改变了defi行业的流动性准入。流动质押的优势之一就是能够在互动和使用资产的同时获取奖励，流动性质押协议为借贷协议和单产农业等活动提供可基础。 质押将加密资产锁定在协议中以获取回报的过程。通过将闲置资产投入使用，抵押加密货币是赚取被动收入的一种方式。质押协议可以协助pos共识机制，该机制促进关于区块链交易有效性的网络协议。因此，与比特币等pow区块链相比，降低可能源需求。 质押在一定时期内无法使用资金。 流动性质押锁定资金以赚取奖励的同时仍然可以使用资金的方式。 流动性质押运作用户有一个ETH，将eth放入流动质押协议中，然后会收到一个价值等值的stETH（质押的eth）作为回报。 该用户将从协议中保留的原始eth存款中获取奖励。为了获取被抵押的eth，需要一个stETH才能将其兑换回来。 流动质押优点 高产农业 流动性质押是收益农业活动的基本基石。收益农业是指交易者将资金锁定在一个协议中并收到这些资金的打包或者代币化版本。 加密贷款 快速存取资金 缺点 有风险 预测市场预测市场就是可以买卖预测的市场，即分享事件的结果。 预测市场是利用群体智慧来进行的，那么由于defi是一个去中心化的市场，普通民众也能参与，更加自由。 实例：Augur、Gnosis","categories":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"}],"tags":[{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"}]},{"title":"【Web3】DAO","slug":"读书笔记/【Web3】DAO","date":"2024-02-06T06:54:33.415Z","updated":"2024-02-16T06:21:19.128Z","comments":true,"path":"2024/02/06/读书笔记/【Web3】DAO/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Web3%E3%80%91DAO/","excerpt":"","text":"DAO是一种由社区主导的“公司”，即去中心化的自治组织，它完全d是透明和自主的，由智能合约制定基本规则，执行商定的决定，并且在任何时候，提案、投票甚至代码都是可以公开审计的。 DAO完全由个人成员管理，他们共同决定项目未来的走向。 框架的特点之一就是激励措施的一致性，鼓励直言不讳，并且只批准符合协议本身最大利益的提案，同时符合他们个人的最大利益。 工作流程DAO的规则是由社区成员的核心团队通过使用智能合约建立的，这些智能合约奠定了DAO运行的基本框架，他们是高度可见的、可验证和可公开审计的，因此任何潜在的成员都可以充分了解协议在每一步的运作方式。 当规则被正式写入区块链，下一步就是弄清楚如何获得资金以及如何将其赋予治理。通常通过发行代币实现，协议通过发行代币来筹集资金并填补DAO的金库。作为法定货币的回报，代币持有者被赋予一定的投票权，通常与他们的持股数成正比，一旦资金筹集完成，DAO就可以进行部署了。 DAO部署完成投入使用后，除了通过成员投票达成共识外，不能再通过任何其他方式对其进行修改。 某些情况下，代币持有者可以投票决定在他们之间分配协议收取的部份费用（例如uniswap） 协议DAO目的是为了帮助构建协议而存在的协议体。 MarkerDAOMarkerDAO是协议DAO的一个典型示例。它是在以太坊区块链上开发借贷、储蓄和稳定加密货币技术的组织。即它是一个建立在以太坊上的DAO，允许在不需要中间人的情况下借贷加密资产，MarkerDAO由管理借贷的智能合约服务以及两种货币（DAI和MKR）组成，以规范贷款的价值。 MarkerDAO它创建了一个协议，允许任何拥有MarkerDAO钱包的人以DAI稳定币的形式借钱给他人。通过MarkerDAO的智能合约中锁定一些eth，用户可以创建一定数量的dai，锁定的eth越多，可以创建的dai越多。当用户需要解锁作为dai贷款抵押品的eth时，只需要偿还贷款和相关费用。 当贷款的抵押品价值降至某个点以下时，即eth的价格已经远远低于借入的dai数量，那么这个时候贷款就会被清算。清算和清算威胁通过防止人们借贷过多来保持系统稳定。如果“清算威胁”使系统保持诚实，那么mkr代币持有者是最后的贷款人。当eth价格崩盘并且一次清算太多贷款时，mkr被创建并出售以偿还贷款。同时，费用必须以mkr支付，清算罚款用于回购mkr，这些mkr会被烧毁或销毁。理论上，mkr应该始终有足够的价值来支持清算贷款，dai、mkr和eth作为一种自动制衡系统运行，两两之间相互抵消，以保持系统稳定和去中心化。 慈善DAO（grant dao社区捐赠资金并使用dao投票决定如何以治理提案的形式将资金分配给各种贡献者。grant dao最初的治理是通过不可转让的股份进行的，意味着成员参与的主要动机是产生社会效益而非财务回报。 Moloch DAOMoloch DAO为公共产品项目提供资金以改善以太坊生态系统。 目的改善和推动以太坊生态系统的项目提供资金。 它由成员决定哪些项目可以获得资助。它将区块链技术视为一种公共产品，即每个人都可以从中收益并应该平等的获得东西。 Gitcoin开发人员和编码人员可以在该平台获得报酬，以使用各种编程语言开发开源软件。用户可以向gitcoin平台提交自己的项目提案，可以从捐助者众筹资金。 旨在促进有意义的开源项目的开发，并更好的协调捐助者和开发者的利益。 社交DAO其旨在将志同道合的人聚集在同一网络社区中，围绕一种代币进行协调。 示例：FWB FWB它是一个将集体文化和技术结合在一起的新型社交社区，是一个自行组织，富有创造力的互联网原生社区。它以人类价值观为核心，成员共同进行内容创作。 它由艺术家、创作者和领导web3.0转型的人员组成，fwb是成员和实现集体使命的技术之间的桥梁。 工作流程 其有个参与框架 治理包含fwb代币持有者，他们投票支持dao的提案并通过论坛参与治理 董事会 董事会由团队成员、顾问和社区成员等混合实体组成，他们专注于制定有效的社区建设战略。 团队负责人 管理贡献者团队的成员，根据自己的经验被选出的。批准用于赏金或奖励的资金，设定关键优先事项以促进协助成功 贡献者 持有fwb的成员。贡献者通过积极参与活动为团队提供动力，并根据他们的贡献水平获得奖励。 APE旨在促进去中心化和推进由社区主导的治理模式，任务是管理apecoin dao的决策，负责日常行政、薄记、项目管理和其他任务，以确保dao社区的想法得到足够的支持，因为去中心化治理对于建立和管理一个全球分散的社区很重要。 服务DAO客户可以为特点任务发放奖金，一旦完成，它在奖励个人贡献者之前需要向dao金库支付部份费用。贡献者通常还会收到在dao中传达所有权的治理通行证。 出现背景 贡献者获得直接所有权 服务dao的贡献者既获得了他们为每个客户创作的价值的份额，也获得了整个组织的份额 开放的贡献文化 一些服务dao是结构化的，因此任何人都可以加入并做出贡献。过滤申请人都dao更看重一个人为dao增值的能力 更好的理解客户的问题 减少贡献者的收入波动 贡献者通过服务dao社区和客户的项目获得报酬，而项目中的报酬一部份为累计到组织中的所有利益相关者，个人贡献者可以随着时间的推移而平滑收益波动。","categories":[{"name":"web3","slug":"web3","permalink":"https://1578536879.github.io/categories/web3/"}],"tags":[{"name":"web3","slug":"web3","permalink":"https://1578536879.github.io/tags/web3/"}]},{"title":"【Wasm】介绍(未完成)","slug":"读书笔记/【Wasm】介绍----1","date":"2024-02-06T06:54:33.413Z","updated":"2024-02-16T06:21:09.214Z","comments":true,"path":"2024/02/06/读书笔记/【Wasm】介绍----1/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Wasm%E3%80%91%E4%BB%8B%E7%BB%8D----1/","excerpt":"","text":"出现背景webAssembly的堆栈式结构被设计为编码为一种高密度，可以被浏览器快速加载和执行的二进制格式。 webAssembly的设计初衷是希望浏览器以近似原生C&#x2F;C++应用的运行速度，来调用Wasm模块中包含的这各类型平台（处理器架构）上都可以使用的通用硬件功能。 Wasm描述来一个内存安全的沙箱执行环境，可以在现有的js虚拟机中运行实现。当浏览器中运行一个Wasm模块时，Wasm将遵循浏览器中与Web应用一致的同源策略来保证其安全性。 基本原理Wasm主要是中v8解析js的解析器和编译链路中进行处理（Pipeline链路） 链路中各个编译器的前置Parser的语法分析，转换为AST中间数据格式 优化编译，TurboFn优化编译器会使用IC（Inline Cache）和OSR（On Stack Replacement）等对js源码进行分析和优化 进行lowering操作，优化编译器会根据现有的已经优化好的js源码来生成一些处于低层级且与硬件架构相关的中间代码。 此时加入Wasm操作 引擎不需要对Wasm模块中的二进制代码进行优化，也不需要生成冗余的占用大量内存的AST结构信息。只需要把这些模块中的二进制代码直接加载到内存中，然后经过位于V8链路末端编译器后端的处理，最后生成的机器码便可以直接被浏览器执行。 位于V8链路最末端的编译器后端（backend）负责将这些经过处理后的代码直接转译成基于特定处理器架构的机器码，最后再被浏览器解析和执行","categories":[{"name":"webAssembly","slug":"webAssembly","permalink":"https://1578536879.github.io/categories/webAssembly/"}],"tags":[{"name":"webAssembly","slug":"webAssembly","permalink":"https://1578536879.github.io/tags/webAssembly/"}]},{"title":"【vue】虚拟dom基本","slug":"读书笔记/【vue】虚拟dom基本","date":"2024-02-06T06:54:33.411Z","updated":"2024-02-16T06:20:47.859Z","comments":true,"path":"2024/02/06/读书笔记/【vue】虚拟dom基本/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90vue%E3%80%91%E8%99%9A%E6%8B%9Fdom%E5%9F%BA%E6%9C%AC/","excerpt":"","text":"原由在项目运行时，页面状态会不断变化，每当状态变化时，都需要重新渲染。如果每次都直接将页面全部替换更新，那么由于访问dom是相对昂贵的，这样会导致非常多的性能浪费。因此当某个状态变化时，只更新与这个状态相关联的dom节点。虚拟dom通过状态声称一个虚拟节点树，然后使用虚拟节点树进行渲染。在更新的时候，只需要比较上一次的节点树与当前节点树有何不同，更新不同的地方即可。 vnode类型注释节点 有效属性text和isComment 元素：1&lt;！—注释—&gt; vnode：1234&#123;text：”注释”，isComment：true&#125; 文本节点 有效属性text 创建过程 123function createTextVnode(val)&#123;return new VNode(undefined, undefined, undefined,String(val));&#125; 克隆属性 特殊属性isCloned 创建过程 1234567891011function createCloneVnode(vnode, deep)&#123;const cloned = new VNode(vnode.tag, vnode.data, vnode.children, vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory)cloned.ns = vnode.nscloned.isStatic = vnode.isStaticcloned.key = vnode.keycloned.isComment = vnode.isCommentcloned.isCloned = trueif(deep &amp;&amp; vnode.children)&#123;cloned.children = createCloneVnode(vnode.children)&#125;&#125; 元素节点 有效属性tag: 节点名称，例如div、li等data: 节点上的数据，例如attrs、class等children: 当前节点的子节点列表context: 当前组件的vuejs实例 元素： 1&lt;div&gt;&lt;span&gt;123&lt;/span&gt;&lt;/div&gt; vnode 123456&#123;children: [VNode, VNode]，context: &#123;…&#125;,data：&#123;…&#125;，tag: “div”&#125; 组件节点 特有属性：componentOptions: 组件节点的选项参数，包括propsData、tag、children等componentInstance: 组件实例 函数式组件 特有属性：functionContextfunctionOptions","categories":[{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/tags/vue/"}]},{"title":"【markdown】语法","slug":"读书笔记/【markdown】语法","date":"2024-02-06T06:54:33.409Z","updated":"2024-02-16T06:20:39.269Z","comments":true,"path":"2024/02/06/读书笔记/【markdown】语法/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90markdown%E3%80%91%E8%AF%AD%E6%B3%95/","excerpt":"","text":"***、—、___可以显示横线效果 链接除了最基本的外，还包含以下 引用链接 link 网址链接 https:// 扩展语法GFM 删除线～ 删除 下划线 a 上标 这是^上标^ 下标 这是下标 表情 :smile: 表情地址 任务列表 list 1 list2 锚点 point 排版空格 中英文之间、中英文与数字之间、英文标点符号与后面的文字之间 其他语言转换工具Pandoc vs code语法增强插件markdown preview enhanced 语法 引用文件 1@import “文件名” 可以将文件内容直接显示，包括图片、csv表格 幻灯片 1234&lt;!— slide—&gt;First&lt;!— slide—&gt;Second 使用库：reveal.js 交互性工具交互性md工具可以直接执行代码 jupyter notebook r markdown 锚点其实呢，每一个标题都是一个锚点，和HTML的锚点（#）类似，比如我们 语法 效果 [回到顶部](#readme) 回到顶部 不过要注意，标题中的英文字母都被转化为小写字母了。 以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！ 复选框列表 需求分析 系统设计 详细设计 编码 测试 交付 您可以使用这个功能来标注某个项目各项任务的完成情况。 Tip: 在GitHub的issue中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。 块引用常用于引用文本文本摘自《深入理解计算机系统》P27 令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，其实对于哪种字节排序的选择都是任意的。 “端”（endian）的起源以下是Jonathan Swift在1726年关于大小端之争历史的描述：“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。” 块引用有多级结构 数据结构 树 二叉树 平衡二叉树 满二叉树 对齐表格可以指定对齐方式 左对齐 居中 右对齐 col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 表情Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。 比如:blush:，可以显示:blush:。 具体每一个表情的符号码，可以查询GitHub的官方网页http://www.emoji-cheat-sheet.com。 但是这个网页每次都打开奇慢。。所以我整理到了本repo中，大家可以直接在此查看emoji。 diff语法版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。 其语法与代码高亮类似，只是在三个反引号后面写diff，并且其内容中，以 + 开头表示新增，- 开头表示删除。 效果如下： 12+ 鸟宿池边树，僧敲月下门- 鸟宿池边树，僧推月下门","categories":[{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/categories/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"}],"tags":[{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/tags/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"}]},{"title":"【js】属性描述符","slug":"读书笔记/【js】属性描述符","date":"2024-02-06T06:54:33.407Z","updated":"2024-02-16T06:20:31.591Z","comments":true,"path":"2024/02/06/读书笔记/【js】属性描述符/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90js%E3%80%91%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E7%AC%A6/","excerpt":"","text":"object属性与方法 通过使用Object.getOwnPropertyDescriptor(object, name)来配置属性 wirteable 设置后无法修改属性值，严格模式下会报错 类似于设置了getter和setter，但是setter是个空操作的。 如果想用setter实现wirteable，那么需要在严格模式下进行报错 configurable 表明属性是否可以再进行配置以及是否禁止删除这个属性 123Object.getOwnPropertyDescriptor(object, name,&#123;configurable: false&#125;)//报错//Object.getOwnPropertyDescriptor(object, name,&#123;configurable: true&#125;) configureable:false时可以将wirteable从true改为false，但是不能从false改为true enumerable 是否出现在对象的枚举属性中，设置为false后，在for..in中就不会再出现这个属性 obj.propertyIsEnumerabel(key)检查该键是否存在对象(不检查原型链)中且enumerable为true，判断该键是否可枚举。 Object.preventExtensions(obj) 禁止一个对象添加新属性并且保留已有属性 Object.seal(obj) 不能添加新属性，也无法重新配置或者删除任何属性 实际上实际上是在一个现有对象上调用 Object.preventExtensions(obj) ，并且把所有现有属性标记为 configurable: false Object.freeze(obj) 禁止对对象本身及其任意属性的修改 实际上是在现有对象上调用 Object.seal，并且把所有属性标注为 . wirtable: true","categories":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/categories/js/"}],"tags":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/tags/js/"}]},{"title":"【js】this指向","slug":"读书笔记/【js】this指向","date":"2024-02-06T06:54:33.405Z","updated":"2024-02-16T06:20:26.379Z","comments":true,"path":"2024/02/06/读书笔记/【js】this指向/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90js%E3%80%91this%E6%8C%87%E5%90%91/","excerpt":"","text":"this优先级 通过new进行创建的，this指向创建的对象 如果构造函数返回了一个对象，那么绑定的this就是返回对象的 如果构造函数没有返回对象，返回的是number或者boolean，那么实际返回的也是这个构造函数 显示绑定（bind&#x2F;apply）：如果传的是null或者undefined，实际应用的是默认绑定规则 隐式绑定，绑定的是那个的上下文对象123Var fn()&#123;&#125;Var obj = &#123;fun: fun&#125;Obj.fun();//指向的是obj 默认绑定，严格模式下是undefined，非严格模式下是全局对象 实例1234567const a=&#123; text:1,fn: function ()&#123;return this.text&#125;&#125;const b=&#123; text:1,fn: function ()&#123;const aa=a.fn;return aa();// 输出undefined，因为是在window层调用的&#125;&#125;","categories":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/categories/js/"}],"tags":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/tags/js/"}]},{"title":"【Htpp】header","slug":"读书笔记/【Htpp】header","date":"2024-02-06T06:54:33.403Z","updated":"2024-02-16T06:20:20.984Z","comments":true,"path":"2024/02/06/读书笔记/【Htpp】header/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90Htpp%E3%80%91header/","excerpt":"","text":"通用头部cache-control控制缓存，可以接收多个参数，参数之间以“，”隔空。 请求和响应共用 no-cache：表示强制使用最新的值而不使用缓存。请求头部包含no-cache，表示客户端不接收缓存过的响应，缓存服务器必须把客户端请求转发给源服务器；响应请求里面包含，那么缓存服务器不能对响应资源进行缓存。 no-store：不应该缓存当前内容，表示对应的报文中包含机密信息 no-transform：缓存不能改变主体的媒体类型，能防止缓存服务器压缩图片资源等。 max-age：缓存有效期（以秒为单位）。请求包含时，如果缓存资源的缓存时间比指定时间数值更小时则接受缓存资源，当值为0时，缓存服务器会把请求转发给源服务器；当响应包含时，缓存服务器不再确认资源的有效期，而以max-age数值作为缓存保存时长。 请求头部 min-fresh：要求缓存服务器指定时间内返回响应（以秒为单位） only-if-cached：客户端仅在缓存服务器本地缓存目标资源的情况下才会要求其返回值，也就是说不会向源服务器转发请求。 响应头部 must-revalidate：本地缓存过期前可以使用，否则必须进行有效性校验 public：响应可能会被任何对象缓存，没有限制 private： 响应只能被特定用户缓存，不能被其他用户使用 proxy-revalidate：仅适用于共享缓存，私有缓存时忽略 connection close: 当一方的connection为close时，表示关闭此次连接 keep-live：持久化连接 date报文创建时间 请求头部accept可以设置多个值，每个值通过“，”进行分割 常用值：text&#x2F;html，application&#x2F;xml；q&#x3D;0.9等 注：q&#x3D;x，是给当前类型赋予权重，范围为0～1，可精确到小数点后3位。和MIME子类型通过“，”分割，默认权重值为1。服务器会优先返回权重较大的类型，如果权重相等，则按照从左至右的顺序处理。 accept-charset客户端可以处理的字符集类型，通常不需要额外设置此项，每种文件类型都有默认的值。和accept一样可以设置权重 accept-encoding客户端可以接收的编码方式，通常这个字段值会是某种压缩算法，比如gzip等。和accept一样可以设置权重 accept-language客户端可以解析的自然语言，可以一次性指定多个语言并设置权重。 authorization告知服务端认证信息。通常在收到401后，在请求头里面加入authorization：type credentials host（必传）告知服务器请求资源所处的互联网主机名和端口号（不指定将使用默认端口号）。 必传是因为服务器在接收到请求后将请求的主机号替换为ip地址，但是如果这个ip部署了多个域名，那么服务器无法转发到对应的请求 if-modified-since确认代理或者客户端本地资源的有效性。服务端在接受到这个值后，会与资源最近更新时间做对比，如果在字段指定的日期之后资源发生了变化，那么服务器会返回最新的资源，否则返回304 if-none-match用于判断本地缓存是否失效。存储的是上个响应头部的etag值。当指定的值与资源的etag值不一致时，服务器端才会处理请求 响应头部age告知客户端服务端在多久前创建了响应，若创建该响应的是缓存服务器，age指的是缓存后响应再次发起认证到认证完成的时间。代理创建响应必须加上age字段 etag服务端在每次更新资源后生成一个唯一对应的标识，生成算法由服务器自行决定 分类： 强etag：资源发生变化就会改变 弱etag：资源发生了较大变化时才会改变。以W&#x2F;来表示 location使用头部字段location可以引导请求发起方至某个与请求url位置不同的资源，一般会配合3xx进行使用 www-authenticate告知客户端当前服务器端可接收的认证方案，然后客户端可以在authentication字段中返回对应的值 主体头部allow通知客户端能够支持的http请求方法。当服务端接收到不支持http请求方法时，会响应状态信息405，同时把支持的方法写入allow字段 content-encoding告知客户端当前响应内容的编码方式 content-length表明主体部分的大小，单位为字节 content-type表明响应主体内容的MIME类型 last-modified资源最后的修改时间，配合缓存使用 expires失效日期","categories":[{"name":"http","slug":"http","permalink":"https://1578536879.github.io/categories/http/"}],"tags":[{"name":"http","slug":"http","permalink":"https://1578536879.github.io/tags/http/"}]},{"title":"【css】流向修改","slug":"读书笔记/【css】流向修改","date":"2024-02-06T06:54:33.401Z","updated":"2024-02-16T06:20:14.666Z","comments":true,"path":"2024/02/06/读书笔记/【css】流向修改/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90css%E3%80%91%E6%B5%81%E5%90%91%E4%BF%AE%E6%94%B9/","excerpt":"","text":"direction值 ltr 默认值，从左到右 rtl 从右到左 场景 文字省略号转向，且不影响文字的流向 表格呈现顺序 unicode-bidi属性值 normal 默认值，元素正常排列。但若设置了direction：rtl，则图片、按钮和问号、加号之类的字符会从右往左显示，但中英文还是从左往右 embed 其只能作用于内联元素。其会开启一个看不见的嵌入层，然后自己在里面重新排序，所以不会受到外部unicode-bidi影响 其和在元素前嵌入U+202B和后嵌入U+202C效果一致 bidi-override 重写双向排序规则，通常样式表现为所有字符都按照统一的direction顺序排序 其和在元素前嵌入U+202E和后嵌入U+202C效果一致 wirting-mode属性css3语法 horizontal-tb 文本流为水平方向，元素从上往下堆叠 vertical-rl 垂直方向，从右往左堆叠，和古诗词顺序一致 vertical-lr 垂直方向，从左往右堆叠 inherit initial unset ie lr-tb ie7以上支持，从左往右，从上往下，且下一行水平元素在上一行元素的下面 rl-tb ie7+，从右往左，从上往下，且下一行水平元素在上一行元素的下面 tb-rl ie7+，从下往上，从右往左，下一个垂直行定位于前一个垂直行的左边 bt-rl ie7+，从下往上，从右到左，下一个垂直行定位于前一个垂直行的左边 tb-lr ie8+，从上往下，从左往右垂直 bt-lr ie8+，从下往上，从左往右垂直 lr-bt ie8+，从下往上，从右往左水平 rl-bt ie8+，从下往上，右往左水平 lr ie9+，svg和html上使用，等同于lr-tb rl ie9+，svg和html上使用，等同于rl-tb tb ie9+，svg和html上使用，等同于tb-rl 改变内容 margin margin重叠可以在垂直和水平方向上都会进行 margin：auto 可以实现垂直居中 text-align：center 图片垂直居中 text-indent 可以用这个属性实现文字往下一沉的效果 iconfonts旋转","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/tags/css/"}]},{"title":"【css】属性关键字","slug":"读书笔记/【css】属性关键字","date":"2024-02-06T06:54:33.398Z","updated":"2024-02-16T06:20:11.825Z","comments":true,"path":"2024/02/06/读书笔记/【css】属性关键字/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90css%E3%80%91%E5%B1%9E%E6%80%A7%E5%85%B3%E9%94%AE%E5%AD%97/","excerpt":"","text":"inherit继承，从IE8开始支持 initial初始值关键字，把当前css属性的计算值还原为css语法中规定的初始值 注：并不是将其还原为浏览器默认的初始值 unset如果当前使用的css属性是具有继承特性的，例如color，那么就和inherit表现一致 如果当时使用的css属性没有继承特性，那么就表现和initial一致 revert当前元素还原为浏览器内置的样式 allall属性可以重置除unicode-bidi、direction以及css自定义属性外的所有css属性。 1all：initial ｜inherit ｜unset｜revert fit-content用子元素的宽高来确定当前元素的数据。 min-content最小内容宽度或首选最小宽度 替换元素min-content手当前元素内容自身的宽度。 CJK文字如果是没有标点的中文，那么min-content是单个汉字的宽度 如果是包含避头标点（，。？、！等）或者避尾标点（“（等），且line-break不是anywhere的中文，那么min-content是包含标点字符的宽度 非GJK文字min-content是由字符单元的宽度决定的，所有连续的英文字母、数字和标点都被认为是一个字符单元，直到遇到中断字符 最终的首选最小宽度是所有内部子元素中最大的那个首选最小宽度值 max-content最大内容宽度 stretch、available、fill-available都是让元素尺寸自动填满可用空间 stretch 弹性拉伸，替换之前的fill- available和available available 可用空间，firefox的关键字，需加上-moz-前缀 fill-avaiable 填充可用空间，需配合-webkit-私有前缀","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/tags/css/"}]},{"title":"【css】取值规则","slug":"读书笔记/【css】取值规则","date":"2024-02-06T06:54:33.396Z","updated":"2024-02-16T06:19:59.250Z","comments":true,"path":"2024/02/06/读书笔记/【css】取值规则/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90css%E3%80%91%E5%8F%96%E5%80%BC%E8%A7%84%E5%88%99/","excerpt":"","text":"作用css本质上就是声明规则，在各种条件下，产生特定的效果。因此层叠（cascade）决定了如何解决冲突，是css语言的基础 规则当样式发生冲突，层叠会依据三种条件解决冲突 样式表来源样式来自哪儿，自己设定的样式和浏览器默认的样式等 用户代理样式 即浏览器默认样式，浏览器应用了用户代理样式之后才会应用作者样式表，后者会覆盖前者的样式 !important 重要声明，标记了的样式会被当作更高优先级的来源 选择器优先级哪些选择器比另一些选择器更重要，浏览器的优先级被分为两个部分：html的行内样式和选择器的样式 准确规则：id选择器数量&gt;id选择器数量一致，类多的选择器&gt;标签名多的选择器多 源码顺序样式在样式表里的声明顺序 inherit和initialinherit继承父级的值 initial撤销设定的样式属性，回归到这个属性的初始值","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/tags/css/"}]},{"title":"consoleAPI","slug":"读书笔记/【console】API","date":"2024-02-06T06:54:33.394Z","updated":"2024-02-06T07:04:12.881Z","comments":true,"path":"2024/02/06/读书笔记/【console】API/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%90console%E3%80%91API/","excerpt":"","text":"assert参数1console.assert(boolean, …args) 输出但第一个参数为false时进行输出 count参数123console.count(args)console.countReset(args) // 归零累计值 输出累计特定标签出现的次数 group使用1234567console.group(“start”)console.log(“info”)console.groupCollapsed(“child”)console.log(“data”)console.groupEnd()console.log(“data2”)console.groupEnd() 作用让输出信息更加显眼聚合，易于查看 table使用1console.table(rows,[key1,key2] 作用以表格打印对象内容，一次性显示更多信息 time使用12console.time(args)console.timeEnd(args) 作用测量时间 trace使用1console.trace() 作用打印当前的call stack monitor使用12345function fn(…args)&#123;….&#125;monitor(fn)fn(“data”, “data2”) 作用执行该函数时，输出参数。但是无法执打印箭头函数的参数 monitorEvents使用1monitorEvents(window, “click”) 作用监听并打印元素触发的事件 getEventListeners使用1getEventListeners(el) 作用打印所有注册在元素上的事件监听器 queryObjects使用1queryObjects(obj) 作用打印所有原型链中包含该原型的对象","categories":[{"name":"js","slug":"js","permalink":"https://1578536879.github.io/categories/js/"}],"tags":[{"name":"console","slug":"console","permalink":"https://1578536879.github.io/tags/console/"},{"name":"chrome","slug":"chrome","permalink":"https://1578536879.github.io/tags/chrome/"},{"name":"js","slug":"js","permalink":"https://1578536879.github.io/tags/js/"}]},{"title":"docker","slug":"读书笔记/docker","date":"2024-02-06T06:54:33.393Z","updated":"2024-02-06T07:12:09.254Z","comments":true,"path":"2024/02/06/读书笔记/docker/","permalink":"https://1578536879.github.io/2024/02/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/docker/","excerpt":"","text":"作用一种虚拟化的技术。 解决因为依赖而导致各种各样的问题 虚拟机可以对运行环境进行封装和隔离，但虚拟机消耗空闲的磁盘，内存等硬件资源，且不利于快速部署和扩展 docker具有与虚拟机同样的优点(容器内部与外部的环境是隔离的，每个容器内部配置的资源不会影响到其他容器，跨平台)，还可以节省资源，生成镜像快速部署和启停，具有强大的编排工具可以批量跨机器操作容器等。 存储直接存在容器中缺点： 数据无法持久化。当容器无法再启动时，那么里面的数据就无法再进行读取。 数据隔离，容器的数据无法与其他容器或者主机进行共享 写入速度慢，容器写入的数据会被转化为联合文件系统格式，不如直接写入主机的速度快 docker提供了三种挂载数据的方式：存储卷，绑定挂载，tmpfs挂载 绑定挂载直接让容器和主机共享目录和文件，可能在主机任何位置被进行存储，或者被任意进程进行修改。 使用场景 配置文件 开发环境中的源代码或者编译后的代码 其他一些特殊的文件或者目录结构 tmpfs挂载只存储于主机的内容，不存储于主机的文件系统中 使用场景 安全原因：不想数据持久化也不想存储于容器中，需要适应后立即删除 性能原因：大数据快速读写 存储卷(推荐通过docker创建一个卷，并以文件的形式存储于主机磁盘中，非docker进程无法修改这个文件 好处： 相比绑定挂载，数据更加容易迁移和备份 可以通过docker命令或者docker api进行管理 在Linux和window主机都可以使用 跨容器共享数据更加安全 允许存储到远程主机或者云设备，允许对数据进行加密或执行其他高级功能 新的卷能被容器内的文件预填充 使用场景 多容器共享数据。当容器需要的卷不存在时，会创建一个新的卷。卷不会随着容器的消失而消失，需要手动删除，还可以设置其只读&#x2F;只读写属性 主机无法提供给定的目录或者文件结构时，卷能解耦主机和容器的运行环境 数据需要被存储于云设备或者远程主机而不仅仅是本地时 数据需要从一台主机上的容器备份&#x2F;恢复&#x2F;迁移到另一台主机上的容器时。","categories":[{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/categories/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2024-02-06T02:40:38.676Z","updated":"2024-02-06T02:40:38.676Z","comments":true,"path":"2024/02/06/hello-world/","permalink":"https://1578536879.github.io/2024/02/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"【css】属性值定义语法","slug":"【css】属性值定义语法","date":"2023-10-14T06:00:00.000Z","updated":"2024-02-06T08:33:13.487Z","comments":true,"path":"2023/10/14/【css】属性值定义语法/","permalink":"https://1578536879.github.io/2023/10/14/%E3%80%90css%E3%80%91%E5%B1%9E%E6%80%A7%E5%80%BC%E5%AE%9A%E4%B9%89%E8%AF%AD%E6%B3%95/","excerpt":"","text":"【css】属性值定义语法css属性定义语法是专门用于限定css属性合法取值的语法，其包含3种基本组成元素： 关键字 数据类型 符号 分类关键字其分为通用关键字和全局关键字 通用关键字： auto, none, ease等是通用关键字，或者称为普通关键字，这些只能被一部分的css属性支持 全局关键字 inherit, initial, unset和revert是全局关键字，被所有css属性支持的特殊关键字 数据类型css的数据类型有很多，至少有50个，例如number、percent、rgb等，这些都是。以及还有shape-box，basic-shape，image也属于数据类型 shape-box box、margin-box、content-box、padding-box、border-box都是属于其支持的属性值 basic-shape inset()、circle()、ellipse()、polygon()、path()、clip-path和offset-path都属于 image ，，element()，image()，image-set()，cross-fade()，paint() 符号css的符号分为字面符号、组合符号以及数量符号 字面符号指css属性种原本就支持的合法符号，这些符号会在css语法中按照其原本的字面意思呈现 符号 名称 描述 , 并列分隔符 用于分隔数个并列值，或者分隔函数的参数值 &#x2F; 缩写分隔符 用于分隔一个值的多个部分，在css缩写中用于分离类型相同但属于不同css属性的值，以及用在部分css函数中 组合符号用于表示数个基本元素之间的组合关系 符号 名称 描述 并列 符号为空格字符，表示各部分必须出现，同时需要按照顺序出现 &amp;&amp; 与 各部分必须出现，但可以不按顺序出现 || 或 各部分至少出现一个，可以不按顺序出现 | 互斥 各部分恰好出现其中一个 [] 方括号 将各部分进行分组以绕过上面几个符号的优先规则，其优先级最高 数量符号用于描述一个元素可以出现次数，数量符号不能叠加，且优先级高于组合符号 符号 名称 描述 无数量符号 恰好出现一次 * 星号 可以出现任意次数 + 加号 可以出现一次或者多次 ？ 问号 可以出现零次或者一次 {A, B} 花括号 出现最少A次，最多B次 # 井号 可以出现一次或者多次，但多次出现时必须以逗号分隔 ！ 叹号 表示当前分组必须产生一个值，该符号多出现在组合符号方括号的后面","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/tags/css/"}]},{"title":"【css】不常用属性总结","slug":"【css】不常用属性总结","date":"2023-07-28T07:42:03.000Z","updated":"2024-02-06T07:14:59.447Z","comments":true,"path":"2023/07/28/【css】不常用属性总结/","permalink":"https://1578536879.github.io/2023/07/28/%E3%80%90css%E3%80%91%E4%B8%8D%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%E6%80%BB%E7%BB%93/","excerpt":"","text":"【css】、不常用样式总结关于文字换行 word-break 换行规则 white-space 保留换行和空格 word-wrap(老) &#x2F; overflow-wrap(新) line-break hyphens 用于英文字符 有机会就断开换行 直接换行 背景 background-size background-image 可以设置多背景 background-clip 控制背景显示区域，还可以设置文字的渐变色 background-origin 背景定位原点 background-repeat 背景图片重复设置 background-position 叠加属性即父组件和子组件 同时设置一个属性，其表现并非是子组件覆盖父组件或者父组件覆盖子组件，而是将其两个属性值进行叠加计算 opacity 用乘法计算出的结果 text-decoration 会两个都进行显示","categories":[{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"}],"tags":[]},{"title":"DRIs","slug":"营养学/DRIs","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-25T07:54:52.883Z","comments":true,"path":"2019/03/18/营养学/DRIs/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/DRIs/","excerpt":"","text":"DRIsEAR 平均需要量满足群体50%的摄入量 RNI 推荐摄入量满足某一特定性别、年龄及生理状况群体绝大多数（97%~98%）个体需要的水平 安全摄入量，以EAR为基础 AI 适宜摄入量AI和RNI都可以作为个体摄入量的参考，能够满足目标人群几乎所有个体的需要 某种营养素的个体需要量研究资料不足，无法计算EAR，不能求得RAI，可以用AI假设替代RNI UL 可耐受最高摄入量平均每天摄入的最高含量 安全摄入范围：RNI~UL AMRD 宏量营养素可接受范围三大营养素理想的摄入范围（提供必须营养素的需要），有利于降低慢性病的风险 PI-NCD 降低膳食非传染疾病风险的建议摄入量以膳食相关非传染性疾病一级预防为目标，提出的必须营养素每日摄入量（水平 SPL 特定建议值专用于营养素之外的其他食物成分 降低成年人膳食相关非传染性疾病风险为目标，提出的其他膳食成分的每日摄入量（水平 评价个体摄入量 EAR 摄入量： 必须提高 ≤ EAR ≤ 充足 EAR~RNI：很难确定是否适宜 UL 摄入量 &gt; UL：可能造成危害 为个体计划膳食营养素摄入目标：达到RAI&#x2F;AI，＜UL 能量的RNI&#x3D;EAR，EAR可作为参考值 以膳食指南作为制定膳食计划的依据 评价群体摄入量 AI 平均摄入量： 摄入不足概率低 ≤ AI &lt; 不能判断群体摄入不足的程度 UL 安全摄入量的切点 EAR： 不适宜用于评估群体摄入水平 EAR切点法是简单而实用的方法 RNI： 不宜用于评估人群摄入不足比例 不宜用食物频数文件资料评价人群摄入量 切点法和概率法不适合用于评价能量不足的概率 为群体计划膳食为均匀性群体计划膳食 为不均匀群体计划膳食：营养素密度法","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"DRIs","slug":"DRIs","permalink":"https://1578536879.github.io/tags/DRIs/"}]},{"title":"人体结构","slug":"营养学/【医学基础】人体结构","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-25T03:16:57.210Z","comments":true,"path":"2019/03/18/营养学/【医学基础】人体结构/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E4%BA%BA%E4%BD%93%E7%BB%93%E6%9E%84/","excerpt":"","text":"细胞组成细胞膜 组成 液态脂质双分子层，蛋白质 作用 维持细胞形态 细胞内外物质和信息交换 细胞质 分类 细胞基质 细胞器 内质网核糖体高尔基复合体线粒体溶酶体 细胞核 携带遗传物质 组织上皮组织维生素A 构成 上皮细胞，细胞间质 功能 保护、分泌、吸收和排泄等功能 结缔组织 构成 疏松结缔组织，致密结缔组织，脂肪组织，网状结缔组织，软骨，骨骼，血液 肌组织 骨骼肌 横膈肌，受躯体神经支配，属于随意肌 心肌 横纹肌，受植物神经支配，属与 不随意肌 平滑肌 无横肌，受植物神经支配，属于 不随意肌 神经组织神经元分类： 传入（感觉）神经元 传出（运动）神经元 中间神经元 神经胶质细胞作用： 对神经元起支持、联系、营养、保护等作用","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"医学基础","slug":"医学基础","permalink":"https://1578536879.github.io/tags/%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"器官","slug":"营养学/【医学基础】器官","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-25T06:35:58.012Z","comments":true,"path":"2019/03/18/营养学/【医学基础】器官/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E5%99%A8%E5%AE%98/","excerpt":"","text":"感觉器官眼 眼球 纤维膜（外层 血管膜（中层 视网膜（内层 视锥细胞：感受强光，分辨颜色细节，位于中央 视杆细胞：感光物质，分辨形状，视紫红质（视蛋白，视黄醇-维A），位于视网膜边缘和附件 辅助装置 眼睑、结膜、组器、眼外肌 耳 分类 外耳、中耳、内耳 作用 听觉和位觉（平衡觉）的外周感觉器官 胃理化性质胃酸是无色透明酸性液体，PH在0.9~1.5 微细结构 黏膜上皮 单层柱状上皮，能分泌粘液，保护胃黏膜 固有层 胃底腺 主细胞 分泌胃蛋白酶原，无活性，在胃酸的作用下转为有活性的胃蛋白酶 水解蛋白质 壁细胞 分泌盐酸 激活胃蛋白酶原，提供胃蛋白酶发挥作用的酸性环境 抑制和杀死外来随食物进入胃内细菌 盐酸进入小肠后能促进胰液、胆汁、小肠液的分泌 有助于小肠对Fe和Ca的吸收 分泌内因子 保护维生素B12不受小肠内水解酶的破坏 颈黏液细胞 分泌黏液 贲门腺（进口 幽门腺（出口 吸收功能很弱，仅吸收少量水分和酒精 小肠微细结构褶皱和绒毛：增加吸收和消化面积 胰液分泌 有机物 胰蛋白酶 将淀粉水解为麦芽糖和葡萄糖 胰脂肪酶 将脂肪分解为甘油三酯和脂肪酸，甘油和甘油一酯 胰蛋白酶原和糜蛋白酶原 无活性，进入十二指肠后被激活，分解蛋白质 无机物 碳酸氢盐：中和胃酸，提供适宜的ph环境 胆汁分泌 组成 水分、胆色素、胆固醇、卵磷脂、无机盐，脂肪酸等 无消化酶 功能 胆盐和脂肪酸、甘油一酯等结合，形成水溶性复合物，促进脂肪消化产物的吸收 乳化脂肪：增加胰脂肪酶的作用面积，有利于脂肪消化 促进吸收脂溶性维生素 小肠液分泌 组成 水、电解质、黏液、免疫球蛋白、小肠淀粉酶、肠激酶 作用 消化食物 保护胃黏膜不受机械性损伤或胃酸侵蚀 吸收功能 被动转运 被动扩散、易扩散化，过滤作用，渗透等 主动转动 大肠主动吸收水、盐 大肠液 富含黏液 保护肠粘膜和润滑粪便 大肠细菌 分解产物： 单糖、乳糖、二氧化碳、沼气、氢气 蛋白质：肽、氨基酸、N、吲哚、酚 维生素 硫胺素，维生素K，也算，核黄素","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"医学基础","slug":"医学基础","permalink":"https://1578536879.github.io/tags/%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"人体结构","slug":"营养学/【医学基础】系统","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-29T02:54:10.475Z","comments":true,"path":"2019/03/18/营养学/【医学基础】系统/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E7%B3%BB%E7%BB%9F/","excerpt":"","text":"运动系统骨分类 部位 颅骨、躯干骨、四肢骨等 形状 扁骨、长骨（骺软骨，骺线）、短骨、不规则骨等 构成 骨质 有机质 有弹性 骨胶原纤维、黏多糖，占1&#x2F;3 无机质 弹性小，脆，干 包括钙盐、成人2&#x2F;3 骨膜、骨髓、神经和血管 骨连接骨与骨之间借纤维结缔组织，软骨或骨组织相连 直接连接、间接（关节）连接 肌肉肌红蛋白：Fe组成 形态分类 长肌 四肢多为长肌，收缩时引起的活动幅度大 短肌 分布在躯干深处，收缩时引起的活动幅度较小 阔肌 扁而薄，多分布与胸壁、腹壁 轮匝肌 多分布于眼裂、口裂周围，收缩时可关闭孔裂 部位分类头、颈、躯干、四肢 呼吸系统功能完成气体交换。吸入氧气，呼出二氧化碳 部位 呼吸道 作用：气体进出肺的通道 包括 上呼吸道：鼻咽喉 下呼吸道：气管、支气管及其在肺中的分支 肺 气体交换的场所 胸腔处，左右各一 循环系统心血管系统心脏泵血 位于胸腔内，膈肌上方，两肺之间，2&#x2F;3位于前正中线之间，1&#x2F;3位于右侧 血管蛋白质，维生素C（缺乏会导致血管壁薄 分类 静脉 动脉 把血液从心脏运输到毛细血管的通道 毛细血管 最多，分布最广，直径小 较高通透性，可完成血液与组织间的气体和物质交换 血液 血细胞（45%） 红细胞：血红蛋白（Fe）运输氧和二氧化碳 白细胞 血小板 参与凝血功能 血浆（55%） 水 无机盐 阳离子：Na^+，K，Ca^2+，Mg^2+ 阴离子：cl^-，HPO4^2-，SO4^2- Nacl: 维持晶体渗透压和血容量 有机成分 糖：葡萄糖。。。 脂类：血脂。。。 蛋白质： 血浆蛋白形成胶体渗透压， 球蛋白合成多种抗体，与抗原结合，从而杀灭微生物 纤维蛋白和凝血酶是促进血液凝固的成分 淋巴系统 组成 淋巴管、毛细血管和淋巴器官组成 功能 产生淋巴细胞，过滤淋巴结，产生抗体 免疫系统免疫器官中枢免疫器官 胸腺 T细胞分化成熟的场所，分泌多种胸腺细胞 骨髓 体内造血器官，B淋巴细胞成熟的场所，各种免疫细胞的发源地 周围（外围）免疫器官 组成 脾脏、增强吞噬细胞的功能 分布全身脏器，皮肤，粘膜的淋巴结和弥散性淋巴细胞 功能 T、B细胞定居场所 免疫过滤作用 免疫细胞参与免疫的细胞 组成 造血干细胞、淋巴细胞、单核吞噬细胞 抗原提呈细胞，中性粒细胞，肥大细胞等 淋巴细胞起作用 T细胞 细胞免疫和免疫调节 B细胞 体液免疫条件 浆细胞 分泌5类免疫球蛋白 Nk细胞，k细胞 免疫分子 组成 免疫球蛋白，补体，细胞因子等 功能 抗感染，炎症反应，调节各种免疫细胞的功能，消除外源性病原体等 免疫应答反应 非特异性免疫 特异性免疫 T淋巴细胞和B淋巴细胞介导的体液免疫应答反应 两者共同参与免疫应答 泌尿系统 肾 形似蚕豆，红褐色，腹后壁，脊柱两旁，左右各一 输尿管 细长肌性管道，上端与肾盂连接，开口于膀胱 膀胱 储存尿液，膀胱三角为肿瘤和结核的好发部位 尿道 男性细长，全长有三处狭窄和两处弯曲 女性短粗 生殖系统 男 内生殖器：睾丸、附睾、输精管、射精管、尿道和三队附属腺 外生殖器：阴茎和阴囊 女 内生殖器： 卵巢（产生卵子，分泌雌激素 输卵管（输送卵子进入子宫的弯曲管道 子宫（孕育胎儿和产生月经 阴道 外生殖器： 阴户、大小阴唇、阴蒂、阴道前庭 神经系统中枢神经系统 脑 脑干，延髓，脑桥，中脑 间脑： 丘脑 下丘脑：与垂体相连，与内脏活动，内分泌功能相关 小脑： 调节躯干平衡，调节肌张力和协调随意运动功能 端脑 大脑具有思维、思考、学习能力 DHA，EPA 脊髓 具有反射和传导功能 周围神经系统 躯体神经 支配体表结构，骨，关节和骨骼肌 内脏神经 支配内脏，心肌，平滑肌和腺体 内分泌系统 激素 原料主要为蛋白质 垂体 生长激素，催乳素，褪黑素，促甲状腺激素，促肾上腺激素，促性腺激素 胰岛 胰岛素 唯一降血糖的，β细胞 胰高血糖素 α细胞 甲状腺 以I和酪氨酸为原料合成甲状腺素，促进生长发育，促进糖脂代谢 肾上腺 盐皮质激素（调节K代谢），糖皮质激素（调节宏量营养素代谢），少量性激素（合成胆固醇），嗜铬细胞（分泌肾上腺激素和去甲肾上腺素） 甲状旁腺 甲状旁腺素（钙磷代谢），降钙素（破骨细胞，降血钙） 性腺、胸腺、松果体 消化系统消化管 组成 上消化道： 口腔、咽、食管、胃、小肠的十二指肠 下消化道 小肠的空肠、回肠，大肠（盲肠、结肠、直肠 微细结构 消化道一般构造 黏膜（上皮，固有层，黏膜肌层） 黏膜下层 肌层 外膜 胃壁的微细结构特点 小肠壁的微细结构特点 消化腺 组成 唾液腺、胃腺、胰、肝（最大腺体，分泌胆汁）和肠腺","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"医学基础","slug":"医学基础","permalink":"https://1578536879.github.io/tags/%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"数据","slug":"营养学/数据","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-04T04:02:07.986Z","comments":true,"path":"2019/03/18/营养学/数据/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E6%95%B0%E6%8D%AE/","excerpt":"","text":"能量来源蛋白质、碳水4kcal(16.8KJ)，脂肪9kcal(37.56KJ) 碳水：50%~65%E 脂肪：20%30%E（04岁脂肪摄入随年龄增加而增加 蛋白质： 4-5岁：8%~20% 6-64：10%-20% 65+：15%~20% 热量基础代谢：60%&#x2F;45%-70% 18~30岁，轻体力，2150（男），1700（女） 30~40，轻体力，2050（男），1700（女 孕早+250，孕晚+400 蛋白质稳定性同位素示踪技术 18-64岁 RNI：0.98g&#x2F;(kg.d) 男：65g&#x2F;d，女：55g&#x2F;d 65+ RNI：1.17g&#x2F;(kg.d) 男：72g&#x2F;d，女：62g&#x2F;d 孕中+15，孕晚+30，乳母+25 脂肪 AMDR：≥4岁，20%E-30%E SFA（多不饱和脂肪酸） 4-17: &lt; 8%E 18+ &lt;10%E PUFA（饱和脂肪酸 n-3：2.5%E-9%E（18+ n-6:0.5%-20%E（18+ EPA、DHA的AI： 100mg/d ≥2岁 乳母孕妇：200mg/d 碳水GI 测定：50g葡萄糖 范围 低：≤55 中：55-70 高：≥70 参考摄入量 总碳水化合物 AMDR： ＞1岁，50%-60% EAR 1-10岁：120g&#x2F;d 11-17: 150g&#x2F;d 18+: 120g&#x2F;d 孕妇：130g&#x2F;d 乳母：160g&#x2F;d 添加糖 AMDR： ≤10%或者≤50g 最好：＜5%或25g 矿物质 元素 推荐量 特殊人群 Ca RNI 800mg&#x2F;d 孕妇乳母：800mg&#x2F;d P RNI 720mg&#x2F;d - Mg RNI 330mg&#x2F;d - Na 18-49AI 1500mg&#x2F;d PI-NCD &lt;2000mg&#x2F;d - K 18+AI 2000mg&#x2F;d PI-NCD 3600mg&#x2F;d - Fe 18-49RNI 12mg&#x2F;d(男)，18mg&#x2F;d(女)59-64RNI 12mg&#x2F;d(男)，18mg&#x2F;d(女有月经)，10mg&#x2F;d(女无月经)65+RAI 12mg&#x2F;d(男)，10mg&#x2F;d(女) 孕中期：+7mg孕晚期：+11mg乳母：+6mg Zn 7-11RNI 7mg&#x2F;d12-14RNI 8.5mg&#x2F;d(男)，7.5mg&#x2F;d(女)15-17 11.5mg&#x2F;d(男) 8.5mg&#x2F;d(女) 18+ 12mg&#x2F;d(男) 8.5mg&#x2F;d(女) 孕妇+2mg，乳母+4.5mg I 120ug&#x2F;d 孕妇：+110ug乳母：+120ug 硒 06ug&#x2F;d - 维生素 元素 推荐量 特殊人群 维A 770ugRAE&#x2F;d（男）660ugRAE&#x2F;d（女） 孕中晚+70，乳母+600 维D 10ug&#x2F;d - 维E 14mgα-TE&#x2F;d - 维C 80ug&#x2F;d - 维C 100mg&#x2F;d - 维B1 男1.4mg&#x2F;d，女1.2mg&#x2F;d - 维B2 男1.4mg&#x2F;d，女1.2mg&#x2F;d - 维B6 1.4mg&#x2F;d - 烟酸 15mgNE&#x2F;d（男），12mgmgNE&#x2F;d - 叶酸 400ugEDF&#x2F;d 孕妇+200，乳母+150 维B12 2.4ug&#x2F;d - 食物 优质蛋白占50%+ 大豆（良好、谷类(主要) 肉：鱼蛋肉（重要），奶（婴幼儿除母乳外的最佳来源 婴儿营养素 营养 0-6月数据 7-12月数据 13-24月 能量 90kcal&#x2F;(kg.d) 75kcal&#x2F;(kg.d) - 蛋白质（AI） 9g&#x2F;d 17g&#x2F;d 脂肪（AI） 48%E，亚油酸8%E（ARA150mg），α-亚麻酸0.9%E（DHA为100mg 40%E，亚油酸6%E，α-亚麻酸0.67%E（DHA为100mg 35%E 碳水（AI） 60g&#x2F;d 80g&#x2F;d 婴幼儿处于快速生长期，能量需要相对于成人较高，油脂摄入高 婴幼儿需要EPA、DHA，建议选择富含亚油酸，α-亚麻酸(尤其是)的油脂 辅食 月龄 奶量 动物性 谷物 蔬果 油 其他 7-9月 &gt;600ml&#x2F;d 至少1个蛋黄，25g肉禽鱼 20g+ 25-100g &lt;10g，首选n3系列 患病期间暂停引入新食物，已经适应的新食物可以继续吃 10-12月 600ml&#x2F;d 1个鸡蛋（至少一个蛋黄），25-70g肉禽鱼 25-75g 各25-100g &lt;10g 循序渐进，增加不同食物口味；鼓励自主进食，手抓食物 13-24月 500ml&#x2F;d 1个鸡蛋，50-75g肉禽鱼 50-100g 个50-100g 5-15g - 身体活动 7-12月，每天俯卧位自由活动或者爬行时间不少于30min，多则更好 12-24月，每天活动不少于3h，多则更好 束缚时间、抱背的时间一次不多于1h 心率 65-79岁 170-年龄为运动目标心率 体格BMI 普通人 65-79 20-26.9 皮褶厚度 男：瘦-10mm-中等-40mm-肥胖 女：瘦-20mm-中等-50mm-肥胖 老年人食物摄入 年龄 动物 奶类 大豆 65-79 120-15-g&#x2F;d,鱼、畜禽肉、蛋各40-50g 300-400ml&#x2F;d 平均15g&#x2F;d大豆水平 体重减重 有氧运动：60-90min&#x2F;d的中等，每周5-7d 抗阻运动：隔天进行，10-20min 减少300-500kcal&#x2F;d，不能低于1299kcal&#x2F;d 储藏冷藏 冷却：0-4°是食物冷藏最低温度 冷冻：0°以下，急冻缓化 冷藏 4-8°，冷冻-23~-12度 加热 ＞60°为热处理，常用温度是100° 100-121°是高温杀菌 盐渍和干燥：食盐浓度10%+酸渍和酸发酵：醋酸浓度1.7%+母乳喂养 月龄 饮用量 次数 7-9月 &gt;600ml&#x2F;d &gt;4次&#x2F;d 10-12月 600ml&#x2F;d 4次&#x2F;d 13-24月 500ml&#x2F;d &lt;4次&#x2F;d 温度食物存放 植物性 10°，冷藏或者速冻，保鲜剂；辐照 牛乳全脂 脂肪：≥3.1% 蛋白质：≥2.9% 非脂乳固体：≥8.1% 酸度：12-18","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"}]},{"title":"计算公式","slug":"营养学/计算公式","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-07T08:10:42.096Z","comments":true,"path":"2019/03/18/营养学/计算公式/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/","excerpt":"","text":"蛋白质 样品中的蛋白质含量&#x3D;每百克样品中N含量6.25100% 消化率 表观消化率 &#x3D; （摄入氮-粪氮）&#x2F;摄入氮 * 100% 真消化率 &#x3D; (摄入氮-粪氮+粪代谢氮) &#x2F; 摄入氮 * 100% 利用率 蛋白质功效比PER&#x3D;实验体体重增加量&#x2F;试验期间蛋白质摄入量(g)生物加BV&#x3D;储留氮&#x2F;吸收氮100%&#x3D;(吸收氮-尿氮+尿代谢氮) &#x2F; 吸收氮 * 100%净利用率&#x3D;BV消化率&#x3D;储留氮&#x2F;食物氮100%AAS(氨基酸评分)&#x3D;被测食物氮或者蛋白质氨基酸含量&#x2F;参考食物氮或者蛋白质氨基酸含量(mg) * 100混合膳食的ASS&#x3D;混合膳食中每种氨基酸总量（mg&#x2F;g）&#x2F; 每克参考蛋白质中必须氨基酸含量（mg）PDCASS(经消化率修正后的氨基酸评分)&#x3D;AAS真消化率 能量 总能量消耗 TEE（kcal&#x2F;d）&#x3D; 基础代谢能量消耗BEE（kcal&#x2F;d） * 身体活动水平 PAL（1.4轻度1.7中度2高度） 能量的DRIs以EAR为基础，过高或过低可能都会带来危险 RNI能量&#x3D;EAR，无UL 体格 0-6岁婴儿Z标准 《5岁以下儿童生长状况判定》（WS&#x2F;T 423-2013） 引用WHO 2006年《儿童生长标准》数据，推荐使用Z评分 Z评分&#x3D;（实测值-参考人群中位值）&#x2F;参考人群标准差 年龄别身长&#x3D;（儿童实测身长-同年龄同性别参考儿童身长中位数）&#x2F;参考儿童身长标准差 年龄别体重 &#x3D; （儿童实测体重-痛年龄同性别参考儿童体重中位数）&#x2F;参考儿童体重标准差 身长别体重&#x3D;（儿童实测体重-同身长同性别参考儿童体重中位数）&#x2F;参考儿童体重标准差 年龄别BMI&#x3D;（儿童BMI-同年龄同性别儿童参考BMI中位数）&#x2F;参考儿童BMI标准差 年龄别头围&#x3D;（儿童头围-同年龄同性别儿童头围中位数）&#x2F;参考儿童头围标注按察 6-12 乳牙数&#x3D;月龄-6 学龄前 体重&#x3D;年龄*2+7&#x2F;8 身高&#x3D;年龄*7+70 膳食调查 食物实际消费量 家庭食物实际消费量&#x3D;购入量+实验开始的结存量-废弃量-剩余量 每人每日各种食物摄入量 家庭平均每人每日每种食物摄入量&#x3D;实际消费类&#x2F;家庭总人日数 每人每日各种营养素摄入量 食物中某营养素含量&#x3D;（（食物克数&#x2F;100）* 可食比例）* 每百克食物中营养素含量 家庭某种营养素总摄入量&#x3D;家庭所有摄入食物中某种营养素总和 平均每人每日某营养素摄入量&#x3D;家庭某种营养素摄入总量&#x2F;家庭人日数 平均每人每日某营养素摄入量&#x3D;个人某种营养素摄入量&#x2F;个人人日数 标准人每人每日某营养素摄入量&#x3D;平均每人每日某营养素摄入量&#x2F;标准人系数 标准人概念及计算方法 标准人 18-29岁65kg成年男子从事轻体力劳动，能量为2150kcal&#x2F;d 标准人系数（折合系数 其他各类人员的能量推荐值&#x2F;2150 标准人日数&#x3D;标准人系数*人日数 混合系数&#x3D;全家总标准人日数&#x2F;全家总人日数 家庭混合系数&#x3D;（人员1标准人系数*人日数+人员2标准人系数 *人日数…）&#x2F;全家总人日数 标准人平均每日某营养素摄入量&#x3D;平均人每日某营养素摄入量&#x2F;混合系数 标准人每日每种食物摄入量&#x3D;平均每人每日各种食物摄入量&#x2F;混合系数 AR（表观保留率）&#x3D;食物烹调后某种营养素含量（干重）&#x2F; 食物原料中该种营养素含量（干重）* 100% TR（真实保留率）&#x3D; （食物烹调后某营养素含量*食物烹调后的重量）&#x2F; （食物原料某营养素含量 * 食物烹调前重量）* 100% 营养素计算 能量&#x3D;4 * 蛋白质+9 * 脂肪 + 4 * 碳水 + 3 * 有机酸 + 9 * 酒精 + 2 * 膳食纤维 蛋白质 总氮量*氮折算系数 食品中各氨基酸含量的总和 脂肪 粗脂肪：甘油三酯、磷脂、固醇和色素 总脂肪：各个脂肪酸甘油酸酯总和 碳水 减法：100-蛋白质-脂肪-灰分-水分 加法：淀粉+糖，仅用于普通食物 能量密度&#x3D;一定量食物提供的能量值&#x2F;能量推荐摄入量 营养素密度&#x3D;一定量食物提供的营养素&#x2F;相应营养素推荐摄入量 食物营养质量指数INQ&#x3D;营养素密度&#x2F;能量密度","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"计算公式","slug":"计算公式","permalink":"https://1578536879.github.io/tags/%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/"}]},{"title":"老年人","slug":"营养学/【人群营养】老年人","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-06T09:09:14.666Z","comments":true,"path":"2019/03/18/营养学/【人群营养】老年人/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB%E3%80%91%E8%80%81%E5%B9%B4%E4%BA%BA/","excerpt":"","text":"特点 合成代谢降低，分解代谢升高，基础代谢下降 消化能力下降： 牙齿脱落影响咀嚼 嗅觉味觉迟钝影响食欲 肠道消化酶减少 肠蠕动变慢 体成分改变 细胞数量减少，肌肉萎缩，器官体积减少，功能减退 水分减少：影响体温调节，降低对环境温度改变的适应能力 骨组织矿物质和骨基质减少，易出现骨质疏松和骨折 器官功能 肝脏功能下降，胆汁和消化酶分泌减少，影响消化和物质代谢 胰腺分泌功能降低，糖调节能力降低 免疫组织和免疫功能降低，免疫细胞数量减少 心率减慢，心脏博出量减少，血管硬化，高血压患病率升高 呼吸：肺容量减少，呼吸功能明显减弱，代偿能力降低 神经：脑细胞减少，神经传导速度减慢，动作迟缓，反应灵敏度降低 感觉器官：视、嗅、味、皮肤感觉能力下降 心理 生活环境，经济拮据、环境改变使得食欲减退，干扰摄食心态 绝经 围绝经期 卵巢萎缩，功能减退 内分泌紊乱，血管运动障碍导致潮热、出汗 神经精神障碍，情绪不稳 绝经后 雌激素减少，骨代谢发生明显变化 血脂异常，糖代谢异常，冠心病发生率升高 生理特点 自发的必然过程，结构的退行性变和机能的衰退，适应和抵抗力降低 特性：普遍、内因、进行、个体性差异、可干预性和有害性 分类 生理性衰老 病理性衰老 日常生活能力（ADL 评估个体或老年人自我生活的能力 评定量表 躯体生活自理量表（PSMS）：吃饭、穿衣、梳洗、WC、洗涤、室内走动 工具性日常自理量表（IADL）：乘车、购物、家务、洗衣、做反、电话、理财、吃药 废用综合征（DS）：机体长期表失活动能力或持续不活动而产生的继发性障碍 原因： 各种原因造成的长期卧床，基本不活动或运动不足 外伤或原发病而导致运动障碍 严重感觉运动障碍引起刺激降低而导致活动降低 各种骨关节疾病使肢体活动范围降低 主要功能障碍： 循环、呼吸、中枢神经、消化、运动等系统功能 膳食指南65-79岁 食物品种丰富，动物性食物充足，常吃大豆制品 品种多样化；餐餐有蔬菜，多选深色蔬菜，颜色丰富；水果多品种 动物性食物换着吃，和蔬菜搭配；尽量选择瘦肉，少吃肥肉 吃不同种类的奶类和豆类食物 动物性食物富含优质蛋白，有利于减少老年人贫血、延缓肌肉衰减发生 鼓励共同进餐，保持良好食欲，享受食物 积极户外活动，延缓肌肉衰减，保持适宜体重 定期健康体检，测评营养状况，预防营养缺乏 预防营养缺乏 鼓励积极参与集体活动，排除厌恶，保持乐观心态 适度增加身体活动量，增强身体对营养的需求，提升进食欲望 采用不同烹调方式，丰富色泽、风味、增加吸引力 每年1-2次体检，BMI20-26.9 高龄老人 食物多样，鼓励多种方式进食 选择质地细软，能量和营养素密度高的食物 多吃鱼禽肉蛋和豆，适量蔬菜配水果 关注体重丢失，定期营养筛查评估，预防营养不良 适时合理补充营养，提高生活质量 坚持健身与益智活动，促进身心健康 肌肉衰减不良导致骨质疏松的风险增加，是老年人独立危险因素 饮食营养 蛋白质 一般情况1-1.2g&#x2F;kg.d，优质蛋白50% 日常抗阻训练：≥1.2-1.5g&#x2F;kg.d 乳清蛋白：促进肌肉合成，预防肌肉衰减 牛奶及其制品：300-400ml鲜奶或相当量蛋白质的奶制品（奶粉30-36g 乳糖不耐优先食用低乳糖奶或者酸奶 不宜集中一餐吃蛋白质 脂肪酸、维生素C、D、E、类胡萝卜素、硒等抗氧化营养素 膳食营养补充剂：合理补充维生素D、含多种微量营养素的补充剂 65-79岁身体活动 根据生理条件、健康状况、兴趣爱好和运动设施条件选择锻炼方式，安排运动负荷 户外运动：有利于维生素D合成，延缓骨质疏松和肌肉衰减发展 增强心肺功能，活动灵敏，身体柔韧，减缓骨矿物质流程，肌肉衰减，有效预防骨质疏松和骨折 运动负荷判断 心率：170-年龄作为运动目标心率 减少久坐静态时间 营养状况 鼓励老年人关注饮食，经常自测营养状况 定期测量体温 平衡膳食 多种慢性病、身体功能明显变差的老年人，应接受专业的营养指导支持等 高龄体重过轻或近期体重下降 营养筛查2002（NRS2002）、微型营养评定简表（MNA-SF） 综合分析进食情况、消化吸收能力、体格检查、人体测量、体成分分析、生化指标、临床表现等营养相关问题得出疾病相关的营养检查 根据身体情况、能量摄入和身体活动水平，逐渐增加能量摄入 合理使用营养品 关注老年人身体健康，鼓励摄入营养密度高的食物 特医食品 进食量不足目标80%时，可以在医生和临床营养师指导下，合理使用特医食品 标准蛋白配方：适合大部分老年人 氨基酸和短肽类：肠胃功能不全（如重症胰腺炎等 不含乳糖：乳糖不耐受易出现腹泻 添加膳食纤维：改进老年人肠道功能，减少腹泻和便秘发生 高能量密度配方：有利于实现老年人营养充足性 口服营养补充（ONS） 400-600kcal&#x2F;d，含蛋白质15~30g，分2-3次食用，至少连续使用4周以上 两餐之间服用，可以达到补充营养的目的，又能不影响正餐的食用 不能摄入普通食物的老年人：啜饮：50-100ml&#x2F;h 强化食品 强化Ca、Fe、Zn、维A、C、D等营养素食品 营养补充剂 预防相应营养素缺乏，已经出现营养素缺乏临床表现的老年人（最快速有效方式 在医生或者营养师指导下选用，补充剂量依据DRIs 吞咽障碍并发症误吸、肺炎、脱水、营养不良以及由此导致的心理与社会交往障碍，增加患者病死率和不良预后 筛查饮水实验，安全快捷 易食食品 调整食物质构 液体食物黏度适当 固态食物不易松散 密度均匀，颗粒顺滑 减少进食引起呛咳误吸风险 遵循原则 硬的变软，将较硬的食物搅拌粉碎，可便于其咀嚼吞咽 稀得变稠，在液体如水、饮料、果汁、牛奶中加入增稠剂，增加食物粘腻度 避免异相夹杂，避免固体和液体混合一起，以及固液容易分离的食物 食物均质顺滑 吞咽实验 评级 表现 1级（优） 顺利1次吞咽，无呛咳 2级（良） 分2次以上，无呛咳 3级（中 一次吞咽，有呛咳 4级（可 2次以上，有呛咳 5级（差 频繁呛咳，不能全部咽下","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人群营养","slug":"人群营养","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB/"}]},{"title":"矿物质","slug":"营养学/【营养学基础】矿物质","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-31T03:08:52.739Z","comments":true,"path":"2019/03/18/营养学/【营养学基础】矿物质/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E7%9F%BF%E7%89%A9%E8%B4%A8/","excerpt":"","text":"分类 常量营养素 体内含量＞0.01%体重，每日需要量100mg以上（7种 Ca、Mg、Na、K、S、O、P 微量 体内含量＜0.01%体重 必需 Fe、I、Se（硒、Zn、Cu、铬、钼、钴 可能必需 Mn、硅、镍、硼、钒 具有潜在毒性微量，但在低剂量时对人体可能具有功能的微量元素 F、Pb（铅、镉、汞、砷、铝、锂、锡 功能 构成细胞膜的主要成分 细胞内外液成分 维持体内酸碱平衡 参与构成功能性物质 维持神经肌肉的正常兴奋性和细胞膜的通透性","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"蛋白质","slug":"营养学/【营养学基础】蛋白质","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-07T09:03:23.956Z","comments":true,"path":"2019/03/18/营养学/【营养学基础】蛋白质/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E8%9B%8B%E7%99%BD%E8%B4%A8/","excerpt":"","text":"元素组成及氮折算系数 组成 C、N、O、S、H等 蛋白质是人体唯一的C来源 氮折算系数 氮含量是16%，折算系数是6.25 样品中的蛋白质含量&#x3D;每百克样品中N含量6.25*100% 分类 名字 特点 种类 完全蛋白质 必须氨基酸种类齐全，数量充足，比例适当，能维持人体健康并能促进儿童生长发育 乳类：酪蛋白，乳白蛋白 蛋类：卵白蛋白，卵磷蛋白 肉类：白蛋白，肌蛋白 大豆：大豆蛋白 半完全蛋白质 必须氨基酸种类齐全，但数量不足或比例不当，可维持生命，不能促进生长发育 小麦：麦胶蛋白 不完全蛋白质 必须氨基酸种类不齐全，不能维持生命，不能促进生长发育 玉米：玉米胶蛋白 豌豆：豆球蛋白 动物结缔组织和肉皮：胶原蛋白 消化吸收 消化 从胃开始，但主要是小肠 所需酶： - 胃：胃蛋白酶 - 小肠： 内肽酶：胰蛋白、糜蛋白、弹性蛋白酶 外肽酶：氨基肽、羧基酶 吸收 在小肠黏膜吸收 吸收形式：氨基酸和2-3个氨基酸的小肽 分解与合成 在体内不断分解与合成，形成动态平衡 氮平衡： 氮排除量与吸收量的关系 氮平衡 正氮平衡 儿童、孕妇、疾病恢复、运动、劳动增加肌肉 负氮平衡 饥饿、疾病、老年 零氮平衡 健康成人、富裕5% 氨基酸分类 化学结构 脂肪族，芳香族，杂环氨基酸 氨基酸必须性 必须氨基酸：假设来借一本书 蛋氨酸（甲硫氨酸），色氨酸、赖氨酸、颉氨酸、异亮氨酸、亮氨酸、苯丙氨酸，苏氨酸 条件必须氨基酸 烙饼加个蛋 酪氨酸&lt;-苯丙氨酸 蛋氨酸&lt;-半胱氨酸 非必须氨基酸（10个） 体内可以直接合成，食物缺少无妨 氨基酸模式以及限制氨基酸 氨基酸模式： 某种蛋白质中各种必须氨基酸构成比例，以色氨酸为标准 优质蛋白 与人体比例接近 限制氨基酸 与参考蛋白质（人体）相比，缺乏最多的那种氨基酸 谷赖，豆蛋 参考蛋白 鸡蛋蛋白 植物蛋白质： 赖，蛋，苏，色氨酸含量低 蛋白质生理功能 构成机体组织（最重要的功能 提供能量（次要 调节生理功能 核蛋白：构成细胞核并影响细胞功能 酶蛋白：促进食物消化吸收利用 免疫蛋白：维持机体免疫功能 血红蛋白：携带运输氧气 脂蛋白，运铁蛋白，视黄醇结合蛋白：运输功能 白蛋白：调节渗透压，维持体液平衡 收缩蛋白：肌球蛋白调节肌肉收缩 构成激素：垂体、甲状腺、甲状旁腺、肾上腺素等 蛋白质-能量营养不良 原因 摄入⬇，需要⬆，消耗⬆ 类型 消瘦型 缺乏能量，主要表现为皮下脂肪和骨骼肌显著消耗及内在器官萎缩 “皮包骨”，神经发育落后，对外界反应淡漠或易激惹，记忆力下降，有饥饿感 浮肿型 缺乏蛋白质，能量满足需求，以水肿为主要特征 生长迟缓，虚弱无力，易感染 混合型 蛋白质和能量均有缺乏，常伴有维生素和其他营养素缺乏 皮下脂肪小事，肌肉萎缩，急躁不安或者表情淡漠，易感染 评价 膳食蛋白质摄入量 身体测量 生化检查 蛋白质营养评价 消化率 蛋白质在消化道被分解和吸收程度指标 利用率 食物消化吸收后被机体利用的程度 氨基酸评分 适用于单一食物蛋白质和混合食物蛋白质的评价 蛋白质互补作用 生物种属越远 搭配种类越多 食用时间越近，同时食用最好 食物蛋白质质量评价质量评价指标 食物蛋白质含量 氨基酸模式 食物氨基酸直接比较法 食物中必需氨基酸含量及比值与人体氨基酸模式直接比较 与人体越接近越好，利用率越高 蛋白质消化率 蛋白质表观消化率&#x3D;(摄入氮-粪氮)&#x2F;摄入氮 蛋白质真消化率&#x3D;(摄入氮-粪氮+粪代谢氮)&#x2F;摄入氮 蛋白质利用率 蛋白质功效比 生物价&#x3D;储留氮&#x2F;吸收氮&#x3D;（吸收氮-尿氮+尿代谢氮）&#x2F;（摄入氮-粪氮+粪代谢氮） 蛋白质净利用率&#x3D;生物价*消化率&#x3D;储留氮&#x2F;吸收氮 * 吸收氮&#x2F;食物氮&#x3D;储留氮&#x2F;食物氮 氨基酸评分 AAS&#x3D;每百克待测蛋白质中必需氨基酸含量&#x2F;每百克参考蛋白质中必需氨基酸含量 参考蛋白质：FAO&#x2F;WHO1973或不同年龄段人体氨基酸模式2007 适用于单一和混合食物蛋白质评价 经消化率校正后的氨基酸评分 PDCASs&#x3D;ASS*真消化率 AAS和PDCASS计算 比较食物蛋白质含量 确定必需氨基酸的含量值 查食物成分表中必需氨基酸含量：mg&#x2F;100g换算为mg&#x2F;g蛋白质 氨基酸含量（mg&#x2F;g蛋白质）&#x3D;氨基酸含量（mg&#x2F;100g）&#x2F; 蛋白质含量（g&#x2F;100g） 食物氨基酸评分的计算 计算ASS 找到限制氨基酸 PDCASS计算 评价","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"体格测量","slug":"营养学/【人体营养状况评定】体格测量","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-31T08:20:22.774Z","comments":true,"path":"2019/03/18/营养学/【人体营养状况评定】体格测量/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A%E3%80%91%E4%BD%93%E6%A0%BC%E6%B5%8B%E9%87%8F/","excerpt":"","text":"身长和头顶至臀长测量卧式标准量床使用 3岁以下 放置在平坦地方，检查头板有无松动 围板刻度尺面向光源，0点是否与头版的头顶重合 准确性：钢尺检查，一般10.0cm误差不得&gt;0.1cm 测量方法 身长 身长测量2岁及以下，身高测量适用于2岁以上 被测婴幼儿脱去鞋帽袜，穿单衣仰卧于标准量床底板中位线上 将婴幼儿头扶正，头顶接触头板 测量者位于婴幼儿右侧，左手握住双膝，使腿伸直，右手移动滑板使其接触婴幼儿双侧足跟 头顶-臀长 测量者左手提起婴幼儿下肢，使膝关节屈曲，大腿与底板垂直，右手移位滑板使其接触婴幼儿臀部 读数 cm为单位，保留1位小数点 注意事项 确保婴幼儿头顶至足跟呈一条直线 防止婴幼儿出现身体扭动等现象 意义 纵向测量指标，与骨骼生长有关 反应长期营养、疾病和其他不良环境的影响 体重测量测量仪器 婴幼儿体重秤或成人体重秤 放置于平坦地面，要求无晃动，仔细检查零点是否准确 校正：标准砝码，要求误差不得超过0.1% 测量方法 体位：1岁以下取卧位，1岁以上取坐位 事先排空大小便，测量时脱去外衣、鞋帽和袜子，只穿着背心和短裤 读数：以kg为单位，保留2位小数点 注意事项 若哭闹厉害，可以使用减差法 测量过程读数中，不能手扶婴儿，同时注意婴幼儿身体不能剧烈扭动 有特殊原因，不能多脱衣服，应设法扣衣物重量 意义 反映构成体重成分的骨骼、肌肉、内脏、体质和水分变化情况 对营养状况反应敏感，是常用的评价指标 头围测量测量仪器 头围 双侧眉弓上缘经后脑勺枕骨粗隆绕头一周的长度 测量仪器 软尺 检查有无裂缝，制作材料是否符合要求 钢尺检查：2m长，若与2m相差0.5cm则不能使用 测量方法 被测婴幼儿取坐位或仰卧位 测量者位于婴幼儿右侧或前方，左手拇指将软尺零点固定于头部眉弓上缘处，软尺经枕骨粗隆及左侧眉弓上缘回至零点，读取软尺和零点重合处的读数 读书：以cm为单位，保留1为小数点 注意事项 婴幼儿需要脱帽，软尺紧贴皮肤，不能打折 长发或扎辫子者，应先将头发在软尺处经过向上、下分开，使软尺紧贴头皮 意义 横向测量指标 间接反应颅内容量大小 胸围测量测量 胸围 从两侧乳头线到后面两肩胛骨下角下缘绕胸一周的长度 测量：软尺 测量方式 婴幼儿取仰卧位，自然躺平，处于平静状态 测量者立于婴幼儿右方，用左手拇指将软尺零点固定于婴幼儿胸前右侧乳头下缘 右手拉软尺绕经右侧后背两肩胛骨下角下缘，再经左侧回到零点，读数 读数：以cm为单位，保留1为小数点 注意事项 后背位置准确 各处软尺轻轻接触皮肤，皮下脂肪较厚的婴幼儿，接触皮肤应该稍微紧些 取平静呼吸时的中位数 意义 横向测量指标 正常情况下，营养良好的婴幼儿，胸围赶上头围的年龄往往提前 营养不良的婴幼儿，胸部肌肉和脂肪发育较差，胸围赶上头围的年龄靠后 2岁半时，胸围&lt;头围，考虑为营养不良或胸廓、肺发育不全 上臂围测量测量 测量仪器：软尺 测量方法 被测者自然站立，肌肉不要紧张，体重平均在两腿之上 充分裸露左上肢，手臂自然下垂，两眼平视前方 测试人员站在被测者身后，找到肩峰到尺骨连线中点处，并用油笔标记 用软尺起始端下缘压在标记为肩峰与尺骨鹰嘴连线中点，水平围绕一周，读数 意义 反应营养状况，与体重密切相关 1-5岁：营养不良-12.5-营养中等-13.5-营养状况良好 皮褶厚度测量测量 仪器：皮褶厚度仪 肱三头肌皮褶厚度测量 被测者自然站立，被测部位充分裸露 测试人员站在被测者背部，找到肩峰到尺骨鹰嘴连线中点处，并标记 在标记点上方2cm处，垂直方向用左手拇指、食指、中指将皮肤和皮下组织夹提起来 右手捏皮褶厚度计，在该皮褶提起点的下方1cm处用皮褶厚度仪 测量其厚度，测量时，皮褶厚度计应与上臂垂直，右手拇指松开 皮褶厚度计卡钳钳柄，使钳尖充分夹住皮褶 在皮褶厚度计指针快速回落后立即读数，以mm为单位，保留小数点后1位 连续测量三次，取平均值 肱二头肌 测试人员站在被测者对面或者侧面 肱二头肌肌腹中点（肩峰到尺骨鹰嘴连线中点上方1cm），并标记 肩胛下角 测试人员站在背面 右肩胛下角下方1cm夹提 意义 衡量个体营养状况和肥胖程度的较好指标，主要表现皮下脂肪厚度 判断胖度标准 男：瘦-10mm-中等-40mm-肥胖 女：瘦-20mm-中等-50mm-肥胖","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人体营养状况评定","slug":"人体营养状况评定","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A/"}]},{"title":"生物样品收集与储存","slug":"营养学/【人体营养状况评定】生物样品收集与储存","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-31T09:14:23.211Z","comments":true,"path":"2019/03/18/营养学/【人体营养状况评定】生物样品收集与储存/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A%E3%80%91%E7%94%9F%E7%89%A9%E6%A0%B7%E5%93%81%E6%94%B6%E9%9B%86%E4%B8%8E%E5%82%A8%E5%AD%98/","excerpt":"","text":"尿液24h 意义 测定人体蛋白质的需要量、氨基酸代谢实验及氮平衡实验 测定水溶性维生素的负荷实验和研究水溶性维生素的需要量 评价水溶性维生素和矿物质的代谢和需要量 研究和评价某些药物、毒物等的代谢情况 血液种类 耳朵 足尖 指尖 静脉血 眼眶血等 抗凝剂使用 草酸盐、枸橼酸盐、EDTA钠盐、肝素等 草酸钾最常用，肝素较为常见 血清或血浆的分离 根据检验目的需要来确定 目前最常用的化学或生化方法，大多是血清检验 粪便种类 常规粪便标本 浓缩粪便标本 保存 固定保存 寄生虫及虫卵检测 冷藏保存 有盖容器，时间不能太长 冷冻保存 矿物质代谢 运输培养皿保存 腹泻病人致病菌检测 0.05mol&#x2F;L硫酸保存 氮平衡实验 意义 测定人体蛋白质的需要量（氮平衡法 评价食物蛋白质的营养价值（氮平衡法 研究人体矿物质（如Fe、Zn、Ca等）的需要量 评价食物中矿物质的吸收率及影响矿物质吸收的因素 监测体内矿物质随粪便的排泄情况","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人体营养状况评定","slug":"人体营养状况评定","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A/"}]},{"title":"素食人群","slug":"营养学/【人群营养】素食人群","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-29T05:49:43.618Z","comments":true,"path":"2019/03/18/营养学/【人群营养】素食人群/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB%E3%80%91%E7%B4%A0%E9%A3%9F%E4%BA%BA%E7%BE%A4/","excerpt":"","text":"食物多样 食物多样化，每天选用粮谷类、大豆及其制品、蔬果和坚果 每天12种，每周25种 同类互换，粗细搭配，色彩搭配 小分量选择 多食用蛋奶类 提高谷类食物摄入量 餐餐有谷物，每餐&gt;100g；不足部分利用零食、加餐和茶点补足 全谷物、杂豆类天天有；主食一半应为全谷物或杂豆类 薯类不可忘 合理利用大豆食物 多品种变花样 发酵豆类不能缺：可以合成维B12 豆类+谷类 合理加工烹调 常吃菌菇和藻类 菌菇类 含有丰富的蛋白质、膳食纤维、维生素、矿物质、菌多糖等 素食人群b12和Fe、Zn重要来源 藻类 碳水：海藻多糖和膳食纤维占50% 富集微量元素能力极强 富含长链n-3多不饱和脂肪酸（EPA、DHA、DPA等 合理选择烹调油 易缺乏n-3多不饱和脂肪酸，注意选择亚麻籽油、紫苏油、核桃油、菜籽油和豆油等 烹饪时依据需要的温度和耐热性选择 菜籽油和豆油烹炒 亚麻籽油、紫苏油、核桃油凉拌 易缺乏营养 n-3多不饱和脂肪酸：亚麻籽油、紫苏油、菜籽油、核桃油、豆油、奇亚籽油、部分藻类 维生素B12：菌菇类、发酵豆制品，必要时服用B12补充剂 维生素D：强化食品，多晒太阳 Ca 大豆、芝麻、海带、黑木耳、绿色蔬菜；奶和奶制品（蛋奶素人群 Fe 黑木耳、黑芝麻、扁豆、大豆、坚果、苋菜、豌豆苗、菠菜等 Zn 大豆、全谷物类、坚果、菌菇类","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人群营养","slug":"人群营养","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB/"}]},{"title":"营养不良症状与体征判别","slug":"营养学/【人体营养状况评定】营养不良症状与体征判别","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-03T06:13:35.447Z","comments":true,"path":"2019/03/18/营养学/【人体营养状况评定】营养不良症状与体征判别/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A%E3%80%91%E8%90%A5%E5%85%BB%E4%B8%8D%E8%89%AF%E7%97%87%E7%8A%B6%E4%B8%8E%E4%BD%93%E5%BE%81%E5%88%A4%E5%88%AB/","excerpt":"","text":"蛋白质-能量不足PEM 营养评价可能判断指标 个人史 先天营养不良 吸收不良 疾病或残疾 药物影响食欲 食物&#x2F;营养史 长期摄入食物不足 母乳不足 喂养不当 饥饿，拒食等 人体测量 皮褶厚度减少 BMI &lt; 18.5 儿童生长曲线 临床表现 消瘦型：明显消瘦，肌肉量减少，肌萎缩，皮肤干燥，毛发减少 水肿型：凹陷型水肿，肝脏肿大，皮肤干燥、毛发减少，色素沉着，精神萎靡，反应冷淡 生化指标、临床检验 血红蛋白浓度，血清白蛋白、血清运铁蛋白、血清甲状腺素结合前蛋白等指标下降 PEM 判断工作程序 一般情况 姓名、性别、籍贯等 膳食史调查 最近饮食是否规律、食欲如何 既往经常摄取的食物种类和数量 婴幼儿喂养情况：母乳、辅食 个人健康状况基本资料患病史：寄生虫感染、慢性腹泻、消化道疾病、消耗性疾病等 体格检查 体型：消瘦、发育不良 身高、体重、头围、胸围等 与既往体重比较变化情况 外貌、表情、活动情况、精神状况等 皮肤弹性、皮下脂肪层、肌肉组织 实验室检查 血红蛋白：血清总蛋白、白蛋白 血清运铁蛋白、血清甲状腺素结合前蛋白，血浆视黄醇结合蛋白 血清氨基酸比值，尿肌酐，氮平衡等 咨询获得相关信息 发病原因或危险因素 缺铁性贫血判断要点 个人史 吸收不良 服用影响食欲或抑制铁吸收的药物 其他代谢疾病 食物&#x2F;营养史 长期动物性食物摄入不足 喂养不当 节食或者限制食物类别 食物选择不当或不良膳食行为等 临床表现 心慌气短、头晕 畏寒，抵抗力下降 口唇、甲床、黏膜苍白 易疲劳 儿童发育迟缓，注意力不集中，认知能力障碍 生化数据，临床检验 血红蛋白浓度，血清铁，血清白蛋白，血清运铁蛋白，血清甲状腺素结合前白蛋白等指标下降 国内诊断标准：成年男性&lt;120g&#x2F;L，成年女性＜ 110g&#x2F;L，孕妇＜ 100g&#x2F;L 骨软化病判断要点 个人史 吸收不良 其他代谢性疾病或消化疾病 服用影响维 D 和 Ca 吸收的药物或者食物 骨质疏松、骨质软化、骨折次数 生育次数 日光照射不足 食物&#x2F;营养史 长期富含维 D 和 Ca 的食物摄入不足 食物选择不当的膳食行为等 体格测量 身高改变 临床表现 手足痉挛：抽搐、惊厥 骨痛、骨压痛、肌无力 X 射线检查改变：骨盆呈三叶形上口，锥体锲形骨折或双凹形变形 生化数据、临床检查 低血钙、低血磷、维 D（25-OH-D3 ＜ 20nmol&#x2F;L 血清碱性磷酸酶活性升高 维 A 缺乏判断要点 个人史 吸收不良 其他代谢疾病 药物影响维 A 吸收（秋水仙碱、新霉素、消胆胺等 食物&#x2F;营养史 长期富含维 A 食物摄入不足 喂养不当 脂肪摄入不足 节食或者限制食物类别、偏食 食物选择不当或不良的膳食行为等 临床表现 夜盲症、毕托氏斑、暗适应能力下降，角膜软化 干眼症 上皮干燥，增生，毛囊过度角化 发育不良、毛发干燥、易脱落 生化数据、临床检查 维 A：血清视黄醇 ＜ 0.7umol&#x2F;L 为不足 ＜ 0.35umol&#x2F;L 为不足 生理盲点 较为灵敏指标，正常为 1.8cm2，缺乏时会扩大 眼结膜印记细胞学法 维 C 缺乏判断要点 个人史 吸收不良 代谢异常 服用影响维 C 代谢的食物或药物 食物&#x2F;营养史 长期富含维 C 食物摄入不足 喂养不当 节食或限制食物类别、偏食 食物选择不当或不良的膳食行为等 临床表现 疲劳、困倦 牙龈肿胀出血、皮下出血、瘀斑 关节液渗出、关节疼痛 生化指标、临床检验 血浆维 C：≤2mg&#x2F;L（11.4umol&#x2F;L），反映近期维 C 摄入情况 白细胞维 C：≤2ug&#x2F;（108 细胞），反应机体储存情况 毛细血管酸性实验：出血点数目反应毛细血管受损程度 维 C 尿负荷实验：口服 500mg，收集 4h 尿液，≥13mg&#x2F;L 正常，＜ 5mg&#x2F;L 是缺乏 治疗实验：协助诊断 维 B2 缺乏判断要点 个人史 吸收不良 其他代谢疾病 服药或食物影响 膳食&#x2F;营养史 长期富含维 B2 食物摄入不足 喂养不当 节食或者限制食物类别、偏食 食物选择不当或不良膳食行为 临床表现 眼球结膜充血 喉咙疼痛，咽、口腔粘膜水肿充血，口角炎、舌炎、唇炎 脂溢性皮炎 贫血 临床检查 红细胞核黄素检查 尿核黄素检查 核黄素尿负荷检查 全血 谷胱甘肽还原酶活力系数测定 Zn 缺乏判断要点 个人史 营养不良或吸收障碍 服用药物&#x2F;食物影响 代谢性疾病 食物&#x2F;营养史 食欲不振、异食癖 富含 Zn 的食物摄入不足 喂养不当 节食或限制食物类别、偏食 食物选择不当或不良膳食行为等 人体测量 身高、体重等指标低于正常范围 儿童生长发育迟缓 临床表现 儿童性器官发育不良 皮肤干燥粗糙，毛发稀少发黄 指甲变脆，匙状舌 口腔溃疡、口角炎 反复呼吸道感染或消化道感染 嗜睡、情绪波动 伤口愈合不良，味觉嗅觉障碍 生化指标 发、尿、血清&#x2F;血浆Zn 有缺锌表现，血锌或发锌不低者，补锌后营养及临床症状得到改善","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人体营养状况评定","slug":"人体营养状况评定","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A/"}]},{"title":"膳食调查与评价","slug":"营养学/【膳食调查】膳食调查与评价","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-31T06:37:51.603Z","comments":true,"path":"2019/03/18/营养学/【膳食调查】膳食调查与评价/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%86%B3%E9%A3%9F%E8%B0%83%E6%9F%A5%E3%80%91%E8%86%B3%E9%A3%9F%E8%B0%83%E6%9F%A5%E4%B8%8E%E8%AF%84%E4%BB%B7/","excerpt":"","text":"24h回顾法应用 调查和记录 所有食物的种类和数量 零食、水果、饮料等 居家、在外用餐的种类和数量 不包含调味品 按照食物的几大类回顾，避免遗漏 引导回顾记录要点 食物图谱或常用容器 弥补调查不足 调味品：称重法 资料核查 双份录入；核实、查错、清理 个人人日数计算 称重记账法计算 食物实际消费量 家庭食物实际消费量&#x3D;购入量+实验开始的结存量-废弃量-剩余量 每人每日各种食物摄入量 家庭平均每人每日每种食物摄入量&#x3D;实际消费类&#x2F;家庭总人日数 每人每日各种营养素摄入量 食物中某营养素含量&#x3D;（（食物克数&#x2F;100）* 可食比例）* 每百克食物中营养素含量 家庭某种营养素总摄入量&#x3D;家庭所有摄入食物中某种营养素总和 平均每人每日某营养素摄入量&#x3D;家庭某种营养素摄入总量&#x2F;家庭人日数 标准人概念及计算方法 标准人 18-29岁65kg成年男子从事轻体力劳动，能量为2150kcal&#x2F;d 标准人系数（折合系数 其他各类人员的能量推荐值&#x2F;2150 标准人日数&#x3D;标准人系数*人日数 混合系数&#x3D;全家总标准人日数&#x2F;全家总人日数 标准人平均每日某营养素摄入量&#x3D;平均人每日某营养素摄入量&#x2F;混合系数 注意事项 称量各种食物的可食部 市品：转化为可食部 不要忽略小杂粮和零食的登记，注意调味品的实际称量 根据餐次比来折算人日数 家庭食物称重法在外就餐不计算在餐次总数种 调查结果有代表性和真实性，不同季节分次调查，至少冬春季节和夏秋季节各调查一次 如果不需要个人数据，平均每人摄入量&#x3D;（总熟重-剩余量）&#x2F;进餐人数 膳食结构的分析和评价流程 食物分析 按照食物成分表找到食物编码和分类 食物归类 按《平衡膳食宝塔》归类 相当于大豆量&#x3D;摄入量*蛋白质含量&#x2F;35.1 相当于鲜奶量&#x3D;摄入量*蛋白质量&#x2F;3 食物摄入量计算填写 比较分析 种类齐全，数量充足 各类食物种类是否齐全 各类食物消费量是否充足 评价 建议 摄入量计算与评价 产能营养素 碳水、蛋白质、脂肪 能量营养素来源分布计算 蛋白质、脂肪、碳水供能比 能量食物来源 谷类及其制品、薯类、豆类、动物性食物、纯热能食物、其他 蛋白质食物来源分布计算 各类食物提供的蛋白质摄入量、蛋白质总和 优质蛋白质占总蛋白质的百分比 脂肪食物来源分布计算 动物性和植物性食物提供的脂肪摄入量和脂肪总量 各类食物提供的脂肪占总脂肪的百分比 三餐能量供能比 评价方法 依据中国膳食指南营养素参考摄入量 ±10%合理 计算评价依据和方法中国居民营养素参考摄入量 工作程序 计算家庭中平均每人每日各种食物的摄入量 平均每人每日各种食物摄入量&#x3D;家庭总摄入量&#x2F;总人日数 家庭混合系数 家庭混合系数&#x3D;（成员1标准人系数*人日数+成员2标准人系数 *人日数…）&#x2F; 家庭总人日数 标准人的每日每种食物摄入量 标准人每日每种食物摄入量&#x3D;平均每人每日食物摄入量&#x2F;家庭混合系数 计算平均每人每日营养素和能量摄入量 根据《食物成分表》中各种食物的能量及营养素含量，计算每人每日膳食总营养素摄入量 平均每人每日某种营养素摄入量&#x3D;个人某种营养素总摄入量&#x2F;个人人日数 标准人平均每日某种营养素摄入量&#x3D;平均每人每日某种营养素摄入量&#x2F;标准人系数 膳食营养素评价 将计算的各种营养素含量与DRIs比较，评价个体或群体是否达标 数据归档 数据库建立变量和编码 调查对象编码，变量名为ID，长度至少两位 食物编码，变量名为D1，长度至少六位 食物质量。变量名为D2，长度至少3位 进食时间。变量名为D3，长度至少1位 进食地点，变量名为D4，长度至少1位 数据库建立 基本结构 原始数据层：用户加工对象 概念数据层：数据库的整体逻辑显示 逻辑数据层：用户看到和使用的数据库 特点 数据共享 数据独立性 数据一致性和可维护性 安全性控制 完整性控制 并发控制 故障发现和恢复 减少数据冗余性 数据实现集中控制 注意事项 根据各种调查表特有的结构建立数据库结构 建立数据库的结构过程中允许限定变量的取值范围，设定取值范围可以避免数据录入错误，提高数据质量","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"膳食调查","slug":"膳食调查","permalink":"https://1578536879.github.io/tags/%E8%86%B3%E9%A3%9F%E8%B0%83%E6%9F%A5/"}]},{"title":"常量矿物质","slug":"营养学/【营养学基础】常量矿物质","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-31T03:08:52.738Z","comments":true,"path":"2019/03/18/营养学/【营养学基础】常量矿物质/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E5%B8%B8%E9%87%8F%E7%9F%BF%E7%89%A9%E8%B4%A8/","excerpt":"","text":"Ca分布约占体重2%，体内含量1000-1200mg 99%的Ca在骨骼和牙齿，存在形式为羟磷灰石 少部分以游离或结合钙的形式存在，存在于软骨组织、细胞外液和血液中，统称为混溶钙池 影响吸收因素 吸收部位 小肠上段，需要通过1.25-(OH)2P3（活性维D）参与 不利 植酸、草酸、过多膳食纤维、碱性磷酸钙盐、脂肪 与钙结合形成不溶性物质 蛋白质摄入过多 促进钙排出 抗酸药、四环素、肝素等 有利 适量维D 某些氨基酸（赖氨酸、精氨酸、色氨酸） 乳糖 适量钙磷比 年龄 吸收率：婴儿50%，儿童40%，成人20% 需要量 孕期和哺乳期需要量大，吸收率高 功能 形成和维持骨骼牙齿结构 维持肌肉和神经正常活动 离子Ca 参与血凝过程 离子Ca 其他 参与调节、激活酶活性 对细胞吞噬、激素分泌有影响 摄入不平衡危害不足 原因 摄入不足 吸收率低 需要量升高 运动减少 缺乏症 婴儿期手足抽搐 儿童期佝偻病 成人骨质疏松 预防 合理膳食，适当摄入Ca，维D食物 进行户外活动 形成Ca吸收因素 过量危害 增加肾结石的风险、肾功能障碍 奶碱综合征、高钙血症、碱中毒 影响其他维生素的吸收（Fe、Mg、Zn、P 来源 奶及奶制品（最好 豆类 绿色蔬菜 各种瓜子 P约占体重1%，85%在骨骼和牙齿，14%在软组织和体液 功能 构成骨骼和牙齿 组织细胞中很多重要成分的原料（核酸、酶 参与糖、脂肪吸收及代谢 对能量的转移，酸碱平衡维持 缺乏危害一般不易缺乏，早产儿缺乏出现佝偻病样骨骼异常 影响吸收因素在十二指肠、空肠吸收 肠道吸收率因P的存在形式和数量变动，酸性无机磷酸盐易吸收 母乳喂养吸收率高 肠道酸度越高，维D有利于吸收 金属阳离子（Ca、Mg、Zn、Al）与p合成不溶性磷酸盐导致不利于吸收 来源 瘦肉、鱼、蛋、干酪、蛤蜊、动物肝脏 海带、芝麻酱、花生、干豆、坚果 粮谷类中的为植酸磷，吸收利用率低 Mg成人25g，60-65%在骨骼牙齿，27%存在于软组织 功能 维持骨骼生长和神经肌肉活性 激活酶的活性 酶的辅酶 抑制K、Ca通道 维护胃肠道功能 缺乏危害 原因 摄入不足、吸收障碍、丢失过多 危害 导致神经肌肉兴奋性亢进 房室性早搏、房颤、室颤 血压升高、胰岛素抵抗、骨质疏松 影响吸收因素 有利 摄入少但吸收率高 氨基酸、乳糖、维D 不利 摄入多，但吸收率低 过多P、植酸、草酸、膳食纤维 与Ca竞争性吸收 来源 绿叶菜 粗粮 坚果 肉、淀粉、牛奶–中等含量 精制食物 – 含量低 Na0.15%体重，主要在细胞外液中 生理功能 调节身体水分和渗透压 钠泵 维持酸碱平衡 维持血压正常 增强神经肌肉兴奋性 过量一般不易缺乏，过量会导致高血压、心血管疾病、胃癌、结肠癌 来源 动物&gt;zhiwu1 主要是食盐、酱油、腌渍或腌渍肉 K98%在细胞内，其他存在于细胞外 功能 维持细胞正常渗透压 维持酸碱平衡 维持神经肌肉应激性和生理功能 维持心肌正常 维持糖、蛋白质正常代谢 预防高血压（高K低Na治疗 缺乏在神经肌肉、消化、心血管、泌尿、中枢神经等系统发生病理性或功能性病变 来源蔬果最好，大部分都含有","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"微量元素","slug":"营养学/【营养学基础】微量元素","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-31T03:08:52.738Z","comments":true,"path":"2019/03/18/营养学/【营养学基础】微量元素/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E5%BE%AE%E9%87%8F%E5%85%83%E7%B4%A0/","excerpt":"","text":"Fe体内4-5g 分类 功能性Fe 主要存在形式：血红蛋白、肌红蛋白 含Fe酶类：细胞色素、细胞色素酶、过氧化物酶、过氧化氢酶 储存性Fe 铁蛋白 含铁血黄素 运输性Fe 运铁蛋白 生理功能 参与O2和CO2的转运、交换、组织呼吸过程 血红蛋白、肌红蛋白、细胞色素A及一些呼吸酶主要成分 提高抗体免疫力 催化产生β-胡萝卜素转为维A 参与嘌呤（正铁血红素）、胶原合成，抗体产生 脂类在血液中转运，药物的肝脏解毒 不足 原因 需要量增加 摄入降低 吸收减少 消耗增加 表现 缺铁性贫血，贫血貌，肝脾肿大 黏膜组织变化（舌炎、口腔炎、舌乳头萎缩，镜面舌） 免疫功能和抗感染能力下降 影响生长和智力发育，活动和劳动耐力下降 皮肤干燥，毛发枯黄，反甲，指甲变薄 神经精神系统异常，如异食癖 缺乏阶段 储存铁减少期 血清铁蛋白减少 红细胞生成铁缺少期 血清铁蛋白减少，血清铁减少，运铁蛋白浓度下降，总铁结合力下降，游离原卟啉浓度上升 缺铁性贫血 除上述两个阶段表现外，还包含血红蛋白下降，红细胞压积下降 血红蛋白实验室检查 男＜120g/L, 女＜110g/L 孕妇＜100g/L 预防缺乏措施 健康教育，Fe强化食品 Fe补充，提高食物Fe利用率（维B2、A 合理搭配食物 铁过量 急性 多见于儿童，消化道内出血（主要症状 慢性 消化道内Fe吸收过多，肠道外输入过多Fe 血色素沉着障碍 Fe过载 肝脏 主要靶器官，过量Fe可使肝纤维化、肝硬化、肝细胞瘤 糖尿病 与Fe过载有关 心血管疾病 催化自由基生成，促进脂蛋白过氧化，形成氧化LDL-C 癌症 氧化和抗氧化系统失衡，诱发突变 影响吸收因素 非血红素铁 三价铁：植物性食物，乳制品 受铁需要量和储存量影响 不利：植酸盐、草酸、茶叶、咖啡的多酚类物质、胃酸缺乏、服用过多抗酸药物 有利：维C、某些单糖、有机酸、动物肉，核黄素（B12 血红素铁 二价铁，动物性食物 不受植酸磷酸影响 受铁需要量和储存量影响 来源 动物性食物，肝脏，全血，畜禽肉、鱼类 蛋：较低，3%吸收率 植物吸收率＜动物 乳：贫铁食物 Zn功能 酶的催化 近百种酶需要Zn的催化 结构 含Zn酶或其他蛋白有200+ 调节 控制细胞Zn水平 调节机体免疫功能 调节胰岛素释放 调节前列腺素的主动分泌过程 缺乏 原因 摄入减少 需求增加 肠道吸收障碍，吸收率降低 丢失Zn增加 疾病 表现 生长发育障碍 性发育障碍和性功能低下 味觉及嗅觉障碍：异食癖，食欲缺乏 贫血貌 匙状甲， 皮肤症状：口角炎，萎缩性舌炎，皮肤过度角化，对称性糜烂 其他：伤口不易愈合、精神障碍、免疫功能下降 判断 症状 发、尿、血清Zn 实验室检查 预防 原发性缺： 调整膳食，增加动物性食物摄入，高危人群采取预防措施 继发性 治疗原发病，及时补充 过量 一次性摄入9g以上 长期100mg&#x2F;d导致贫血，免疫功能下降 长期25mg&#x2F;d，引发铜继发性缺乏 来源 贝壳海产品 红肉 内脏 I甲状腺素 功能 参与能力代谢 促进代谢和生长发育 促进神经系统发育 垂体激素作用 缺乏： 原因 环境、食物、土壤破坏 表现 甲状腺肿；克汀病；流产；先天畸形、死亡率升高 预防 加碘盐 孕妇多吃含碘食物 过量 高碘性甲状腺肿 碘性甲亢 来源 海洋生物 动物＞植物，蛋奶&gt;肉&gt;海鱼 硒2-3mg总量，分布于人体组织器官、体液，肾浓度最高，脂肪含量最低 功能 构成硒蛋白和含硒酶：谷胱甘肽过氧化物酶、硫氧还原蛋白还原酶，碘甲状腺原氨脱碘酶等 抗氧化作用 甲状腺激素调节作用 抗癌作用 肝癌、肺癌、前列腺癌、结直肠癌的发生率及总癌发生率，降低死亡率 维持正常细胞免疫 对于保持细胞免疫和体液免疫是必须的 缺乏 原因 环境，饮食 表现 克山病，大骨节病 预防 多吃富硒食物；提高农作物硒含量；补硒 过多中毒，头发脱落，指甲变性，严重时死亡 来源- 海洋性食物 - 肝肾及肉类","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"碳水","slug":"营养学/【营养学基础】碳水","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-07T09:03:09.605Z","comments":true,"path":"2019/03/18/营养学/【营养学基础】碳水/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E7%A2%B3%E6%B0%B4/","excerpt":"","text":"分类糖1-2个糖分子 单糖 葡萄糖、半乳糖、果糖 葡萄糖+乳糖合成乳糖 半乳糖+果糖合成蔗糖 双糖 蔗糖、乳糖（来源乳制品）、麦芽糖、海藻糖 单双糖来源：蔗糖、果糖、甜食、蜂蜜等 糖醇 三梨醇、甘露糖醇 寡糖3-9个糖分子 异麦芽低聚寡糖 麦芽糊精 其他寡糖 棉子糖、水苏糖、低聚果糖 多糖≥10个糖分子 淀粉 直链淀粉（易吸收）、支链淀粉（不易吸收）、变性淀粉 粮谷类、薯类 非淀粉多糖 纤维素、半纤维素、果胶、亲水胶质物 淀粉分类淀粉分子分类 直链 支链 淀粉粒淀粉分子间相互形成的结构 与食物加工时间、温度有关 糊化（温度升高，易吸收 老化、回生（温度降低 α-淀粉酶水解时间 快消淀粉 20min 慢消淀粉 20min-120min 抗性淀粉 与淀粉分子结构和食物加工有关 消化吸收消化 口腔唾液淀粉酶，胃内几乎不消化 小肠（主要场所 胰消化酶 肠腔消化 胰蛋白酶：麦芽糖、麦芽三糖 大肠: 异麦芽糖、少量葡萄糖等 结肠 不消化的碳水：肠道菌群，发酵消化 H2、甲烷气、CO2、短链脂肪酸 吸收 空肠（主要 吸收途径 血液循环（大部分） 淋巴循环（小部分 吸收过程 主动扩散、主动吸收 作用 提供存储能量 糖原是肌肉和肝脏部位碳水的储藏形式 构成机体组织的重要物质 主要以糖脂、糖蛋白和蛋白多糖的形式存在 分布在细胞膜、细胞器膜、细胞间质中 糖脂是细胞与神经组织的结构成分之一 节约蛋白质 充足的碳水能预防减少蛋白质的消耗 抗生酮 碳水不足时，脂肪氧化不彻底而产生过多的酮体，导致酮血症或者酮尿症 解毒 碳水代谢产生的葡萄糖醛酸是体内重要的结合解毒剂 增强肠道功能 非淀粉多糖类可以刺激肠道蠕动 GI（血糖生成指数餐后不同食物血糖耐量曲线在基线内面积与标准糖（50g葡萄糖）耐量面积比 反映碳水与血糖的关系，是评价碳水生理效应的直观指标 低GI：≤55 中：55-70 高：≥70 影响因素 食物烹调加工方式 食物其他成分含量 胃排空率、胰岛素反应强度、咀嚼程度、小肠中淀粉酶的含量 意义 GI↑，进入肠胃后消化越快，血糖波动大 GI越低，在肠胃内停留时间越长，释放缓慢，血糖波动小 慢性病以及肥胖患者选择食物的依据 居民营养教育，运动员膳食管理，食欲研究等 CL（食物血糖负荷 体现碳水量对血糖影响 GL&#x3D;GI*单位质量食物中可利用碳水的的量&#x2F;100 高GL：＞20；中GL：11-19；低GL：＜10 食物碳水评价混合膳食GI和GL计算 查阅食物碳水含量和质量比 计算可利用碳水含量&#x3D;碳水-膳食纤维 计算每种配料提供的碳水量和混合膳食中的碳水总量 计算各配料提供的碳水占比 混合膳食预测GI的计算 查阅各食物的GI 某配料对混合膳食总GI贡献&#x3D;每种配料GI*该配料碳水质量比 混合膳食GI值&#x3D;每种配料GI相加 食物GL计算 提出建议","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"脂肪","slug":"营养学/【营养学基础】脂肪","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-07T09:21:25.150Z","comments":true,"path":"2019/03/18/营养学/【营养学基础】脂肪/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%91%E8%84%82%E8%82%AA/","excerpt":"","text":"组成和分类脂肪甘油三酯（一分子甘油+三分子脂肪酸），中性脂肪 占95%，可变脂，动脂 类脂（不动脂 磷脂 甘油磷脂：构成细胞膜，参与细胞运输 卵磷脂：蛋黄、血浆 神经鞘磷脂：神经鞘 类固醇 胆固醇和谷固醇 糖脂 构成细胞膜 脑苷脂类和神经甘脂 消化吸收脂肪- 消化 脂肪从口腔开始（脂肪酶分解），主要场所是** 小肠 ** - 消化产物 甘油、脂肪酸、甘油一酯 - 吸收途径 - 直接入血 甘油、短链和中链脂肪酸 - 淋巴途径入血 甘油单酯和长链脂肪酸在小肠合成甘油三酯（合成场所：小肠和肝脏），甘油三酯、磷脂、TG和载体蛋白合成乳糜微粒，经过淋巴系统入血 主要运输形式：乳糜微粒 类脂 胆固醇 直接被吸收（结合的水解后被吸收 磷脂 和甘油三酯吸收类似 作用脂肪 供能 促进脂溶性维生素吸收（维生素A、D、E、K 维持体温，保护脏器 增加饱腹感 增加食物感官性状 类脂 磷脂 细胞膜和亚细胞膜的组成成分 鞘磷脂 神经鞘的重要成分，神经鞘有绝缘性 脑磷脂 参与神经冲动的信号 胆固醇 所有体细胞的构成成分；胆酸（胆汁）、7-脱氢胆固醇、性激素等激素的前体物 必需脂肪酸 构成线粒体和细胞膜的重要成分 合成前列腺素的前体，参与精子形成 参与胆固醇代谢 维护视力 脂肪酸分类空间结构 顺式 反式脂肪酸 人造黄油 升高LDL-C（低密度脂蛋白，降低HDL-C（高密度脂蛋白 第一个双键位置 编号系统：羧基端 n&#x2F;w编号系统 n-3 α-亚麻酸（苏子油、鱼油、 十八碳四烯酸 二十碳四烯酸 二十碳五烯酸（EPA 二十二碳六烯酸（DHA n-6 亚油酸，γ-亚麻酸，二十碳三烯酸，花生四烯酸，二十二碳四烯酸、二十二碳五烯酸 n-7 n-9 降低总胆固醇和低密度脂蛋白 按数目分 短链脂肪酸 2-4个脂肪酸 中链脂肪酸 8-12个 长链脂肪酸 14-16个 饱和程度 不饱和脂肪酸SFA（没有双键 升血脂（甘油三酯和脂肪酸） 动物油、棕榈油、椰子油 单不饱和脂肪酸MUFA（只有一个双键 降低LDL-C，升高HDL-C 橄榄油，山茶油、菜料油 多不饱和脂肪酸PUFA n-3：降低TG，鱼油、亚麻籽油、紫苏油 n-6：降低HDL，LDL、VLDL 血脂异常膳食影响因素 膳食脂肪和脂肪酸 SFA、MUFA、PUFA、TFA（反式脂肪酸） 高碳水 升高TG、TC、LDL、VIDL 降低HDL 膳食纤维 降低胆固醇和LDL-C 矿物质： Mg对心血管系统有保护作用 缺Ca、Zn、铬会引入血脂代谢异常 维生素 维C：促进TC、VLDL、TG降解，脂蛋白酶活性升高 维E：缺乏升高LDL-C 其他：喝酒等 防治 防治肥胖 钠盐减少 膳食脂肪降低，油炸食物摄入降低 控制单双糖摄入量，以符合碳水摄入为主 膳食纤维增加 少喝酒 食物脂肪评价氨基酸评价方法 食用油的熔点及消化率 熔点越低，消化率越高 不饱和脂肪酸和短链脂肪酸含量高的脂肪熔点越低，越容易消化 总脂肪的含量及必需氨基酸 脂肪酸适宜比例 S:M:P&#x3D;1：1：1 n6：n3&#x3D;（4-6）：1 脂肪中含有的其他天然成分 -胆固醇、植物固醇、反式脂肪酸、维生素E等 工作程序 仔细阅读样品相关信息 分析和比较食物总脂肪含量 分析必需氨基酸含量 计算脂肪酸比例 通过以上分析对油脂进行评价，提出合理的饮食建议","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"食物分类","slug":"营养学/【营养素基础】食物分类","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-11T02:45:13.494Z","comments":true,"path":"2019/03/18/营养学/【营养素基础】食物分类/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E7%B4%A0%E5%9F%BA%E7%A1%80%E3%80%91%E9%A3%9F%E7%89%A9%E5%88%86%E7%B1%BB/","excerpt":"","text":"水分布 因年龄、性别、体型有个体差异 新生儿80%，婴幼儿70%，成年男性60%，成年女性50~55% 细胞内2&#x2F;3，胞外1&#x2F;3 功能 构成细胞和体液的重要组成成分 参与人体代谢 调节人体体温 润滑 缺乏 高渗脱水 以水流失为主，电解质流失少，尿比重高 低渗脱水 水流少，电解质流失多，尿比重低 等渗脱水 水和电解质比例流失，体液渗透压不变 需要量 1500-1700ml&#x2F;d（因年龄，劳动强度、性别、温度 人体水平衡及其调节 来源排出动态平衡 来源：饮水、食物（1000ml、内生水 排除：肾脏（60%）为主、肺、皮肤、粪便（显性出汗 受口渴中枢、抗利尿激素及肾脏调节 膳食纤维不能被小肠吸收，属于一种多糖 分类 可溶性 部分半纤维素、果胶、树胶等 不可溶性 纤维素、木质素 吸收水分，加速肠道运转 特性 吸水 黏滞 结合有机化合物 阳离子交换作用 细菌发酵作用 生理功能 有利于食物消化 降低血清胆固醇 预防胆结石形成 维护结肠功能 预防肥胖和超重 影响Fe、Ca系数 来源 蔬果 粗杂粮，植物 谷类人体主要能量来源，66%能量，55%蛋白质来源 营养成分 碳水 胚乳中，多数&gt;70%，存在形式是淀粉 稻米&gt;小麦粉&gt;玉米 蛋白质 7%-12% 小麦胚粉36.4%，赖氨酸（谷类第一限制氨基酸）低 脂肪 0.4%-7.2% 小麦胚粉最高 稻米最低 主要为不饱和脂肪酸 维生素 主要分布于糊粉层，谷胚 加工越细，损失越多 维B为主，B1和烟酸主要来源，B2含量最低 维E：胚芽中 玉米中烟酸含量最多 矿物质 1.5%-3% 包括Ca、Na、Mg、P、K 主要在谷皮和糊粉层 小麦胚粉除了Fe含量最低，其他较高 大麦粉：Zn、Se含量较高 合理利用 合理加工 加工有利于消化 加工越细，矿物质和维生素损伤越多 合理烹调 淘洗次数越多，侵泡时间越长、水温越高，损伤越多 少搓洗，面粉加碱适量，少炸少烤 合理储存 时间、水分含量，温度、湿度 避光通风、阴凉干燥 合理搭配 与豆类动物搭配，提高蛋白质营养价值 豆类及制品营养 蛋白质 20%-36% 大豆类最高，30%+，其他豆类20%-25% 完全蛋白，赖氨酸多、蛋氨酸（第一限制氨基酸）含量少 脂肪 含量差距大，大豆类最多，15%+，其他在1% 大豆：含不饱和脂肪酸，亚油酸含量最多 碳水 大豆34%左右，豆制品低，其他豆类高 主要以淀粉形式 组成复杂，难消化纤维素和低聚糖 维生素 胡萝卜和维E最高，B1含量低 种皮颜色深的豆类胡萝卜素含量高 干豆不含维C，发芽后维C含量升高 矿物质 2-4% 大豆含量高于其他 Ca、Na、K高于谷类，但微量矿物质低于谷类 大豆K、Ca含量高于，其他含量低 其他 生物活性因子：大豆低聚肽，大豆多肽，大豆磷脂，大都皂苷，大豆异黄醇 抗营养因子：蛋白酶抑制剂（影响消化），植酸，红细胞凝集素，胀气因子 合理利用 消化率 豆腐（92-96%）&gt; 豆浆（85%）&gt; 大豆（65%） 抗营养因子：加热处理（蛋白酶抑制剂 与谷类合理搭配，提高氨基酸利用率 豆皮磨粉，作为高纤维烘培食物 水果分类 仁果（果糖、葡萄糖 浆果（蔗糖 核果 柑橘类 热带水果 瓜果 营养含水量大70-90%，游离水，胶体结合小；化合水 碳水 水果主要营养成分 纤维素和果胶是水果骨架，细胞壁主要成分 纤维素和果胶促进肠胃蠕动，有助于消化和排便 维生素 重要来源，种类和含量与水果种类有关 红黄色含胡萝卜素 维C：鲜枣、柑橘 矿物质 重要来源，依据水果种类有区分 有机酸 柠檬酸、苹果酸、酒石酸含量多 生物活性物质 酚酸（影响风味） 黄酮 花青素 单宁（柿子，影响Ca吸收 加工 制成干果、罐头、果汁、果粉 维C损伤多 坚果分类 脂肪含量 油籽：核桃、榛子、杏仁、花生 淀粉：栗子、莲子、杏仁、芡实 植物来源 本木坚果：核桃、榛子、杏仁、松子 草木：花生、瓜子、西瓜籽 营养 脂肪 40%左右 多为不饱和脂肪酸，油脂类含量最高 淀粉 淀粉类坚果70% 油籽类坚果20% 蛋白质 12%-22% 维生素 维E、B良好来源 矿物质 Zn含量高 合理利用 作为日常零食或制作为糕点等 干燥阴凉存放，尽量隔绝空气 蔬菜营养 叶菜 蛋白质、脂肪、碳水含量少 类胡萝卜素、维B2、维C、矿物质、膳食纤维良好来源 菜花、西兰花、芥兰维C多 根茎类 蛋白质1-2%，脂肪少，碳水含量差异大 瓜茄类 水分多，营养素少 南瓜、番茄、辣椒：胡萝卜素高 辣椒、苦瓜、番茄：维C高 鲜豆 与其他蔬菜比，营养素高 蛋白质2-14%，脂肪少，碳水4% 矿物质多，胡萝卜素少 菌藻类 富含蛋白质、膳食纤维、碳水、维生素和矿物质 氨基酸组成平衡，必需氨基酸占蛋白质60%以上 Fe、Zn、硒含量是其他食物的数倍 海产品有碘 海藻富含多不饱和脂肪酸DHA 合理利用 新鲜、深色 合理加工 先洗后切，洗后即炒，急火快炒 菌藻保健作用 多糖，香菇嘌呤等 乳类及其制品营养乳 蛋白质 3% 酪蛋白89%，优质 人乳蛋白&lt;牛乳 脂肪 2.8%-4% 碳水 3.4-7.4% 主要为乳糖（婴儿双歧杆菌吸收 促进Ca吸收 人乳＞羊乳＞牛乳 维生素 几乎都含有，但是含量差异大 矿物质 Ca多且利用率高，几乎1：1 乳制品 酸奶 游离氨基酸、肽含量多 乳糖少 叶酸、胆碱多 干酪 大部分为酪蛋白，含原料中的各种维生素 炼乳 淡炼乳：除去2&#x2F;3的水分，维生素损失，适合鲜奶过敏者、婴儿食用 甜炼乳：15%蔗糖 奶粉 全脂：脱去70-80%水分 脱脂：1.3%脂肪，脂溶性维生素损失多，腹泻婴儿、低膳食者食用 配方奶粉 利用 消毒灭菌 煮沸、巴氏消毒 合理储存，避光（保护维B2 蛋类及其制品营养成分 微量元素受品种、饲料、季节等影响 蛋白质 12%左右，蛋黄&gt;蛋清 氨基酸组成与人体最接近，生物价最高 半胱氨酸加热过度，部分分解产生硫化氢，与Fe结合形成硫化铁，导致蛋黄变黑 脂肪 98%在蛋黄中，乳化（磷脂）形式存在，消化吸收率高 蛋类脂肪30%-33%，中性脂肪62-65%，磷脂30%-33% 油酸含量高（亚油酸50% 胆固醇蛋黄高，蛋清没有 碳水 1-3%，蛋黄&gt;蛋清 维生素 含量丰富，品种完全，大部分存在蛋黄中 矿物质 主要在蛋黄中，1-1.5%，Ca，Fe、Zn、硒、Ca多，蛋清少 Fe生物利用率低，Fe与卵黄高磷蛋白结合 有丰富的卵磷脂和叶黄素 合理利用 生蛋清有抗生素蛋白和胰蛋白酶，不能生吃 过度加热会使蛋白质过分凝固，影响消化吸收 胆固醇多，适宜食用 畜禽肉营养成分 蛋白质 10-20% 因动物种类、年龄、肥瘦及部位有差异 心、肝肾等内脏蛋白质高，脂肪少 脂类 含量差异大，2-89% 畜肉：猪&gt;羊肉&gt;牛＞兔肉 禽肉：鸭鹅＞鸡鸽子＞火鸡、鹌鹑肉（20%蛋白质 内脏脂肪：2-10%，脑子10%＞猪肾、鸭肝、羊猪心 必须脂肪酸：低于植物油脂，禽肉＞畜肉，猪＞牛羊肉 碳水 多在1.5%左右 主要以糖原形式存在 维生素 主要以B族、维生素A为主，内脏＞肌肉 禽肉含有较多维E 矿物质 0.8-1.2% 内脏＞瘦肉＞肥肉 Fe、Zn、硒含量丰富 利用 富含赖氨酸，与谷类搭配 畜肉脂肪与胆固醇最高，比例不宜过多 内脏维生素和矿物质多，适当食用 水产类鱼类营养 蛋白质 15-22% 氨基酸组成平均，多数缬氨酸少 含氮化合物：游离氨基酸、肽、胺类、胍、嘌呤类 脂肪 1-10% 主要在皮下和脏器附件 多为不饱和脂肪酸，熔点低，液态，消化率高95% 碳水 1.5% 少，堂员工含量与其致死方式有关 维生素 维A、D、B2、烟酸多，维C少 鱼肝&#x2F;鱼肝油：维A、D重要来源，维E来源 硫胺素酶和催化维生素B1降解的蛋白质，造成B1缺乏 矿物质 1-2% Zn、硒多 海产鱼富含I 利用 防治腐败变质 青皮红肉：组氨酸。变质导致组胺中毒 脂质过氧化 保存、冷冻、盐腌渍（15%用盐量 软体动物类营养 蛋白质 15% 含全部必需氨基酸 酪、色氨酸＞牛、鱼 贝类：牛磺酸-》视网膜发育 脂肪、碳水少 维生素 与鱼类相似，维A、E、烟酸多,B1少 矿物质 1-1.5% Ca、Fe、Zn、Cu、硒、K含量丰富 呈味物 鱼&#x2F;贝类：游离氨基酸、核苷酸 软体动物：氨基酸 贝类：琥珀酸、钠盐 食用油脂营养动物油脂 饱和脂肪酸为主，熔点高，常温固态，吸收率＜植物油 鱼肉：含不饱和脂肪酸n-3系列 植物油脂 脂肪：99%以上 消化吸收率高 丰富维E、植物固醇、微量维Na、Ca、K 不饱和脂肪酸为主，熔点低，常温液态 椰子油&#x2F;棕榈油：饱和脂肪酸多 橄榄油、茶油、菜料油：高单不饱和脂肪酸油脂 核桃油、葡萄籽、亚麻酸、瓜子、玉米油：多不饱和脂肪酸 芝麻油、花生油：单不饱和和多不饱和脂肪酸比例适当 氢化油不健康 利用 植物油不低于膳食脂肪的50% 动物油：饱和脂肪酸高，不宜长期食用 植物油：易氢化腐败，不能长期储存 饮料软饮果汁、可乐、低热量、其他 特点 90%以上水，糖在10%左右，含少量矿物质和维生素 糖＞11.5%，为高糖 浓缩果汁40%含水，含糖30% 蛋白饮料，乳酸菌有一定营养价值 含酒精 15g 发酵酒 粮谷、水果、乳为原料，经过酵母发酵 酒精＜24%，含糖15-40g&#x2F;L 蒸馏酒 粮谷、薯类，水果原料，经过发酵、蒸馏、陈酿、勾兑制成 酒精18-60% 配制酒 以发酵酒、蒸馏酒或食用酒精为酒基 进行调配、混合或再加工制成 茶分类 发酵程度 发酵：红茶 半发酵：乌龙茶 不发酵：绿茶 色泽： 红 绿 青 黄 白 黑 商品形式 条 碎 包装 速溶 液体茶 采制工艺和茶叶品质 绿 红茶 乌龙茶 白茶 花茶 黑茶 再加工茶 营养 蛋白质、脂质、碳水、多种维生素和矿物质 多酚类、色素、苯胺酸、生物碱、芳香物质、皂苷 作用 咖啡碱：失眠、胃溃疡病人不宜 茶碱鞣酸：缺Fe性贫血不宜 脾胃虚寒：红茶 体胖：绿茶 体质瘦弱：红茶、花茶 夏季绿茶冬季红茶 调味品盐 Nacl，咸味来源 摄入过多，与高血压相关（Na 咸甜相互抵消：1-2%食盐+10%糖 酸增加咸味：1-2%盐+0.01%醋酸 糖和甜味剂 主蔗糖，增香增味（美拉德 白糖 纯度99% 白砂糖 纯度96% 纯棉白糖 还原糖易结块 红糖 褐色来自于羟氢反应和酶促褐变产生的类黑素 酱 大豆为原料，蛋白质高 酱油有少量还原糖，糊精 发酵后有维B2、B12高 香气：酯、醛、有机酸 醋 Ca、Fe多 蛋白质、脂肪、碳水少 加糖减酸 味精、鸡精 味精：谷氨酸单钠结晶二成晶体 谷氨酸单钠形式存在鲜味 PH：在Ph&#x3D;6的时候鲜味最强，PH＞7没有鲜味","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"}]},{"title":"食物中毒","slug":"营养学/【食品安全】食物中毒","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-30T07:18:31.207Z","comments":true,"path":"2019/03/18/营养学/【食品安全】食物中毒/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8%E3%80%91%E9%A3%9F%E7%89%A9%E4%B8%AD%E6%AF%92/","excerpt":"","text":"食物中毒概念摄入含有生物性或化学性有毒有害物质的食物，或把有毒有害物质当作食物摄入后出现的非传染性疾病 特点 发病呈爆发性，潜伏期短，来势急剧 一般有相似的临床表现，常表现为消化道症状 发病与食物有关，停止食用该食物后很快停止 食物中毒对健康人不具有传染性 有的食物中毒具有明显的地区性和季节性 夏秋为高发季节 分类 细菌性 化学性 真菌及其毒素 有毒动植物 细菌性中毒基本条件 细菌污染食品 适宜温度、水分、PH及营养条件下，细菌急剧大量繁殖 进食时加热不充分，未能杀灭细菌及破坏其毒素 特点 全年都发生，夏秋季节多发 主要是动物性食物引起 一般病程短、恢复快，愈合良好 场景细菌 菌名 发病特点 多发季节 中毒食品 原因 潜伏期 症状 预防措施 葡萄球菌食物中毒 金黄色葡萄球菌耐热性不强，肠菌素耐热性强 夏秋 主要为乳制品、蛋及蛋制品、各类熟肉制品 被葡萄球菌污染后在较高温下保存时间过长 起病急，潜伏期短，一般在2-3h，多在4h内，最短1h，不超过10h 1、典型肠胃道症状：恶心、呕吐（重者呈现喷射状）、腹痛、水样便2、病程短 1、防止污染2、防止肠霉素形成 肉毒毒素 G+厌氧菌，肉毒毒素所致，强烈神经毒素，芽孢耐高温 四季均可发生，冬春多发 主要是家庭自制的发酵豆、谷类制品；其次为肉类和罐头食品 被污染的食品在使用前未进行彻底的加热处理 潜伏期12-48h，最短6h，长者8-12天 运动神经麻痹症状（无力、视物模糊、眼睑下垂、复视、咀嚼无力、吞咽困难、头颈无力等 1、不吃生酱及可疑含霉食品2、自制发酵酱类，原料应清洁新鲜，提高发酵温度，充分搅拌，使氧气供应充足3、对食品进行彻底加热 副溶血弧菌 嗜盐性细菌，G-兼性厌氧，不耐热，对酸敏感 多发生在6-9月高温季节 主要是海产品，其次是咸菜、熟肉类、禽肉、禽蛋类，半数为腌制品 烹调时未烧熟、煮透，熟制品污染后未彻底加热 一般6-10h，最短1h，长者24-48h 1、发病急，主要症状为恶心、呕吐、腹泻、腹痛、发热、尚有头痛、发汗、口渴等2、腹泻大多为水样便，重者为黏液便和黏血便，失水严重可引起虚脱并伴有血压下降3、大部分病人2-3天恢复正常 1、停止食用可疑中毒食品2、加工海产品，一定要烧熟煮透3、烹调或调制海产品、拼盘时可加适量食醋4、加工过程中生熟分开，低温储存 O157:H7大肠杆菌 耐低温不耐高温，耐酸不耐碱 夏秋季节，6-9月多见 肉及肉制品、汉堡包、生牛奶、奶制品、鲜榨果汁、饮水等 与饮食习惯有关，通过食品与饮品传播，多以食源性爆发多见，传播途径以口粪途径 起病急，潜伏期2-9天，最快5h 1、突发腹部痉挛，许多病人有呼吸道症状2、严重者可以造成溶血性尿毒综合征、血栓性血小板减少性紫癜、脑神经障碍等多器官损害 1、停止食用可疑中毒食品2、不吃生的或加热不彻底、不清洁卫生的食物；防止食品生熟交叉污染3、养成个人良好习惯，饭前便后洗手4、食品加工、生产企业应严格保证食品加工、运输及销售途径的安全性 有毒动植物中毒动植物细菌 菌名 毒性物质 季节 发病时间 发病表现 预防措施 河豚中毒 河豚毒素是神经毒，热稳定，河豚肝脏和卵巢毒性最强 2-5月毒性最强，中毒多发生夏季 发病急，潜伏期0.5-3h，一般10-45min 1、先感觉手指、口唇、舌尖麻木或有刺痛2、然后恶心、腹痛等肠胃道症状3、严重者瞳孔方法，对光反射消失，血压体温下降，呼吸困难，最后因呼吸衰竭而亡 1、捕捞时将河豚剔除2、水产部门严格执行《水产品管理办法》3、加强宣传教育 组胺中毒（鱼类引起 海产鱼的青皮红肉鱼不新鲜或腐败产生组胺 - 发病快，一般0.5-3h，最短5min，最长5h 1、以局部或全身毛细血管扩张，通透性增加，支气管收缩为主2、症状轻、恢复快 不吃腐败变质的鱼，合理烹调 含氰苷类植物中毒 毒性成分：亚麻苦苷，苦杏仁苷（属剧毒），所含食物包括杏桃李和枇杷等核仁、木薯 - 潜伏期半小时到数小时，一般为1-2h 1、主要症状为口内苦涩、头晕、头痛、恶心、呕吐、心慌、脉速、有时可闻到杏仁味2、严重者意识不清，呼吸微弱，四肢冰冷，昏迷，常发出尖叫3、继而意识丧失，瞳孔放大，全身阵发性痉挛，病死率高 1、加强渲染教育2、不生吃苦味果仁，也不能食用炒过的苦杏仁3、果仁：清水浸泡，敞锅蒸煮，挥发氢氰酸4、不吃生木薯，使用时木薯去皮，加水浸泡2d，再敞锅蒸煮 其他 动物甲状腺中毒：有毒成分是甲状腺素 贝类：石房蛤毒素 有毒蜂蜜：雷公藤碱及其他生物碱 四季度：皂素、植物血凝素 发芽马铃薯：龙葵素 鲜黄花菜：类秋水仙碱 毒蔁中毒 中毒表现及原因 类型 食物 成分 潜伏期 症状 肠胃炎型 红姑类、乳菇类、粉褶蔁属等 类树脂、甲醛类的化合物 0.5-6h 剧烈恶心、呕吐、阵发性腹痛或绞痛，剧烈腹泻、水样便，不发热，病程短 神经精神型 - - 0.5-4h，最短10min 以精神兴奋、抑制、错乱、矮小幻觉或以上表现交互出现为特点，“小人国幻觉症”，病程短，病死率低 溶血型 多为鹿花蔁、褐鹿花蔁等 - 6-12h，最长达2d 1、初始症状为肠胃道症状，发病3-4天出现溶血性黄疸，肝脾肿大，肝区疼痛2、严重时心律不齐，抽搐或昏迷，也可引起急性肾功能衰竭3、病程2-3天，死亡率不高 脏器损害型 - 毒肽类、毒伞肽类、霉素为剧毒 5期：潜伏期、胃肠炎期、假愈期、脏器损伤期、恢复期 最严重的 日光皮炎型 胶陀螺 - 24h左右 1、开始多为颜面肌肉震颤，继而手指和脚趾疼痛，上肢和面部出现皮疹2、暴露于日光部位的皮肤可出现肿胀，指甲剧痛，指甲根部出血，病人嘴唇肿胀外翻 预防 加强渲染力度 不采不食用不认识蘑菇 化学性中毒 类名 来源 表现 急救处理 预防措施 亚硝酸盐 1、新鲜叶菜大量摄入，煮熟放置过久的蔬菜2、刚腌制不久的蔬菜3、苦井水4、腌肉制品中加入过量的硝酸盐或者亚硝酸盐5、误食用亚硝酸盐 1、潜伏期：误食纯亚硝酸盐10-15min，大量摄入蔬菜或未腌透的蔬菜1-2h2、头晕、无力、胸闷气短、嗜睡、心悸、消化道症状、口唇、指甲及全身皮肤发绀3、严重者心率减慢，心律不齐，昏迷和惊厥，常因呼吸衰竭死亡 1、催吐、洗胃、导泻2、美蓝、维C和葡萄糖三者合用3、对症处理 1、吃新鲜蔬菜，短时间内不大量摄入含硝酸盐较多的蔬菜，不能暴食蔬菜2、肉制品中硝酸盐和亚硝酸盐的用量符合国家相关标砖，不能多加3、不喝苦井水4、保管亚硝酸盐，不误食 砷化物中毒 食品加工原料或者添加剂砷量过高；误食 1、潜伏期十几分钟-几小时2、中毒后口腔和咽喉部有烧灼感，吞咽困难，口中金属味，消化系统表现3、严重者休克，昏迷和惊厥，引发中毒性心肌病和急性肾功能衰竭 1、催吐、洗胃2、用特效治疗药：硫基类药物3、对症治疗 1、严格报关砷化物和砷制农药2、食品加工原料和添加剂不得超过国家规定3、对含砷化合物要健全管理 真菌及其毒素食物中毒 类别 原因 潜伏期 表现 措施 赤酶病麦中毒 有毒成分是赤霉病麦毒素，对热稳定 10min-5h 1、头晕、恶心、胃部不适、有烧灼感、呕吐、乏力2、重症出现呼吸、脉搏、血压不稳、四肢酸软，步态不稳似醉酒 1、根据粮食中毒素的限量标准，加强粮食的食品安全管理2、去除或减少病麦粒3、加强田间或储存的防霉措施 霉变甘蔗 有毒成分是节菱孢霉产生的3-硝基丙酸，神经毒素，主要损害中枢神经 15-30min，最长达48h 1、初期头晕头痛，恶心呕吐，腹泻，部分有复视或幻觉2、重者阵发性抽搐，四肢强直或屈曲，手呈鸡爪状，大小便失禁，牙关紧闭，面部发绀3、严重者很快进入昏迷，体温升高，而死于呼吸衰竭4、幸存者常因中枢神经损害导致终身残疾 1、甘蔗成熟后再收割2、甘蔗收割、储存、运输过程中应注意防伤、防冻、防霉变3、严禁销售和食用不成熟或有病菌的甘蔗","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"食品安全","slug":"食品安全","permalink":"https://1578536879.github.io/tags/%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8/"}]},{"title":"慢性病","slug":"营养学/慢性病","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-06T09:04:53.590Z","comments":true,"path":"2019/03/18/营养学/慢性病/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E6%85%A2%E6%80%A7%E7%97%85/","excerpt":"","text":"肥胖指标 BMI 腰围：男90，女85 腰臀比：男0.9，女0.85 其他 理想体重 理想体重&#x3D;身高-105 肥胖度 肥胖度&#x3D;（实测值-理想值）&#x2F;理想值*100% ＞20% 肥胖 ＞10% 超重 ＞50% 重度肥胖 总能量 总能量&#x3D;理想体重*（20~25） 血压 动脉（主要）、静脉、毛细血管 分类 原发 继发 膳食 Na（多） 肥胖 酒精摄入多 K（低 Ca（低 Mg（与血压呈负相关 脂类（多 膳食纤维 冠心病二级预防 一级预防 合理膳食，防止超重肥胖 控制和治疗高血压、血脂异常、糖尿病 生活规律，避免精神紧张，适当体育锻炼 二级预防 保持心态平和，避免情绪激动 戒烟戒酒 适当体力劳动 合理膳食，防止超重肥胖 适量使用药物，做好监测 营养防治 禁烟酒 能量摄入要达到并维持理想体重或适宜体重 减少脂肪摄入 适量碳水，限制蔗糖和果糖摄入 适量蛋白质，适当增加大豆及其制品摄入 增加蔬果摄入 少食多餐，细嚼慢咽 防止情绪波动 痛风膳食影响因素 肥胖 喝酒，喝水不足 高嘌呤、高脂肪 药物 诱发加重因素 激烈运动 酗酒 缺氧 受凉 体重减轻过快等 营养防治 限制总能量，防治超重肥胖 能量减少应循环渐进，防止痛风急性发作 每周减轻0.5-1kg 合理的膳食结构 蛋白质10-15%，脂肪&lt;20%，碳水50%-65% 维生素和矿物质充足 液体摄入充足 每天2000ml以上；夜间喝水 禁酒 乳酸堆起，易诱发痛风 建立良好饮食习惯 选择低嘌呤食物 痛风发作期间：低嘌呤，牛奶，蛋类，蔬果，细粮 缓解期：中低等嘌呤饮食 避免高嘌呤食物 骨质疏松膳食影响 蛋白质不足或者过量都会导致骨质疏松 钙的摄入量直接影响骨骼存储的钙量 必要条件：钙磷比适宜 维持骨骼坚固 Mg、Zn参与骨形成，高盐饮食影响正常的骨代谢 维D促进Ca吸收，直接参与骨代谢，维K减少 维A保证骨正常生成和重建 维C促进钙吸收和增加钙储存 过多摄入膳食纤维增加Ca排出 膳食防治 从儿童时期开始预防，增加骨峰值 加强体育锻炼，尤其是负重运动 控制能量，保持适宜体重 控制蛋白质的摄入量 按年龄段摄入充足的钙，注意其他矿物质与钙的平衡 经常摄入富含维A、C、D、K的食物 低Na饮食 忌烟酒，忌喝浓咖啡 经常晒太阳，多参加户外运动 选择适宜运动项目，防摔跤 加强宣传教育 肿瘤 膳食导致 高脂 蛋白质不足&#x2F;过多 膳食纤维 维生素（A、C、E、叶酸 硒、Fe 食物抗肿瘤 类黄酮 多酚类 皂苷物 有机硫化物 加工产生致癌 糖精 黄曲霉 亚硝胺 多环芳烃等","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"}]},{"title":"食物卫生要求","slug":"营养学/【食品安全】食物卫生要求","date":"2019-03-18T06:37:42.000Z","updated":"2024-05-29T11:27:16.481Z","comments":true,"path":"2019/03/18/营养学/【食品安全】食物卫生要求/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8%E3%80%91%E9%A3%9F%E7%89%A9%E5%8D%AB%E7%94%9F%E8%A6%81%E6%B1%82/","excerpt":"","text":"动物性主要卫生问题 腐败变质 加工存储中，卫生管理过程不当 人畜共患传染病 炭疽、布氏杆菌、口蹄疫等 药物残留 抗生素、抗菌素、抗寄生虫药、激素及生长促进剂 死畜肉 病死、中毒、外伤死亡 食用违禁饲料添加剂 卫生要求 感官指标：是鉴定肉类是否腐败变质的重要指标之一 屠宰、污染物等应符合相关标准 建立完善的可追溯体系和召回制度 水产品主要卫生问题 腐败变质 活鱼的肉是无菌的，鱼的体表、鳃及肠道内有一定细菌 工业污水污染 寄生虫 华支睾吸虫、卫氏并殖吸虫 食物中毒 河豚毒素 卫生要求各类鲜活、冻货海鲜及其制品符合相关标准 蛋类主要卫生问题 微生物污染 沙门氏菌感染（常见 化学污染 汞（主要、激素、农药、抗生素等 其他 异味污染、受精禽蛋发育 卫生要求 感官要求 其他 污染物、农药残留、致病菌限量符合相关标准规定 奶类主要卫生问题 奶类中的微生物 溶菌酶有助于抑菌，但保持时间和细菌数量及时间有关 0°可以保持48h，奶挤出后应及时冷却 致病菌 挤奶前动物本身的致病菌 挤奶时和挤奶后来源于手、空气、工具、容器中的致病菌 奶及奶制品的有毒有害物质残留 抗生素、残留农药、重金属 饲料中霉菌有毒代谢物质、放射性核素 掺伪 掺水、电解质、非电解质、胶质物、防腐剂、其他物质等 卫生要求 乳 生乳、巴氏杀菌乳、灭菌乳应符合相关国家规定 感官要求 理化性质 脂肪≥3.1%；蛋白质≥2.9%；非脂乳固体≥8.1%；酸度12-18 污染物限量、真菌霉素限量、菌落总数等应符合国家相关标准 各种奶制品均应符合相应的卫生标准 植物性粮豆类主要卫生问题 霉菌和霉菌毒素的污染 湿度大，温度高易发生霉变 农药残留 农药喷洒和环境中的农药吸收 有毒有害物质污染 工业废水和生活污水灌溉农田会导致重金属超标 仓储害虫 适宜温度和湿度，虫卵孵化和害虫繁殖 其他 无机夹杂物和有毒种子的污染 掺伪 掩盖霉变；增白；掺假、掺杂或以低质量食物冒充高质量食物 卫生要求 控制粮豆类水分和储存条件 搞好仓库卫生 豆制品 清洁、防止微生物无法 注意感官变化 蔬果主要卫生问题 微生物和寄生虫卵污染 工业废水和生活污水污染 蔬果农药残留 腐败变质 亚硝酸盐含量。生长干旱、收获后储存不当或者腌制、都会导致亚硝酸盐含量升高 卫生要求 防止肠道致病菌及寄生虫卵污染 严格控制蔬果农药残留 适宜存放条件 10°左右，冷藏或者速冻、辐照，保鲜剂 蔬果需要清洗消毒 冷饮卫生问题 微生物污染 空气中杂菌的自然污染 生产环境差，消毒不彻底 使用不清洁的用具和容器 销售过程被污染 有害化学物质 食品添加剂使用不当 与食品接触的容器析出有害金属 卫生要求 管好原料 符合国家标准 管好生产线 管好销售渠道 严格执行产品检验制度 罐头食品卫生问题 生物性气胀 微生物繁殖生长，产生气体 化学性气胀 马口铁受侵蚀释放氢引起 物理性气胀 罐装过满、排气不充分、气压变化 卫生要求 罐头食品应参考国家标准 罐皮材料符合国家相关标准，罐皮焊接处、橡胶等不与食物直接接触 出厂前检验 生物检验 37°保温7天，胖听程度增大 化学检验 胖听程度不变 物理检验 胖听消失","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"食品安全","slug":"食品安全","permalink":"https://1578536879.github.io/tags/%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8/"}]},{"title":"儿童和青春期","slug":"营养学/【人群营养】儿童和青春期","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-06T09:04:53.585Z","comments":true,"path":"2019/03/18/营养学/【人群营养】儿童和青春期/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB%E3%80%91%E5%84%BF%E7%AB%A5%E5%92%8C%E9%9D%92%E6%98%A5%E6%9C%9F/","excerpt":"","text":"学龄前期儿童营养特点 体格发育速度减慢，但仍然稳步上升 体重&#x3D;年龄*2+7&#x2F;8 身高&#x3D;年龄*7+70 受遗传、环境、疾病等因素的影响 3岁神经细胞分化基本完成，脑组织进一步发育，神经传导速度加快 6岁第一颗恒牙萌出，咀嚼消化能力有限 注意力分散，行为表现独立、主动性，模仿能力上升 营养需要用于生长发育、代谢、体力劳动、食物热效应需要 蛋白质 RNI：30g&#x2F;d（3-5岁），60g&#x2F;d（6岁以后，动物蛋白占50% AMDR：8%-20%E（4-5岁 脂类 生长发育、免疫功能的维持，脑发育及神经髓鞘的形成 碳水 复杂碳水为主，限制添加糖（＜10%E 适量膳食纤维 AMDR：50%-65% 矿物质（RNI Ca： 500mg&#x2F;d（3-4岁），600mg&#x2F;d（4-6） 每日奶摄入300-500ml，每日平均Ca储留量100-500mg Fe 缺铁性贫血是常见疾病， 儿童生长发育需要，内源性可利用Fe少，奶类占比大，富含Fe少 RNI：10mg&#x2F;d（3-6岁 维C可以促进Fe吸收 Zn 缺乏会导致味觉降低，厌食、异食癖、面容苍白、感染性疾病 4mg&#x2F;d（3-4岁，5.5mg&#x2F;d（4-6岁 维生素 维a 生长发育，对骨骼生长有重要作用 每周一次动物肝脏摄入，每天摄入一定量蛋黄、牛奶、深色蔬菜或鱼肝油 RNI：340ugRAE&#x2F;d（3-4岁男性），330ugRAE&#x2F;d（3-4岁女性），390ugRAE（4-6岁男性），380ugRAE&#x2F;d（4-6岁女性） B族 B1：影响食欲、消化 B2：口角炎、舌炎、唇炎、湿疹、缺Fe性贫血 烟酸对儿童体内代谢、促进生长发育有重要作用 维C RNI：40mg&#x2F;d（3-4岁），50mg&#x2F;d（4-6岁） 亚临床缺乏 膳食指南 身体总活动时间 180min&#x2F;d+ 户外120min&#x2F;d+，中等以上＞60min 久坐持续＜1h&#x2F;d 视屏＜1h&#x2F;d 学龄儿童营养特点 体格发育稳步上升 各器官发育有先有后，神经系统发育早，生殖系统发育晚 身体各部位生长速度不同，自下而上，自肢体远端向中心躯干的规律性变化 营养需要（学龄期+青春期 能量 合成代谢旺盛，所需比成人高 男女营养需要出现较大差异，能量处于正平衡状态 蛋白质 正氮平衡 脂肪 生长发育高峰期 种类：含必须脂肪酸的植物油 AMDR：20-30%，SFA（不饱和脂肪酸）的U-AMDR＜8%E 碳水 适量可避免脂肪摄入过多 谷薯类和蔬果含膳食纤维、低聚糖，避免摄入过多糖分 AMDR：50-60%E,糖＜10% 矿物质 Ca 需要量＞成人 Fe 女孩常见，注意摄入 Zn 缺乏会导致食欲差，性发育不良及免疫功能受损 I 缺碘性甲状腺肿发病率高 避免高碘性甲状腺肿 维生素 维a 缺乏率＞成人 B1 精加工谷物导致 B2 学习生活紧张易缺乏 青春期特点 大脑、心理发育进入高峰期 生殖系统发育成熟，第二特征迅速发育 体格突增 男晚女性2年 持续时间：男性＞女性 增长幅度 生长激素：控制生长发育最重要的激素 性激素：促进蛋白质合成及骨骼、肌肉发育，骨骼增长变粗 甲状腺激素：促进骨骼发育和成熟","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人群营养","slug":"人群营养","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB/"}]},{"title":"婴幼儿和乳母","slug":"营养学/【人群营养】婴幼儿和乳母","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-06T09:04:53.587Z","comments":true,"path":"2019/03/18/营养学/【人群营养】婴幼儿和乳母/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB%E3%80%91%E5%A9%B4%E5%B9%BC%E5%84%BF%E5%92%8C%E4%B9%B3%E6%AF%8D/","excerpt":"","text":"婴儿特点 体重增长最快，3月是出生时的2倍，1岁≥3倍出生体重 足月新生儿50cm，1岁增加50%，达到75cm 出生时头围＞胸围，6-12个月出现头胸围交叉 诞腺未成熟，3-4个月逐渐发育完善，唾液淀粉酶分泌增加 胃容量小，喯门括约肌松弛，胃蛋白酶活性弱，凝乳酶和脂肪酶含量少，消化能力受限，排泄少 小肠吸收分泌面积大，有利于消化 幼儿特点（1-4岁 1岁后体重增加减慢，2岁是出生的4倍，青春期体重增长速度加快 身高增长速度下降，3岁为100cm 1岁头围胸围相等，2岁胸围＞头围，胸围反应胸廓和胸背肌发育 上臂围：反应皮下脂肪厚度营养状况 脑发育从孕中期开始，持续出生的2-3年 1岁第一乳磨牙，1.5岁尖牙，2岁第二乳磨牙，20颗乳牙出齐不迟于2.5岁 乳牙数&#x3D;月龄-6 胃蛋白酶、胰蛋白酶、糜蛋白酶、羟肽酶、脂肪酶活性接近于成人，但咀嚼功能未完全 乳汁营养特点初乳-》过渡乳-》成熟乳 初乳：比成熟乳颜色淡，富含免疫因子 后乳：脂肪高，乳汁浓稠 蛋白质和氨基酸 蛋白质：比牛乳少，乳清蛋白占70%，易于消化 α-乳清蛋白为主，可促进乳糖合成 胱氨酸、牛磺酸为必须营养素 脂肪 种类和数量&gt;牛乳 人乳脂肪处于第二位含有更多比例的棕榈酸 牛乳脂肪处于第一位和第三位，导致脂肪和ca的吸收和便秘 必需氨基酸由母乳提供 碳水化合物 乳糖&gt;牛乳 抑制大肠杆菌的生长，促进ca吸收 以α-乙型乳糖为主 矿物质 钙磷比（2：1）恰当 Fe含量低，吸收率高 初乳Zn含量高 维生素水溶性维生素和维生素A受乳母营养状况影响大 免疫活性物质含量多 白细胞和淋巴细胞：存在与母乳前3-4月 抗体：初乳以分泌型免疫球蛋白SlgA为主 乳铁蛋白、溶菌酶、补体、低聚糖和共轭糖原、其他抗感染物质 激素和生长因子 表皮生长因子、神经生长因子、胰岛素样生长因子、转移生长因子 甲状腺素、前列腺素、TRH等 0-6月母乳喂养 母乳是最理想的食物，坚持6个月内纯母乳喂养 出生后1h内尽早开奶，重视尽早吮吸 第一口食物是母乳可以预防新生儿过敏，减轻新生儿黄疸、体重下降和糖尿病的发生风险 回应式喂养，建立良好的生活规律 适当补充维D，母乳喂养不需要额外补钙 需要咨询医生，若不想母乳 定期监测婴儿体格指标，保持健康成长 7-24月营养素 Na 7-12月母乳可以达到AI 12月+，尝试家庭食物，明显增加 I 乳母经常食用海产品 海产鱼虾类作为婴幼儿辅食 母乳喂养好处 适合婴儿消化、代谢能力，能满足婴儿全面营养需求的天然食物 确保婴儿体格健康成长，有利于婴儿脑神经功能和认知发展 有助于母婴情感交流，促进婴儿行为和心理健康 有助于肠道健康微生态环境的建立，肠道功能及免疫功能的成熟，降低感染性疾病和过敏性疾病 有助于降低婴儿远期慢性病的发生风险 降低母亲产后出血和体重滞留风险 延长闭经时间 降低母亲乳腺癌，卵巢癌，2型糖尿病 母乳喂养经济、安全、方便 母乳存放 室温：20-25°存放4h 冷藏：48h 便携式保温冰盒：10°24h 冷冻：-15~-5° 3-6个月；&lt;-20°保存6-12个月 母乳分泌量判断 婴儿每天可以得到8~12次较为满足的母乳喂养 哺乳时，婴儿有节律的吮吸，并可以听到明显吞咽声 排尿：出生后最初2天，1-2次&#x2F;d，第3天起，6-8次&#x2F;d，或者每天尿湿5-6个尿不湿 若有粉红色尿酸盐结晶的尿，应在出生后第3天消失 排便：出生后每24h至少3-4次，&gt;1汤勺&#x2F;次，第3天开始，软，黄便，4-10次&#x2F;d 通过称重婴儿摄乳前后体重对比 身长、体重、头围等 按需喂养通过识别婴幼儿发出饥饿与进食的信号，在不限制哺乳次数和时长的前提下，立即、合理回应婴儿的进食需求 婴儿饥饿是按需喂养的基础 回应式喂养顺式喂养，及时对婴儿发出的进食需求，迅速做出喂养回应 新生儿的按需喂养，日后逐渐形成规律的喂养方式 按需喂养转为规律喂养新生儿胃容量小，胃排空快，需多次哺乳 随着成长，喂奶间隔从1-2h逐渐延长到3h左右 3个月后，胃容量增加，进食习惯趋于规律，夜间睡眠时间延长，夜奶次数逐渐减少 营养素补充维生素D 出生1-2周内，母乳营养状况比较稳定，10ug&#x2F;d 人工喂养 关注配方奶提供的维d含量，按每日700ml奶量计算，能提供10ug的维d 可以不额外补充，也可以适量补充 阳光照射 条件 阳光充足，皮肤暴露范围足够，阳光暴露时间充足 维d获得难度高，不确定性大 当地季节，纬度，环境污染等条件限制 阳光的高能蓝光对婴儿视觉产生不利影响 婴儿皮肤娇嫩，过早暴露日光照射可能会对皮肤产生伤害 维生素K 补充原因 母乳含量低 新生儿（尤其是剖）肠道菌群不能及时建立，无法及时合成维k 大量使用抗生素的婴儿，肠道菌群可能被破坏，面临缺乏风险 补充途径 肌肉注射1mg；出生体重&lt;1500g的早产儿0.5mg 出生后没有注射或者母婴双方接受可能干扰维生素k代谢的相关治疗，及时咨询 配方奶喂养的婴儿，需关注配方奶配方 Ca 母乳的Ca含量是稳态调节，最重要的调节是减少尿钙的排除 母乳的钙磷比是2：1，母乳喂养的婴儿肠道内形成的不溶性化合物较少 母乳的饱和脂肪酸（棕榈酸）主要是sn-2位，减少皂钙的形成 不能母乳情况 婴儿患病，包括先天和遗传性疾病 乳母患病，如传染病、精神病 母亲因各种原因摄入药物或者化学性物质 经专业人员判断乳汁人米不足 婴儿配方奶是母乳喂养失败的无奈选择 经过一定配方设计和工艺加工，保证部分营养素的数量和比例接近母乳，但无法模拟母乳一整套完美独特的营养和生物活性成分体系，如低聚糖、铁蛋白和免疫球蛋白等以及很多未知的活性成分 母乳对婴儿饮食心理和接受各种天然食物有帮助，因为母乳会包含摄入食物的味道 母乳喂养和奶瓶喂养对于婴儿的心理和智力体验不同 人工喂养不能母乳喂养时，采用牛乳、羊乳等动物乳或者其他代乳品喂养婴儿 婴儿配方食品普通配方 适用于正常婴儿食用的配方食品 乳基婴儿配方食品 以乳类及乳蛋白制品为蛋白质的主要来源，不应含有谷蛋白 碳水以乳糖为主，不应使用果糖和蔗糖 不使用氢化工艺和辐照处理过的食品 豆基婴儿配方食品特殊医学用途婴儿配方食品 无乳糖或低乳糖配方、乳蛋白部分水解配方、乳蛋白深度水解配方或氨基酸配方 早产&#x2F;低体重出生婴儿配方、氨基酸代谢障碍配方等 保存密封、低温冷藏 奶温接近体温 辅食6月之后必须添加 纯母乳无法提供足够营养素和能量 6月时添加辅食与婴儿口气运动能力，及其对不同口味、不同质地食物的接受能力相一致 胃肠道及消化器官、消化酶发育已相对成熟 心理、认知行为能力能接受新食物 过早&#x2F;晚添加过早 满4月前添加、纯母乳时间减少，增加儿童和成年期肥胖风险 喂养困难或增加感染、过敏风险 可能因为进食心情，影响长期的进食行为 过晚 营养不良和缺铁性贫血等各种营养缺乏并，长期造成不可逆的影响 喂养困难，进食行为异常 食物过敏，增加过敏性疾病的风险 食物选择 富含能量、蛋白质、Fe、Zn、Ca、维生素A等 不添加盐、糖及其他刺激性调味品 质地适合，婴幼儿喜欢 价格合理，可负担 安全、优质、新鲜，不追求高价、稀有 含Fe丰富的食物 最佳来源：动物肝脏、瘦猪肉、牛肉、动物血含量高且吸收率高 蛋黄：有但吸收率＜肉类 婴幼儿配方奶、强化铁的米粉：吸收率低 绿叶蔬菜：维C促进Fe吸收，但草酸、植酸抑制 母乳：含铁量低，吸收率高 含维A食物 不易通过胎盘获取，新生儿肝储存低，从食物中获取 主要来源：动物肝脏、蛋黄、鱼肝油、全脂奶及其制品 有色蔬菜：利用率低 母乳：受乳母维生素A营养状况影响，水溶性维生素受乳母膳食营养状况影响 第一口辅食 从富含铁的糊状食物开始，可以选择肉泥、蛋黄、强化铁的婴儿米粉 时间：中午或者中午前 合理安排时间，包括睡眠、进食和活动时间 蛋类引入 从蛋黄开始添加，第一天1&#x2F;8个-》第3天1&#x2F;2个-》第4天1个 逐渐混入鸡蛋白 注意观察不良反应 添加原则 每次只添加一种 由少到多 由稀到稠 由细到粗 多样化实现 逐渐增加食物种类，一种到多种 泥糊状-》颗粒状-》半固体-》固体状 添加新食物后适应2-3天，密切观察是否出现呕吐、腹泻、过敏等 WHO强调，重视7-24月动物性食物的添加 没有特定顺序，按家庭或者当地饮食习惯 自主进食有意识结合婴幼儿感知觉、认知 月龄 原则 7-9月 抓握玩弄餐具 10-12月 捡起较小物品，手眼协调熟练，尝试抓着食物自喂 13月 尝试小勺自喂，但大多洒落 18月 小勺自喂，仍有洒落 24月 小勺自喂，洒落较少","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人群营养","slug":"人群营养","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB/"}]},{"title":"孕妇乳母","slug":"营养学/【人群营养】孕妇","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-06T09:04:53.588Z","comments":true,"path":"2019/03/18/营养学/【人群营养】孕妇/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB%E3%80%91%E5%AD%95%E5%A6%87/","excerpt":"","text":"孕妇营养 碳水 ＞130g&#x2F;d（孕早期 脑对葡萄糖的需求 矿物质 Ca RNI：800mg&#x2F;d, UL: 2000mg&#x2F;d 不足影响：母体高血压、妊高症、先兆子癫，骨密度 Fe RNI：孕中期+7mg&#x2F;d, 孕晚+11mg&#x2F;d， UL：42mg&#x2F;d 孕早期缺乏与早产和低体重出生儿有关，血红蛋白升高 I RNI：230ug&#x2F;d，UL：500ug&#x2F;d 克汀病、甲低、生长发育迟缓、认知能力降低 Zn RNI：10.5mg&#x2F;d（比非孕期+2 促进胎儿发育，预防先天畸形 维生素 A： RNI：660ugRAE&#x2F;d（早），730ugRAE&#x2F;d（中晚），UL：3000ugRAE&#x2F;d 缺乏与早产、低体重出生儿、胎儿宫内发育迟缓 D： RNI：10ug&#x2F;d，UL：50ug&#x2F;d 母体&#x2F;子体钙代谢紊乱、新生儿手足抽搐、低钙血症、婴儿牙釉发育不良及母体骨质软化症 E AI：14mga-TE&#x2F;d 预防新生儿溶血有益，对长链脂肪酸有稳定作用 K AI：80ug&#x2F;d 缺乏性出血症 孕期服用维K抑制剂 早产儿：不能通过胎盘，储存量少 新生儿：初乳含量低，不能通过肠道细菌合成 B1 RNI：1.4mg&#x2F;d（中期），1.5mg&#x2F;d（晚期 加重早孕反应，新生儿出现B1缺乏症 B2 RNI：1.3mg&#x2F;d（中期），1.4mg&#x2F;d（晚期） 胎儿发育迟缓，缺铁性贫血 B6 RNI：2.2mg&#x2F;d 辅疗早孕反应，预防妊高症 叶酸 RNI：600ugDEF&#x2F;d 低体重出生儿，胎盘早剥、神经管畸形 孕妇巨幼红细胞性贫血、血同型半胱氨酸升高，妊娠并发症 营养不良影响 母体 营养学贫血 骨质软化 维生素缺乏症 营养学不良水肿 妊高症等 胎儿 早产儿 低体重出生儿（成年后易糖耐量降低，高胰岛血糖 先天畸形 围生期婴儿死亡率","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"人群营养","slug":"人群营养","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB/"}]},{"title":"营养教育","slug":"营养学/【营养咨询与教育】营养教育","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-07T11:25:12.592Z","comments":true,"path":"2019/03/18/营养学/【营养咨询与教育】营养教育/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2%E3%80%91%E8%90%A5%E5%85%BB%E6%95%99%E8%82%B2/","excerpt":"","text":"营养教育的基本方式和形式讲座 公众传播范畴 优点 受众面极广，信息传播直接迅速 通过口头传播，影响人们观念，激发人们思想 缺点 受众通常较为被动，缺乏充分反馈，传播内容不易留存 语言表达技巧 美化法 丑化法 号召法 假借法 隐喻法 现身说法 加以倾向法 以平民自居法 其他 小组活动 小群体传播范畴 参与性、互动性好 易摈弃旧观念，接受新观念，易发生知信行的改变 个别劝导 行为干预主要手段 培训 针对敢于对象的需求进行培训 交流充分，反馈及时 针对性强，目标明确，现学现用 咨询 形式 门诊咨询、随访咨询、电话咨询、书信咨询、媒介公众号咨询 特点 简便易行、行动灵活、比较亲切、针对性强、可以反复多次进行 参与式培训大众传播技巧 特点 传播者是职业性的传播机构人员，并需要借助特定的传播手段 信息是公开公共的，面向社会人群 信息扩散非常迅速且广泛 传播对象从总体来说是大体确定的 传播是单向的，信息反馈速度缓慢且缺乏自发性 媒介 电子：电视、广播 印刷媒体：杂志、报纸、宣传栏 媒介选择原则 保证效果、针对性、速度型、可达性、经济性 营养信息传播策略 无知阶段：宣传发送，使其知晓 知晓阶段：提供知识，进行劝服 劝服阶段：提供方法，鼓励尝试 决策与采纳阶段：支持鼓励，加以强化 信息表达形式设计 活动形式、时限、地点、内容、工作计划表、责任单位、传播载体设计 参与式培训 让每个培训对象都投入群体活动众，与其他成员合作学习 可实现双向交流 参与培训式有很多种形式，分组讨论、案例分析、模拟等 食品容器和包装材料污染主要卫生问题 竹、木、纸、布等传统材料 特点 表面不光洁，质地疏松，渗水性强 问题 易吸水和被微生物污染，保藏期短 印刷油墨、颜料、荧光增白剂和劣质石蜡等污染 金属、搪瓷、陶瓷、玻璃 特点 表面光洁、质地坚硬，不渗水 问题 有害金属析出 不宜长时间存放酸性物质 高分子化合物 塑料、合成橡胶、化纤、涂料等 不宜存放酒精、油脂等物质 问题 未聚合的游离单体和聚合不充分的低聚物 添加剂或加工助剂残留、低分子降解产物 影响污染因素 食品本身性质 温度 时间 食品容器和包装材料的理化性质和完整性 科普文章的编写基本要求 科学性 真实 成熟 准确 概念要准 数据要准 事实要准 语言要准 全面 先进 思想性 作品反映的是迷信还是科学 作品能否体现为读者健康服务 作品能否体现为社会发展服务 要有积极向上的形式 要适合读者对象阅读 艺术性 通俗性 内容通俗易懂 注意写作方法 避免使用术语 化抽象为具体 实用性 针对性 多样性 从细节入手 趣味性 素材来源 日常生活 工作实践 医学、营养学新成果、新成就 疾病流行信息和规律 营养相关慢性病变化 来信来访 主题提炼 小：选材角度小 尖：针对性 新：新颖 载体和形式 传播渠道&#x2F;体裁&#x2F;广播稿类 表现形式：议论文、故事、顺口溜、诗歌 产品宣传资料的编写注意事项 设计和制作与国际惯例一致 树立牢固的形象意识，时刻宣传和维护自己的形象 宣传资料的实用性 宣传资料种类 印刷宣传品 视听资料 实物资料 新媒体传播材料 产品目标消费群体定位产品宣传效果的决定性因素 基本要求和格式 目的明确 针对性强 形式新颖 美观大方 有创意 工作程序 研究有关资料，形成初步的设计和想法 确定目标消费群体 确定宣传资料种类 针对食品特点确定重点宣传内容 编写宣传材料 市场需求调查及调查表设计调查目标和范围的确定 调查目标 总体目标 具体目标 范围确定 与产品销售范围相一致 调查问卷设计程序 根据调查目的，确定所需的信息资料 确定问题的顺序 问卷的测试与修改 设计调查问卷的注意事项 设计要与调查主题密切相关，重点突出，避免可有可无的问题 问题要容易让调查对象接受，避免出现调查对象不愿意回答或令调查对象难堪的问题 问题次序要条理清晰，顺利成章，符合逻辑顺序 内容要简明，尽量使用简单、直接、无偏见的词汇 工作程序 拟定问题 设计关于调查对象基本信息的问题 关键信息问题设计 测试问卷 修改 设计版式 专项调查表编制特点 信息单一 内容简单 目的性强 基本原则 相关性 客观性 适宜性 可比性 合理性 分类 一览表 将许多调查单位同时列在一张表上 用于调查项目较少的调查 单一表 每一调查单位一份调查表 可容纳较多的调查项目 优点：便于整理。错误少，是最常用的调查表 修改修改和试用后才能用于正式调查 内容 调查表名称 封面信 200-300字最好，不宜过长 作用：向被调查者介绍和说明调查者的身份、调查内容、目的和意义等 调查对象的选取方式和对调查结果的保密措施 指导语 说明填表的方法、需求、注意事项 调查对象基本情况 主体问题（形式 开放式问题 优点：可以让对象自由发挥 对回答者要求较高、费时 回答率低和统计分析困难 封闭式问题 要求： 1、表述问题应语言简洁、通俗易懂 2、问题内容具体、清晰、含义单一，避免双重或多重问题 3、设计者应立场中立，客观谨慎，避免暗示效应 排列原则 1、 一般简单的问题放在前面，复杂难答的问题放在后面 2、 同类问题和相关联的问题放在一起 3、引起被调查者兴趣的问题放在前面 4、先问行为方面问题，再问态度、意见和看法问题 5、开放式问题放在调查表的最后 量表应答式 答案 穷尽性：答案之间包括所有可能的情况 互斥性：答案相互之间不能交叉重叠或相包含 格式 填空式 二项选择式 多项选择 排序 尺度 编码、作业证明记载等 工作程序 表头（调查表名称）设计 封面信设计 调查表初稿设计 调查表初稿检验 客观检验法 回收率：＜60%说明问卷设计有较大问题 有效回收率 填写错误：填写内容&#x2F;方式错误 填答不全 主观评价法 编码和设计小样 检查并印制 注意事项 问卷中问题的文字要简单、直接、明确并且容易被理解 避免双重问题或问题要求太多 避免问题带有诱导性或带有个人主观倾向 注意对敏感性和私人问题的提问方式 问答应提供合适的参考时点 综合信息调查表编制信息收集方法 二手资料法 访问法 实验法 个体综合信息内容 基本情况 健康状况 疾病史 家族健康史 个人膳食习惯 相关行为和运动量等 行为信息 不健康生活方式 促进健康行为 日常健康行为： 合理营养 充足睡眠 适量运动 讲究卫生等 保健行为 定期体检 预防接种 有病主动求医 积极配合医疗护理 遵循医嘱 预防性行为 采取安全防范措施或行为，如系安全带等 改变危害健康行为 戒烟 戒酒 戒毒等 行为调查表原则设计 调查表所列项目的含义、定义、标准必须明确 所列项目内容在资料统计分析时既能定性又能定量 所列项目的用词简明扼要，调查对象易于理解，易于回答 提出的问题应可能确切，针对性强 避免带有诱导性的提问或强制性提问 健康状况信息 个人疾病史 家族疾病史 近期体检信息 生化指标","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养咨询与教育","slug":"营养咨询与教育","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2/"}]},{"title":"身体活动水平","slug":"营养学/【营养咨询与教育】身体活动水平","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-04T02:15:57.148Z","comments":true,"path":"2019/03/18/营养学/【营养咨询与教育】身体活动水平/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2%E3%80%91%E8%BA%AB%E4%BD%93%E6%B4%BB%E5%8A%A8%E6%B0%B4%E5%B9%B3/","excerpt":"","text":"身体活动定义通过骨骼肌收缩引起身体额外能量消耗的任何活动 身体活动四要素分类按日常活动分 交通 职业 家务 休闲时的自主活动 按能量代谢有氧代谢 大肌群，较长时间持续运动，有氧代谢供能 增强心肺功能，提高最大摄氧量，减少脂肪堆积，控制不健康体重增加 步行、骑车、游泳等 无氧代谢 无氧代谢功能 保持或增加瘦体重，延缓运动型功能衰老，预防和控制多种慢性疾病 举重、跳跃、弹力带、哑铃、冲刺跑 按生理功能和活动方式 关节柔韧活动 抗阻力运动 身体平衡 协调性活动 运动强度 绝对强度 梅托 相对强度 最大心率百分比 最大耗氧量百分比 自觉运动强度（RPE 运动时间每次活动持续的时间和活动量有关， 进行一次某种活动持续的时间，以min为单位 运动频率一段时间内运动的次数，以周为单位 身体活动水平将人的日常身体活动进行量化的一种表达形式，用于估计人体总能量消耗水平 身体活动水平高低：取决于身体活动量和基础代谢率 测量方法 主观 行为观察 问卷调查（回顾性问卷、日记、日志） 面访调查 客观 双标水发 间接热量测定法 心率测定法 采用运动传感器等 评价以每天平均步行判断 ＜5000步 静态 5000-7499 低 7500-9999 中 10000-12500 较高 ＞12500 高 以每天平均运动时间和强度判断 低：＜30min中等强度 中：30-60min中等强度 高：60+min中等强度或30+min高等强度 以每周平均运动量和运动频率判断 低： 不属于中、高任意一种情况 中等：（以下任意一种情况 每天至少20min高强度运动，≥3d&#x2F;周 每天至少步行30min或中等强度运动，≥5d&#x2F;周 每天至少步行30min，≥7d&#x2F;周 每天步行和中等强度或高等强度，≥5d&#x2F;周 总的运动量达到600MET-min&#x2F;周 高（达到任意一种情况 高强度运动&#x2F;身体活动≥3d&#x2F;周，总运动量达到1500MET-min&#x2F;周 每天步行和中等强度或高强度运动，7d&#x2F;周。总运动量至少达到3000MET-min&#x2F;周","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养咨询与教育","slug":"营养咨询与教育","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2/"}]},{"title":"食谱编制","slug":"营养学/【营养咨询与教育】食谱编制","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-06T13:38:59.142Z","comments":true,"path":"2019/03/18/营养学/【营养咨询与教育】食谱编制/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2%E3%80%91%E9%A3%9F%E8%B0%B1%E7%BC%96%E5%88%B6/","excerpt":"","text":"食谱编制产能营养素需要量 蛋白质需要量（g）&#x3D;总能量*蛋白质供能比&#x2F;4 脂肪需要量&#x3D;总能量*脂肪供能比&#x2F;9 碳水需要量&#x3D;总能量*碳水供能比&#x2F;4 主食用量 主食用量&#x3D;碳水重量&#x2F;100g食物中碳水含量 肉类和大豆类用量 计算主食中含有的蛋白质数量 副食提供的蛋白质数量&#x3D;全天蛋白质数量-主食提供的蛋白质数量 动物性食物（或豆制品）&#x3D;副食中提供的蛋白质数量&#x2F;食物中所含有的蛋白质百分数 注意事项 碳水化合物进食：蔬菜、水果、动物性食物 脂肪总量&#x3D;食物中的脂肪+烹调油的脂肪 蔬菜：主要增加维生素、矿物质、膳食纤维、根据营养需要来确定 不必要求每天食谱和各类营养素均与膳食目标保持一致 每天的能量，三大产能物质的量出入不应该很大，其他营养素以一周为单位来进行计算，允许±10%浮动 注意配餐的口味、风味调配问题 个体食谱编制膳食营养目标 健康个体 RNI&#x2F;AI：营养目标 UL：控制目标 非健康个体 DRIs、指南等 学龄前儿童饮食特点 饮食逐渐接近成人食物，完成从以奶类为主到主要以谷类为主的过度 胃容量小，需要营养丰富，容量小，密度高的食物 尽量避免纯热能食物，饮用清单饮料 适量进食动物内脏、鱼、禽、肉、奶和豆制品 尽量食用新鲜食材，不适合烧烤煎炸、腌制烟熏、刺多的食物 食品选择原则 膳食组成多样化 荤素搭配，粗细交替 食物软硬适中，温度适宜 与消化能力相适应 食物选择特点和注意事项 主食：粗细搭配，避免高脂高糖小吃点心 适量的鱼禽蛋肉等动物性食物；交替使用 奶及奶制品可提供优质、易消化的蛋白质、维生素A及丰富的Ca 大豆：贫困农村蛋白质营养问题 多选择深色蔬菜，水果种类不限制 烹调油选择植物油 营养需要特点 一日“三餐两点”制为宜，各餐营养素和能量适宜分配 保证蛋白质摄入，应注意选择优质蛋白质和摄入足够多的能量 需要充足的矿物质、维生素，尤其是Ca、Zn和维A 食谱编制原则和方法 满足儿童膳食需要：能量、各种营养素 各营养素之间的比例要适宜：能量营养素供能比、餐次比、矿物质配比合适 食物搭配要合理：主副食搭配，粗细搭配，荤素搭配；多样化，营养素互补 三餐分配合理：三餐两点制，30%：40%：30% 注意制作和烹调方法：蒸煮炖；尽量减少调味品和食盐使用 食谱分析与评价食谱综合评价内容 食物能量和营养素含量评价 食物种类和比例：品种、数量、多样化 三种产能营养素的供能比是否适宜，动物脂肪是否过量 蛋白质来源分布，其他主要微量营养素来源 三餐能量摄入分配是否合理 烹饪方法是否合适 烹饪与营养素损伤相关知识重量保留因子 反映了烹调过程中食物总质量的变化（水分、蛋白、碳水、脂肪等 重量保留因子（WRF%&#x3D;烹调后食物质量&#x2F;烹调前食物质量 营养素损伤率 直接反映了烹调过程中食物中维生素、矿物质等营养素含量的变化情况 AR（表观保留率）&#x3D;食物烹调后某种营养素含量（干重）&#x2F; 食物原料中该种营养素含量（干重）* 100% TR（真实保留率）&#x3D; （食物烹调后某营养素含量*食物烹调后的重量）&#x2F; （食物原料某营养素含量 * 食物烹调前重量）* 100% 个体食谱调整食谱餐次比分析和修改 餐次能量比例 早餐25-30%，午餐30-40%，晚餐30-35% 特殊问题 学龄前儿童：餐次比和能量不是绝对的 青少年：培养合理饮食习惯和方式 感冒、腹泻、康复期病人，根据实际情况调整 膳食种蛋白质和脂肪调整 蛋白质 含量较高：动物性、大豆及其制品、坚果、谷类 含量极少：一般是能量较低，水分、膳食纤维含量较高的食物 脂肪 低脂肪食物：淀粉、谷类、水果、蔬菜、菌藻类食物脂肪含量几乎没有或比较低 高脂肪食物：油（第一位，动物性食物、坚果 烹饪方法 米类：减少淘洗次数，不用理搓洗，不用热水烫洗 面食：蒸制营养素损失少，捞面条损伤多，炸制几乎全部被破坏 蔬菜：流水冲洗，先洗后切，炒前不用水泡，开汤下菜，现做现吃 挂浆上糊可以减少维生素损失 烧烤食物适可而止 群体膳食营养素目标设计群体分类 均匀性群体 年龄分布均匀、健康状态、知识水平、身体活动或劳动强度、职业等 非均匀性群体 简单营养素密度法、靶营养素密度分布法 营养配餐原则和方法 膳食目标设置原则 ＞95%：满足营养需要 2-3%：摄入不足和过量 膳食目标设置方法 需要量一致 EAR切点法 需要量分散：概率法 兼顾经济条件 幼儿园食谱编制营养素目标设置均匀性群体 编制原则 按照年龄均值，以DRIs确定营养目标 按周编制食谱 一周食谱不重复，并在上一周周末公布 幼儿园膳食和家庭膳食互补 三餐两点制或三餐三点制 合理搭配各种食物 品种宜丰富多样化 粗细搭配，粗粮细筛，荤素搭配，色彩搭配，清淡少盐 每周安排1-2次海产品，以补充I 每周补充一次动物肝脏（约25g&#x2F;人），以补充维生素A和Fe 食谱编制（同个体 食品品种和数量的确定：采购时注意人数 根据饮食习惯、市场供应等因素，同类食物更换品种和烹调方法，制备一周食物 学生餐食设计制定原则 遵循“营养、卫生、科学、合理”的原则 结合饮食习惯、考虑季节、地区特点和经济负担能力，因地制宜 主食粗细搭配，粗粮细做，副食荤素搭配 确保优质蛋白质占膳食总蛋白的一半以上，蔬菜一半以上为有色蔬菜 尽量多提供富含钙的食物，≥400mg&#x2F;d，控制食盐摄入＜3g 每周食谱不重样，尽量选用富含维A、B2、Fe、Ca和I的食物 考虑操作车间的加工能力，保证食谱的切实可行 合理烹调，减少食物种营养成分的损失 注意学生的营养状况和身体生长发育状况，掌握学生的健康状态，消除营养不良 用餐场所卫生、环境整洁 食物选购特点和参考 主食力求多样化 合理选择副食 动物性食物：品种多样，优先水产类和禽类，以瘦肉为主，每周一次25g动物肝脏 豆制品交替使用 植物油用量随年龄逐渐增多 注意Ca的摄入 有条件者可以吃适量水果 注意色香味形质的合理搭配，价美物廉，营养丰富 合理烹调，减少食物种营养成分的损伤 不选用易变质海鲜、带刺鱼类，刺激性强，气味大的食物 不选用油炸烧烤食物 大学生食堂食谱编制食物选择特点 饮食成人化 选餐制 适当加餐 食谱编制原则和方法 食物原料符合食品卫生标准的要求，不得采用有毒有害、变质食物 三餐食物要丰富，可供选择的食物足够多 确保优质蛋白供应，荤素搭配，蔬菜其中一半维有色蔬菜 控制食盐、油的用量，饱和脂肪酸不超过1&#x2F;3 考虑当地饮食状况和学生经济负担能力 大学生饮食问题 饮食结构不合理，存在不良饮食习惯 《学生食品安全与营养健康管理规定》 食谱编制 一日食物原料总用量：总人日数计算 注意事项 注意价格和营养的关系，尽量用低价位、高营养食谱 能量充足是重要的，注意三大营养素平衡，注意盐的用量 注意学生体重和体质变化，适时调整食谱 群体食谱调整和评价 集体供餐要求 营养、价格、质量要求 卫生要求 非均匀性群体营养素估算 可以用最脆弱的亚组能量相对最高的人群作为目标 不可能把最高需要作为目标的时候，可以用简单的营养素密度法 日常营养素摄入分布中值&#x2F;平均能量需要量 膳食营养评价 能量目标 膳食评价应根据膳食调查实际摄入和体重变化来确定 宏量营养素目标 蛋白质10-15% 脂肪 20-30% 碳水 50-65% 其他营养素 根据具体情况采取概率法或切点法 EAR评价摄入不足的个体，UL评价过量的个体 营养素仅有AI数值，则用此AI数值评 DRIs使用及注意事项 不是每天的膳食营养素数值都要等于RAI或AI值 能量EAR&#x3D;能量RNI EAR不能用来计划个体膳食","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养咨询与教育","slug":"营养咨询与教育","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2/"}]},{"title":"食品营养成分","slug":"营养学/【营养咨询与教育】食品营养成分","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-07T09:03:15.737Z","comments":true,"path":"2019/03/18/营养学/【营养咨询与教育】食品营养成分/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2%E3%80%91%E9%A3%9F%E5%93%81%E8%90%A5%E5%85%BB%E6%88%90%E5%88%86/","excerpt":"","text":"产品分析计划的制定 谷类制品原辅料的营养特点 高筋小麦粉蛋白质含量（干基）≥12.2% 低筋小麦粉蛋白质含量（干基）≤10% 常见焙烤类食品类型和加工方法 面包制作方法：直接法、中种法、育种法 饼干成型：挤压法、切割法、印花法、复合法 产品质量控制 原料和辅料的起始控制 加工过程中间控制 最终产品控制 检验指标、营养成分、成品率、合格率等 产品分析计划 感官分析和评价、卫生学检验（微生物和污染物 营养成分分析 添加剂、强化剂 功效成分等 食品营养成分计算 能量 食品中供能物质在人体代谢中产生的能量 能量&#x3D;4 * 蛋白质+9 * 脂肪 + 4 * 碳水 + 3 * 有机酸 + 9 * 酒精 + 2 * 膳食纤维 蛋白质 总氮量*氮折算系数 食品中各氨基酸含量的总和 脂肪 粗脂肪：甘油三酯、磷脂、固醇和色素 总脂肪：各个脂肪酸甘油酸酯总和 碳水 糖、寡糖、多糖的总称 减法：100-蛋白质-脂肪-灰分-水分 加法：淀粉+糖，仅用于普通食物 膳食纤维 根据国标或AOAC规定的测定方法获得 预包装食品营养标签通则 基本构成 预包装食品标签上向消费者提供食品营养信息和特性的说明 包括营养成分表、营养声称和营养成分功能声称 营养成分表是最基本的信息 营养成分表 强制标识内容 能量含量值 核心营养素含量值（蛋白质、脂肪、碳水、Na 营养素参考值（NRV）的百分比 营养素强化剂，氧化和&#x2F;或部分氢化油脂 NRV%&#x3D;某营养素含量&#x2F;该营养素的营养素参考值*100% 营养声称 以文字形式对食品的营养特性做出的描述、建议或暗示 含量声称 描述食物中能量或营养素含量水平的声称 来源、含有、提供、高、富含、低、不含、无、零 比较声称 与消费者熟知的同类食品的营养成分含量或能量进行比较以后的声称 减少、少于、增加、加、大于 营养成分功能声称 某营养成分可以维持人体正常生长、发育和生理功能等作用的声称 健康声称 食物或食物成分与人体健康关系的建议、暗示或说明 我国：属于保健食品管理，涉及27各功能声称 预包装食品标签通则直接向消费者提供的预包装食品标签标示 食品名称 配料表 配料表应以”配料“或”配料表“为引导词 各种配料应按制造或加工食品时加入量的递减顺序一一排列，加入量不超过2%的配料可以不按照递减顺序排列 复合配料（不包括符合食品添加剂）：应标识复合配料的名称，原始配料在括号内按加入量的递减顺序标示 某种复合配料已有国家标准、行业标准或地方标准，且其加入量小于食品总量25%时，不需要标示复合配料的原始配料 净含量和规格 营养标签 生产者和&#x2F;或经销商的名称、地址、联系方式 生产日期、保质期、储藏条件 产品标准代号、食品生产许可证编号 其他标示内容：辐照食品、转基因食品、质量等级等 基本要求 符合法律的规定，并符合相应食品安全标准的规定 应清晰、持久，使消费者购买时易于辨认和识读 应通俗易懂、有科学依据，不得标示封建迷信、色情、贬低其他食品或违背营养科学常识的内容 应真实、准确，不得以虚假、夸大，使消费者误解或具有欺骗性的文字、图形等方式介绍食品，也不得利用字号大小或色差误导消费者 不应直接或以暗示性的语言、图形、符号，误导消费者将购买的食品或食品的某一性质与另一产品混淆 不应标注或暗示具有预防、治疗疾病作用的内容，非保健食品不得明示或暗示具有保健作用 不应与食品或其包装物（容器）分离 应使用规范的汉字（商标除外 具有装饰作用的各种艺术字应书写正确，易于辨认 可以同时使用拼音或少数民族文字，拼音不得大于相应汉字 可以同时使用外文，但应与中文有对应关联，所有外文不得大于相应的汉字 预包装食品包装物或包装容器最大表面积≥35cm2时，强制标示内容的文字、符号、数字高度不得＜1.8mm 一个销售单位的包装中含有不同品种、多个独立包装可以单独销售的食品，每件独立包装的食品标示应当分别标注 若外包装易于开启或透过外包装能清晰识别内包装上的所有&#x2F;部分强制标示内容，可不在外包装物上重复标示相应内容；否则外包装需按照要求标示所有强制标示内容 标签内容豁免 免除标示保质期： 酒精度数≥10%的饮料酒 食醋 食用盐 固态食糖类 味精 当预包装食品包装物或包装容量的最大表面面积＜10cm2时，可以只标示 产品名称 净含量 生产者&#x2F;经销商的名称和地址 推荐标示内容 批号 使用方法 致敏物质 食品标签作用 引导和指导消费者购买食品 向消费者做出承诺 向监督机构提供必要信息 维护生产经营者合法权益 促进销售 餐饮食品营养标识基本标识内容 能量 脂肪 Na含量和相当于Na的食盐量 1mgNa相当于2.5mg食盐 选择标识内容 蛋白质 碳水 糖 维生素 矿物质等 鼓励标示占营养素参考值（NRV）的百分比 鼓励在菜单上声明”成年人每次能量需要量为2000kcal“，”成年人每日食盐摄入量不超过5g（相当于Na摄入量不超过2000mg）“ 脂肪标示 包括来自食品原料中的脂肪和烹调过程中加入的脂肪 以g为单位，标示每份和&#x2F;或每百克和&#x2F;或每百毫升餐饮食品中的脂肪含量 Na和食盐量标示 包括食品原料、食盐及调味品用量的Na含量 Na：以mg为单位，标示每份和&#x2F;或每百克和&#x2F;或每百毫升餐饮食品中Na的含量 食盐：以g为单位，标示每份和&#x2F;或每百克和&#x2F;或每百毫升餐饮食品中食盐的含量 营养质量指数评价方法能量密度计算 能量密度&#x3D;一定量食物提供的能量值&#x2F;能量推荐摄入量 对营养需求不同的人群，同一种食物可能有不同的能量&#x2F;营养素密度值 营养质量指数计算 INQ可以直观反映食物和营养素供给之间的情况，可以比较不同食物提供同一营养素的能力 营养素密度&#x3D;一定量食物提供的营养素&#x2F;相应营养素推荐摄入量 食物营养质量指数INQ&#x3D;营养素密度&#x2F;能量密度 评价标准 INQ＞1，提供营养素能力＞提供能量能力，为“质量合格食物” INQ＜1，提供营养素能力＜提供能量能力，为某营养素价值低食物 INQ&#x3D;1，提供营养素能力和能量能力相当 INQ评价步骤 观察食品能量和营养素数值 根据消费者特征查找DRIs中的参考摄入量 计算能量密度 计算营养质量指数 进行食物营养评价","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养咨询与教育","slug":"营养咨询与教育","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2/"}]},{"title":"食品污染","slug":"营养学/【食品安全】食品污染","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-05T06:44:21.245Z","comments":true,"path":"2019/03/18/营养学/【食品安全】食品污染/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E3%80%90%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8%E3%80%91%E9%A3%9F%E5%93%81%E6%B1%A1%E6%9F%93/","excerpt":"","text":"原因及分类原因坏环境、产储运输等过程中发生污染 分类 生物 物理 化学 腐败变性原因 微生物（主要 食物组成及性质； 环境； 化学过程 蛋白质分解产生脱羟基等 脂肪酸败：不饱和程度、过氧化值上升（早期）、酸钾上升（后期 碳水分解：酶、酸度 鉴定 感官（最敏感 物理：浸出液电导度，折光率，冰点下降，黏度上升及PH 化学：挥发性碱基，二甲胺和三甲胺，K值、过氧化值酸价、酸度 微生物：细菌总数、大肠杆菌 细菌性污染菌属 致病菌 条件致病菌 非条件致病菌 污染指标 菌落总数 大肠杆菌 肠球杆菌 黄曲霉菌化学结构及特性 黄曲霉菌B1最常见，毒性与致癌性也最强 溶解于氯仿、甲醇及乙醇等，不溶于水、己烷、乙醚和石油醚 耐热，一般烹调加工不被破坏，加碱可被破坏 易污染食品 花生，花生油最严重 大米、面粉、小麦污染较轻 大豆几乎不污染 危害 急性中毒，肝脏毒 慢性中毒 致癌 展青霉素化学性质 溶于水和乙醇 耐酸不耐碱 易污染食物 霉变面包，香肠 水果：香蕉、梨等 苹果汁、苹果酒等 措施 首要措施：防霉 制定食品限量标准 多环芳烃化合物来源 熏烤 油墨 沥青 石蜡油 环境污染 危害三致 杂环胺类化合物来源 烹调：温度升高，时间过长，水分越少，产生越多 蛋白质多的产生多 危害 致突变癌 二噁英类化合物来源 环境（垃圾焚烧，农药、氧气漂白、燃电 包装材料 危害 急性相当于氰化钾的1000倍，具有不可逆的三致作用 农药污染分类 直接 间接 生物富集作用与生物链 有机氯农药 六六六、DDT 主要在脂肪 急性：神经毒 慢性：侵害肝肾和神经 致癌、致畸、突变 有机磷农药 敌敌畏、敌百虫、乐果等 急性：神经毒 抑制血液和组织中胆碱酶活性，引起胆碱神经功能紊乱 拟除虫菊脂类 高效、低毒、低残留、用量少 慢性少见，急性多发于误服 氨基甲酸酯类 药效快 选择性高 对温血、鱼、人毒性低 有毒金属来源 工业三废 加工过程 添加剂 农药 自然环境 汞麻镉痛铅味（有机＞无机毒） 砷脚（无机＞有机 汞 无机 植物性为主，吸收率低，不易透过胎盘屏障 多引起急性 有机 水产品为主 甲基汞脂溶性高 多慢性 水侯病 镉 来源 工业废水 海产品、动物＞植物 损害肾脏、骨骼、消化系统 低蛋白、低钠、低Fe、 维D有利于Ca吸收 铅 损害肾脏、造血、神经系统 受蛋白质、Ca、植酸影响 砷 三价＞五价 无机砷＞有机砷毒性 原浆毒，对蛋白质亲和力强 N-亚硝基化合物化学污染 结构与分类 亚硝胺 前致癌物 亚硝酰胺 终末致癌物 前体物质N-亚硝化剂 硝酸盐和亚硝酸盐及其他氮氧化物，与卤素离子或硫氰胺酸盐产生的复合物 硝酸盐-》亚硝酸盐 可亚硝化剂的含氮有机化合物 胺、酰胺、氨基酸、多肽、脲、脲烷、呱啶 胺和酰胺在食物中广泛存在 影响合成因素 反应浓度 氯离子浓度 胺的种类与亚硝基程度 硫氯酸盐 微生物作用 肠道硝酸盐还原菌 某些霉菌（黄曲霉、黑曲霉菌等 污染来源 施用硝酸盐化肥 蔬菜腌渍时，时间、盐分不够 食物烹调、烟熏、制罐可使仲胺含量升高 硝酸盐作为防腐剂、发色剂 危害 致癌 致畸 动物 防治措施 制定食品中硫酸盐、亚硫酸盐食用量及残留标准 防止微生物污染和霉变 阻断亚硫胺合成：维C、E，大蒜及大蒜素 使用钼肥 单端孢酶烯族化合物共同特点 较强细胞毒性、免疫抑制作用、致畸 较弱致癌 种类 T-2霉素 三线镰刀菌和拟枝抱镰刀菌产生的代谢产物 毒性作用导致的淋巴细胞组织受损最为严重 致呕毒素（DON 禾谷镰刀菌、黄色镰刀菌和雪腐镰刀菌产生 赤霉病麦中毒的主要病原物质 二醋酸麓草镰刀烯醇（DAS、雪腐镰刀烯醇（NIV、镰刀菌烯醇-X 预防措施 防霉去菌 加强监测及制定食品限量标准 其他玉米赤酶烯酮主要污染玉米，其次小麦、大麦和大米等 伏马霉素以伏马霉菌B1污染为主，主要污染玉米及其制品 2-硝基丙酸由节菱孢素产生，主要污染甘蔗","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"食品安全","slug":"食品安全","permalink":"https://1578536879.github.io/tags/%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8/"}]},{"title":"错题内容","slug":"营养学/错题内容","date":"2019-03-18T06:37:42.000Z","updated":"2024-06-15T08:27:15.443Z","comments":true,"path":"2019/03/18/营养学/错题内容/","permalink":"https://1578536879.github.io/2019/03/18/%E8%90%A5%E5%85%BB%E5%AD%A6/%E9%94%99%E9%A2%98%E5%86%85%E5%AE%B9/","excerpt":"","text":"第一轮食物营养与食品加工 罐头灭菌包括常压、高压、超高压灭菌法 常压用于蔬菜、水果等酸性 高压用于禽肉、水产品及部分蔬菜等低酸性 超高压用于液体 谷类蛋白中赖氨酸含量低，所以谷类蛋白质生物学价值低于动物性蛋白质，蛋白质生物学价值最高的是鸡蛋 谷类矿物质主要在谷皮和糊粉层，但其吸收率会受到植酸和膳食纤维等因素的影响，胚芽具有蛋白质、脂类、矿物质、维生素 谷类加工越细，蛋白质、脂肪、维生素、膳食纤维及矿物质都会损失 水果中的有机酸能刺激人体消化腺的分泌，促进Ca吸收、保护维C稳定性，有利于食物消化 保健食品常见功效成分 蛋白质和氨基酸类 功能性碳水类 功能性脂类和脂肪酸 微量营养素 其他活性成分：植物化学剂、益生菌、其他：药食同源 食品保藏：物理和化学 物理：冷冻（冷却、冻结）、辐照、高压保藏 化学：腌渍（盐糖）、烟熏（冷、热、液熏法） 大豆生物活性物质：大豆异黄酮、大豆低聚糖、大豆多肽、低聚肽、植物固醇、大豆磷脂、大豆皂苷等 大豆抗营养因子：蛋白酶抑制剂（彻底加热可以去除）、植酸、红细胞凝集素、胀气因子（棉子糖、水苏糖 Fe的良好来源：动物肝脏、动物全血、畜禽肉、鱼类，牛奶贫铁食物、蛋黄中Fe吸收率低，肌肉的血红素铁含量不高 加醋可以减少盐使用，使原料中的Ca溶解多-》促进Ca吸收、保护维生素 肉类中蛋白质含量10-20%，生物学价值高，含人体各种必需氨基酸、构成模式与合成人体蛋白质模式相近 豆类是蛋白质良好来源原因包括蛋白质含量高、赖氨酸含量高，但由于蛋氨酸含量低，所以蛋白质利用率不高；与谷类相比，豆类胡萝卜素（深色种皮）和维生素E含量高，但B1低，豆类的Ca、K、Na高于谷类，但微量元素略低于谷类 食品安全毒理性试验 急性中毒：经口急性毒性、联合急性毒性、一次性最大耐受量实验 遗传毒性：30天喂养、传统致畸 亚慢性中毒：90天喂养、繁殖试验、代谢试验 慢性中毒：致癌试验 微波加热特性： 加热速度快 低温灭菌、保持营养 加热均匀性好 加热易于瞬时控制 节能高效 食品生物技术：发酵、酶、细胞和基因工程 肉类在冷冻时会发生变色、蛋白质变性、脂肪氧化（水解酸败和氧化酸败 屠宰后禽肉从新鲜到腐败变质会经历僵直、后熟、自溶和腐败四个过程 谷类中含量较高的蛋白质包括谷蛋白、醇溶蛋白，球蛋白、白蛋白和酪蛋白主要在动物性食物中 化学保鲜包括防腐剂和抗氧化剂，果蜡涂膜、食用膜、纤维素膜属于涂膜保鲜技术 冷冻干燥过程：物料水分预冻结、冻结物料进行升华干燥、物料升温加热 膳食营养指导 在计划膳食时，用RNI作为营养状况适宜目标 平衡膳食宝塔 粮谷类：200-300g（全谷物和杂豆50-150g，薯类50-100g 蔬果类：蔬菜300-500g，深色1&#x2F;2，水果200-330g 鱼禽肉：120-200g（畜禽肉40-75g，水产品40-75g，蛋类50g 奶类坚果：奶类300-500ml，坚果25-35g 油25-30g，盐不超过5g 大豆氨基酸平衡，脂肪含量不算高15% 建议适量摄入鱼、禽、蛋和瘦肉途径 控制总量，分散食用 在外就餐，多选择鱼和豆制品 小分量，量化有效 高能量：400+，高盐：800mg+，高糖：饮料中11.5g+，高油高脂：20g+ 营养素密度&#x3D;一定量食物提供的营养素含量&#x2F;相应营养素的推荐摄入量&#x3D;食物中某营养素含量&#x2F;该食物能量*1000 《中国居民膳食指南》核心：提倡平衡膳食和合理营养以达到促进健康的目的 在制定膳食计划时，应设定能量和营养素的摄入目标维 在安全范围内 达到RNI&#x2F;AI，小于UL 能量RNI&#x3D;EAR，因此用EAR作为唯一参考值 根据体重情况适时调整能量目标 考虑膳食构成，使能量来源分配合理 三餐分配合理 早餐25-30%，午餐30-40%，晚餐30-35% 依据职业、劳动强度等调整 中高身体活动水平应比低活动水平每天多摄入300、800kcal 当人群平均摄入量或中位摄入量等于或大于该人群的营养素适宜摄入量时，可以认为该人群发生摄入不足的概率很低 当平均摄入量或中位摄入量在AI以下时，则不可能判断群体摄入不足的程度 日常摄入量低于EAR的个体在人群中的比例&#x3D;该人群摄入不足个体的比例 AI与EAR没有肯定的关系，不能相互推算 特定人群膳食指南：婴幼儿、青少年、老年人、孕妇、乳母、素食人群 2022中国居民膳食指南由一般人群膳食指南、特定人群膳食指南和平衡膳食模式及膳食指南编写说明三部分组成 一般人群膳食指南有8条，适用于2岁以上人群，特定人群膳食指南在此8条基础上进行增补 粗细搭配通常指的是主食做到粗细搭配、注意增加全谷物和杂豆类食物 乳糖在肠道中被乳酸菌利用后产生乳酸，乳酸在肠道内可以抑制大肠杆菌的生长，同时也可以促进Ca的吸收，调节胃酸，促进肠胃蠕动，促进消化液分泌 会烹会选、会看标签 在生命各个阶段都应该做好健康膳食规划 认识食物，选择新鲜、营养素密度高的食物 学会阅读食品标签，合理选择预包装食品 学习烹饪，传承传统饮食，享受食物 在外就餐，不忘适量与平衡 乳糖不耐 喝酸奶、奶酪 喝奶时与固体食物搭配，饭后1-2h喝，少量多次 人群营养 孕期30-34周，对Fe需要量达到最高峰，28-32周血容量达到最高峰 乳母膳食摄入量对乳汁中的乳糖影响不明显 维生素D和Fe不能通过乳腺进入乳汁 维生素A的含量与乳母膳食关系密切，维生素B1、B2、尼克酸、维C等在乳汁中的含量直接受乳母膳食影响 乳母膳食中Ca含量不足时会首先动用母体的Ca，以维持乳汁中的Ca稳定；乳母膳食中长期缺钙，会导致乳汁中Ca含量降低 乳汁中的Zn、Cn、I含量与乳母膳食密切相关 正常足月婴儿在出生头3月，体重月增600-1000g，3月时体重是出生的2倍，1岁达到或超过出生的3倍（＞9kg，2岁体重达到12kg 婴儿0-6月体重&#x3D;出生体重+月龄*0.7（前3月增加0.6-1kg，后6月增加0.3kg 婴儿7-12月体重&#x3D;6+月龄*0.25 乳牙&#x3D;月龄-6（最迟2.5岁，1岁上下左右第一乳磨牙，1.5岁尖牙，2岁第二乳牙。2.5岁乳牙不齐与克汀病、佝偻病、营养不良等有关 身长反映骨骼系统生长指标，足月新生儿平均身长50cm，在1岁时增长越50%，2岁达到出生的2倍（100cm，学龄前儿童平均增长5cm 出生头围平均34cm，比胸围略大1-2cm，出生时胸围＜头围，但胸围增长速度快，6个月-1岁时，头胸维基本相等，1岁头胸围大致相等。未达到考虑营养不良，不算骨骼发育不全 婴儿期是一生中生长发育最快的时期， 脂肪膳食参考摄入量：48%（0-6月）、40%E（0.5岁），35%E(1-3岁) 幼儿蛋白质未制定，脂肪35% 学龄前儿童预防维A缺乏：每周摄入一次富含维A的动物肝脏，每天摄入一定量的蛋黄、牛奶，或在医生指导下补充鱼肝油，也可以每天摄入一定量的深绿色或黄红色蔬菜补充维A原（胡萝卜素 新生儿消化器官发育未成熟，功能不健全。唾液腺欠成熟，唾液分泌少，唾液中的唾液淀粉酶含量低，不利于消化淀粉，3-4月唾液腺发育完全，淀粉酶逐渐增加，6月起唾液作用增强。胃蛋白酶活性弱，凝乳酶和脂肪酶含量少，因此消化能力弱，胃排空延迟。消化道可以分泌消化酶，蛋活力相对差，特别是淀粉酶。胰淀粉酶要到4月后才能达到成人水平。胰腺脂肪酶活力也低，肝脏分泌的胆盐较少，因此对脂肪的消化吸收能力较差 青春期女性9-11，男性11-13，停止女性17左右，男性22左右 初乳：分娩后7&#x2F;1-5天的乳汁淡黄色，质地粘稠，脂肪少，蛋白质多，尤其是抗体、白细胞、溶菌酶及抗菌因子分泌型免疫球蛋白和乳铁蛋白等，长链多不饱和脂肪酸多于成熟乳 过渡乳：产后7-15&#x2F;5-10天，随后是成熟乳：脂肪含量增加，蛋白质含量减少 妊娠成功基础：合理摄入能量 孕妇能量消化包括母体生殖器官及胎儿的生长发育，母体用于产后泌乳的脂肪储备、基础代谢、食物热效应、体力活动 婴儿碳水摄入过多会导致腹泻（在场内经过细菌发酵、产酸、产气并刺激肠蠕动产生腹泻 幼儿能量需要包括基础代谢（48%）、生长发育、体力活动、食物热效应、能量储存及排泄耗能 青少年生长发育占20-30% 老年人胆固醇的摄入量没有限制 50岁以上女性首要死因是冠心病 绝经后：雌激素水平降低；冠心病发病率上升；容易骨折和骨质疏松；血脂、糖代谢异常升高；心血管患病率上升 乳汁中含有免疫活性因子，白细胞、淋巴细胞、抗体、乳铁蛋白、溶菌酶、补体、低聚糖和共轭糖原等。低聚糖和共轭糖原可以抵抗细菌，促进直肠中乳酸杆菌生长，抑制致病性革兰氏阴性菌生长 0-6月：适当补充维D，母乳喂养不需要额外补钙；回应式喂养 7-24月幼儿喂养指南：回应式喂养，继续母乳，添加辅食，从富含铁泥糊状开始，辅食不加调味料，注重饮食卫生和进食安全，顶级监测体格指标 补充叶酸从围孕期开始，是孕早期的营养要点，神经管畸形与孕早期叶酸不足有关 新生儿低出生体重与糖耐量减少、胰岛素抵抗、高胰岛素血症、高血压有关，体重＜2250g，冠心病发病率增加 低出生体重儿原因：孕前母体体重和身高不够、母体孕期蛋白质-能量营养不良，孕期增重不够，孕期血浆总蛋白和白蛋白水平低下、孕期贫血、孕期吸烟或酗酒等 孕妇缺钙：母体骨密度降低、骨质软化、骨质疏松，胎儿先天性佝偻病、低钙血症 孕妇Fe用于：基本的铁损伤、胎儿成长增加的Fe储备、胎盘和脐带中铁储备量、随循环血量及红细胞量的增加血红蛋白中蓄积的铁量。孕中晚期，fe的吸收率从10到20% 维D和Fe不能通过乳汁 婴儿必需但易缺乏的矿物质主要有：钙、铁、锌、碘（内陆甚至部分沿海地区 对老年人来说，预防高同型半胱氨酸血症：B12、B6、叶酸 新生儿维K缺乏原因：母乳中含量低，肠胃功能不全，大量使用抗生素肠道菌群被破坏 维E缺乏导致早产儿、低出生体重儿，引起溶血性贫血、血小板增加和硬肿症 青春期骨骼发育完全，第二性征迅速发育，性发育逐渐成熟 婴儿在4-6月需要补铁，除Ca、Fe、Zn、I外，母乳喂养不易缺乏其他矿物质元素 婴儿配方奶粉以牛奶为基础，在脂肪方面：脱去部分或全部富含饱和脂肪的奶油，代之以富含多不饱和脂肪的植物油；调配脂肪酸的构成和比例，添加长链多不饱和脂肪酸 可以添加辅食：体重达到出生时的2倍；吃完250ml奶后不到4h饿了；可以坐立起来；24h内吃完1000ml奶；月龄＞6 学龄前儿童缺铁性贫血：需要量大；内源可利用少；进食含fe的食物少 缺I：胎儿期克汀病；儿童期引起亚临床克汀病、侏儒症 回应式喂养：也称为顺应喂养，新生儿的按需喂养和日后逐渐形成的规律喂养方式。强调喂养的时长和频次由婴儿进食意愿和需求决定 按需喂养：婴儿饥饿是其基础，哭闹是最晚表现。通过识别婴幼儿发出饥饿与进食的信号，不限制哺乳次数和时间的前提下 回应式喂养，鼓励但不强迫进食：父母与婴幼儿有充分交流；耐心喂养，鼓励进食，不强迫；鼓励并协助自主进食，不玩玩具，每次进餐时间＜20min；父母保持良好进食习惯，称为榜样 学龄前儿童进行身体活动，限制久坐和视屏时间：有助于维D合成、骨骼增长、促进儿童身体、动作、认知、社会性、情绪情感发簪，促进身心健康； 每天身体活动180min+，户外活动120min+，中等以上60min+ 久坐时间＜1h，累计视屏时间＜1h 睡眠10-13h，包括午睡1-2h 老年人运动心率：170-年龄 老年人营养风险筛查包括：体重下降、进食减少、体重指数（营养状况受损评分，疾病严重程度，年龄 老年人进食量＜80%时，在医生建议下可以合理使用特医食品 公共基础知识 知信行模式： 建立积极、正确的信念与态度，进而改变健康相关行为的基础 信念和态度是行为改变的动力 只有了解了有关的健康知识，建立起积极、正确的信念与态度，才有可能主动形成有益于健康的行为，改变危害健康的行为 健康信念模式 御用社会学心理法解释健康相关行为的理论模型 强调感知在决策中的重要性 是否采纳因素：感知疾病威胁、健康行为的益处与障碍、自我效能（效能期待）、社会人口学和提示因素 首先对疾病的威胁进行判断，然后对预防疾病的价值、采纳健康行为对改善健康状况的期望和克服行动障碍的能力做出判断，最后才会做出是否采纳健康行为的决定 缺点：模式的效度和可信度检验较困难 产生和提高自我效能途径 自己成功完成过某行为 他人间接经验 口头劝说 情感激发 健康教育目的是帮助人们形成有益于健康的行为和生活方式，进而预防疾病、增加健康、提高生活质量 营养教育 目标：改善人们营养状况 通过营养科学的信息交流，帮助个体和群体获得食物与营养知识，形成科学合理饮食习惯的教育活动和过程，是健康教育的重要组成部分 信息传播活动 国际上以信息传播维主要干预手段的健康教育及作为采用综合策略的健康促进项目的一个部分而开展的传播活动 通过应用传播策略来告知、影响、激励公众、社区、组织机构人士、专业人员及领导，促使相关个人及组织掌握知识和信息转变态度、做出决定并采纳有利于健康的行为活动 完善的营养教育项目（6步 了解教育对象：充分认识教育对象特别需要的营养健康信息 制定营养教育计划：确定干预目标，预先制定评价计划和经费预算 确定营养教育的途径和资料：明确教育目标和教育对象，选择适宜的交流途径和制作有效的教育资料 确认是否有现成可选用的营养教育材料，如小册子、挂图、传单等 确定对教育对象进行营养教育的最佳途径：个体传播、面对面交流、讲课、大众传播等 确定营养教育最适合的宣讲方式：发放小册子、放映ppt或录像、讲课、广播等 做好营养教育的前期准备 实施教育计划：确定宣传材料和活动时间表 教育效果评价：通过近期（目标人群的知识、态度、信息、服务变化）、中期（行为和相关危险因素变化）、远期的效果评价（人们营养健康状况和生活质量的变化） 教育对象 个体 各类组织机构：包括学习、部队、企业 社区 政府和媒体，大众传播媒介 社区营养管理工作程序（5 现状调查 确定项目目标 制定计划 执行计划 评价计划 收集社区居民营养与健康资料途径 现有的统计资料（政府行政部门、卫生服务机构（医院、疾病控制中心、妇幼保健院等）、科研学术部门及其他部门现有的相应统计报表 访谈：对象包括领导者、社区居民、医务人员及专家等 专题讨论：对象可以是本社区的居民代表、行政管理人员、卫生人员 调查问卷：现场调查、信函、电话 社区营养工作 基本场所：摄入 社区主要动员对象：社区的基层组织（居委会或村委会 基本细胞：家庭 具体执行者：基层社区卫生人员 主要工作：了解社区人群营养和健康状况及其营养因素；社区营养监测、干预和评价；社区营养改善 传播： 通过：符号和媒介 特点：社会学、普遍、互动、共享、符号、目的性 社区是一个有代表性的区域，主要指城市里的街道、居委会或农村的乡&#x2F;镇、村。社区一般具有共同的地理环境和文化，也有共同的利益、问题和需要 制定项目计划的要求 针对性 可行性 易于确定靶目标：高危人群产生效果 低经费开支 易于评价 评价营养改善措施 投入：开展项目投入的资源和服务方劳动力、后勤等 产出：与投入有关的结果，也是对项目执行系统的评价 效果：各种改善措施对营养健康状况的改善，以及产生行为和生理变化的效果 效益：改善措施增进人体健康而可能带来的社会效益和经济效益 营养改善项目的营养分析：考虑特定目标人群的营养不良程度、人群分布；哪些人患有营养不良或慢性病及产生原因；存在何种营养不良和营养慢性病 制定计划内容：对项目背景描述；经费预算 确定项目目标：对实施可行性的评估 大众传播特点： 传播者是职业的传播机构和人员 信息扩散距离原，覆盖区域广泛，速度快 信息公开公共，面向全社会人群 传播对象虽然多，分散广泛，互不联系，但总体来说是大致确定的 传播是单向的，信息反馈速度缓慢而且缺乏自发性 人际交流反馈形式：语言、体语和书面反馈 营养教育对象：个体；各类组织机构；社区；政府部门 营养教育的主要工作领域 有计划对餐饮行业、农业、商业、轻工、医疗卫生、疾病控制计划等部门的有关人员进行营养知识培训 将营养知识纳入中小学教育内容 将营养工作内容纳入初级卫生保健服务 利用各种宣传媒体，，广泛开展群众性营养宣传活动，倡导合理。。。。 运用多且比较成熟的行为理论 知信行 健康信念模式 计划行为理论 政府部门可以参与到社区的工作包括：计划生育、社区保健、预防接种；不包括：发放资料、信息收集 社区居民的健康资料包括：不同年龄人群身高体重及其他体格而是资料，与营养有关的疾病发生率、死亡率及死亡原因 访谈对象包括：领导者、社区居民、医务人员及专家，不包括派出所民警 慢性病：缺铁性贫血、夜盲症、糖尿病、肥胖、肿瘤、骨质疏松等 卫生事业发展的战略措施：健康教育和健康促进 为了确保某项营养教育活动有依据、有针对性、有目标地进行，必须根据实际情况质地营养教育计划 根据知信行关系的密切程度、行为可改变性、外部调节、危害性及受累人群数量，确定优先项目 在此基础上，确定营养干预目标，包括总体和具体目标 制定传播、教育策略及实施计划，包括确定与分析目标人群、实施机构和人员、教育内容及活动日程等 营养教育评价计划也应当预先制定，包括评价方法、评价指标，实施评价的机构和人员，实施评价的实际及结果使用等 经费预算 食品卫生基础 食用油脂可能存在：黄曲霉、多环芳烃（B(a)P）、高温加热形成的多聚体。 天然存在的有害物质：棉酚、芥子油苷、芥酸 酒类发酵会产生杂醇油，不会在油脂中出现 b族维生素不会影响食物腐败变质的条件，影响条件包括：酶类、环境（湿度、温度、紫外线、氧等），微生物作用 食品污染分为 生物性：微生物、寄生虫、昆虫污染 化学性：来源复杂，包括工业三废、农药、食品容器、 物理性：生产、储存、运输、销售过程的杂物污染，以及放射性物质开采、冶炼、生产，在生活中的应用与排放，核爆炸，核废物污染 黄曲霉素：溶于甲醇乙醇等，不溶于水、己烷等，紫外线下产生荧光。耐热不耐碱性处理足够情况 在体内代谢途径：脱甲基、环氧化、羟化 苦杏仁：细胞原浆毒，氰苷在酶或酸的作用下水解放出氢氰酸，属于细胞原浆毒 肉毒梭菌、河豚毒素、有机磷：神经毒素 河豚毒素发病迅速，初期胃肠道，很快出现神经系统症状，言语不清、瞳孔放大，血压体温下降 有机磷中毒：通过消化道、呼吸道和皮肤进入体内，毒性作用主要是与生物体内胆碱酯酶结合，引起胆碱能神经高度兴奋，轻者头晕恶心、视力模糊，重者出现瞳孔缩小、呼吸困难 瘦肉精中毒：头晕心慌、心悸、心动过度，肌肉震颤，代谢紊乱，低血钾，外周血白细胞降低等 毒蔁中毒包括胃肠炎、神经精神、溶血性、脏器损伤型（毒性最强，毒肽类和毒伞肽类，肝肾心脑损伤）、日光皮炎型，无消化道型 亚硝酸盐中毒：出现紫绀（肠源性紫绀）、全身组织缺氧表现，化学中毒 来源：腌制、制罐动植物、发色剂防腐剂、啤酒、硝酸盐施肥、食物霉变、发酵食品、酱油、油煎咸肉 升高：植物生长干旱；不恰当环境储存；腌制；微生物污染 N-亚硝基化合物：通过呼吸道、消化道、皮下或肌肉注射或皮肤接触诱发肿瘤，常见肝癌 前体物：N-亚硝化剂（硝酸盐、亚硝酸盐及其他氮氧化物，卤素离子或硫氰酸盐产生的复合物）和可亚硝化的含氮有机化合物（胺、氨基酸、多肽、月尿，月尿烷、呱啶、酰胺等） 阻断亚硝胺合成：维C、A、E、大蒜及大蒜素、茶叶、猕猴桃、沙棘果汁 硝铵在酸性环境下不稳定，容易乙醇 屠宰后的肉经过“后熟产酸”处理可以杀死口蹄疫病毒，经过僵直和后熟的肉算新鲜肉 沙门菌属：潜伏期5-18h，急性腹泻、恶心呕吐头痛发热，体温38-39°，病程1-3d，中毒食物以动物性为主，其次为豆制品和凉拌菜 酸价：植物油≤3，动物有≤2.5，食用油脂制品≤1，植物油煎炸过程中≤5 K值：≤20新鲜，≥40腐败，还可以用挥发性碱基总氮、二甲胺与三甲胺(干鱼虾类)判断鱼肉类腐败变质的化学指标 物理指标：食品浸出物量、浸出液电导度、折光率、冰点下降、黏度上升及PH 细菌污染指标：菌落总数、大肠杆菌、肠球菌。霉菌菌相评价霉菌污染指标 菌落总数卫生学意义：判断食品清洁状态和预测食品耐保藏性的标志 可以通过生物富集作用使水生动物体内毒性成分增加的：六六六、DDT（有机氯农药）；甲基汞（有机汞，神经毒素，毒性急亚慢性，致畸、胚胎毒性） 有机磷农药：敌敌畏、敌百虫、乐果、马拉硫磷等 夏秋食物中毒多发：沙门菌、葡萄球肠菌 春季：河豚 冬春多发：肉毒梭菌 真菌毒素中毒：赤酶病麦、霉变甘蔗 食物中毒：副溶血弧菌 食物腐败变质指标：感官、物理、化学、微生物 人畜共传染：囊虫病、炭疽、鼻疽、旋毛虫病、口蹄疫、布氏杆菌。有些牲畜病例如猪瘟、猪出血性败血症不感染，但是牲畜感染伴有沙门氏菌继发感染，食入引起沙门氏中毒 猪肉常见寄生虫：旋毛虫、囊虫、猪带涤虫 粮豆类主要卫生问题：霉菌和霉菌毒素；农药；有毒有害物质（工业废水等）；仓储害虫；无机夹杂物和有毒种子污染（麦角、毒麦、槐子、卖仙翁子、苍耳子、毛果洋茉莉子、曼陀罗子）；掺伪 蛋白质、维C、含硫氨基酸、Fe减少铅、Zn减少铬对金属毒物的吸收和毒性有影响 我国食用最多的农药：除草剂、杀虫剂、杀菌剂 单端孢霉烯族类化合物共同特点：有较强细胞毒性、免疫抑制作用、致畸作用，部分有致癌作用 食盐分类 生产：精制盐、粉碎洗涤盐、日晒盐 用途：加碘盐、多品种盐 资源：海盐、湖、井矿盐 硒、锌、铁、钙强化盐 酱油分类 食用方法：烹调酱油、餐桌酱油 生产工艺：酿造、配制酱油 食醋不应存放在金属、不耐酸的塑料、搪瓷、陶瓷容器 鲜鸡蛋存放：1-5°，85-90%湿度 膳食调查与评价 膳食调查常用方法：称重、24h、记账、化学分析、询问法、食物频次法 膳食调查方法选择依据调查目的、人群、对结果的精确性要求、经费以及研究时间长短缺点 24h回顾法是通过访谈的形式收集膳食信息的一种回顾性膳食调查方法，最常用的一种方法。 大型和小型都可以用，个体也可能用24h 面对面询问，使用开放式表格或事先编制好的调查表通过电话、录音机等进行询问 记账法的基础是膳食账目，需要要求伙食账目完整，数据可靠，适用于幼儿园、中小学或部队等集体单位。对于家庭，一般没有食物消费账目可查，但也可以用 缺点：难以分析个体膳食摄入情况 单纯记账一般不包括调味料，和称重一起记录，称重记账也不能用于个体分析 膳食史法 优点：可以进行具有代表性的膳食模式调查，样本量大、费用低、使用人力少，不影响调查对象的膳食习惯和进餐方式 抽象的方法，需要专家指导，调查员要求更高 膳食调查目的：了解一定时期内的人群膳食摄入情况及人们的膳食结构和饮食习惯 全国性营养调查：1959，1982，2002，2010-2013，2015-2017，共计6次，使用称重记账法 膳食报告主体内容 居民摄入食物情况 居民膳食能量和主要营养素摄入情况 居民能量、蛋白质、脂肪来源 居民膳食结构状况和膳食指南相比–膳食评价 膳食结构评价依据：平衡膳食宝塔 将24h膳食调查结果将食物按9类分类 能量食物来源（6类 谷类及其制品 豆类 薯类 动物类 纯热能（植物油、动物油、酒类、淀粉、糖 其他 膳食营养素摄入量评价：中国居民膳食营养素参考摄入值 标准人：18-29岁65kg，轻体力劳动成年男 数据库结构： 原始数据：用户加工对象 概念数据层:数据库整体逻辑表示，指出了每个数据的逻辑定义及数据的逻辑联系，存储数据的集合。所涉及的是数据库所有对象的逻辑关系，而不是物理情况模式数据库管理员概念下的数据库 逻辑数据层：用户看到，表示一个或一些特定用户使用的数据集合，逻辑记录的集合 数据库特点 数据共享 减少数据冗余度 数据独立性 集中控制 一致性和可维护性：安全控制、完整性控制、并发控制、故障的发现与恢复 数据库作用 便于档案管理 进一步膳食分析 数据库变量（5个 调查对象编码：ID，至少2位 食物编码：D1，6位 食物质量：D2，3位 进餐时间：D3，1位 进餐地点：D4，1位 食物编码：6位 前2位：类别编码 第3位：亚类编码 后3位：在亚类中的排列序号 标准人日&#x3D;标准人系数 * 人日数 人体营养状况与测定 标准量床测定3岁以下，2岁以下身长，2岁以上身高 体重误差＜身长测量误差，身长受遗传因素控制，后天因素影响需要有一个长期过程才能体现 上臂：上肢从肩关节到肘关节，上臂肌肉前群（肱二头肌、橼肱肌、肱肌）和后群（肱三头肌 皮褶厚度测量：肩胛下角、肱三头肌、脐旁 意义：衡量个体营养状况和肥胖程度的较好指标；反映人体皮下脂肪含量和分布情况，与全身脂肪有一定线性关系； 肥胖：男：1040，女性：2050 纵向测量指标反映：疾病、长期营养、不良环境因素 头围坐位或仰卧位，胸围仰卧位 检查粪便的致病菌时应尽快送检：10min以内 收集应在干净的广口容器中；有蜡纸外包装和紧密封口的250ml纸盒；有盖的塑料、玻璃容器；棉签和 粪便保存措施：（固寄 冷盖 培病 硫氮 矿冻 标记物：粪便标记物（如卡红等 固定保存：寄生虫及虫卵 冷藏保存：有盖玻璃容器 运送培养基保存：致病菌 0.05mlo&#x2F;L硫酸：氮平衡实验 冷冻：矿物质代谢 血清和血浆区别：血浆有纤维蛋白原，血清没有 血液抗凝剂：草酸盐、枸橼酸盐、EDTA钠盐、肝素 营养状况调查：收集3天20g粪便 收集24h尿液：500ml收集瓶；承装2L以上容器；冰箱和防腐剂 尿液标本及时送检，否则细菌繁殖、蛋白质变形、细胞溶解等 营养咨询与教育 60°以上算热处理，但常用热处理的温度是100°，也是习惯认为食物生熟的界限温度。100-121°属于高温杀菌 煎炸炒相比，炒比较好，红烧、清炖也会导致水溶性维生素和矿物质溶于汤内 冷藏0°左右，鲜鱼和鲜奶可以保存1-2d，蛋保存数月，鲜肉1-2周 加热能预防：沙门氏、副溶血、四季豆 加热不能预防：葡萄球菌肠毒素（葡萄球菌不耐热，但是肠毒素耐热） 身体活动水平取决于：身体活动量，基础代谢 身体活动量：个体活动强度、时间、频率、该活动在计划历时长度 燕麦、大麦、水果和某些豆类含可溶性膳食纤维 大肠菌群：37°发酵乳糖产酸产气、需氧或兼性厌氧、革兰氏阴性的无芽孢杆菌，包括：阔埃希菌属、柠檬酸杆菌属、肠杆菌属、克雷伯菌属 铅中毒对机体造血、神经、肾脏损伤尤为明显 主要是慢性毒性，贫血、神经衰弱，神经炎和消化道系统症状，肌无力、肌关节疼痛，口有金属味。慢性铅中毒还会导致凝血过程变长，并可能损害免疫系统。儿童对铅敏感，过量会影响生长发育，导致智力低下 医学科普文章基本要求 五个：科学、思想（文章反映科学、适合读者对象阅读；体现位读者健康服务；积极向上；体现位社会发展服务）、艺术、通俗、实用 三个基本：科学、思想、艺术（必须坚持的 细菌性中毒预防措施 防止污染 控制繁殖，低温 食用前彻底加热 抽样误差大小主要取决于 抽样量：抽样量越大，误差越小 随机性：越随机，误差越小 均一性：均一性越好，误差越小 影响食品被容器和包装材料污染的因素：食品性质、温度、时间、包装材料的理化性质和完整性 非语言传播：时间、空间、时空、动态、类语言 鉴别油脂和高含脂肪食品腐败：酸价、过氧化物值 塑料、合成橡胶、化纤等食品容器的安全性来源 未聚合的游离单体和聚合不充分的低聚合物 添加剂或加工助剂残留 低分子降解产物 食品的大肠菌数最近似数可作为被粪便污染的程度，并可作为肠道致病菌污染食品的指示菌 膳食指导合评价 学龄前儿童碳水特点：不宜食用过多糖和甜食；以复杂碳水谷类为主；适量膳食纤维；过量容易胀气 膳食纤维来源：谷类、豆类、蔬果 青少年生长发育所占总能量的20-30% 饱和脂肪酸不超过总脂肪的1&#x2F;3 n-6：n-3&#x3D;（4-6）：1 饱和：单不饱和：多不饱和&#x3D;1：1：1 老年人、儿童期：三餐两点 午后点心应该低能量，以避免影响晚饭 儿童食谱制定中，蛋白质和脂肪过高是最易产生的问题 生长发育期的儿童应注意优质蛋白质的摄入和足够的能量来保证蛋白质在体内被有效利用，Ca、Zn和维A对生长发育很重要，多吃奶、海产品和肝脏 农村儿童植物食物多，动物食物缺乏，易发生缺铁性贫血、维A缺乏、Zn缺乏 营养配餐中需要注意： 保证营养平衡 食物多样，新鲜卫生 三餐分配合理 注意饭菜适口性 兼顾经济条件，权衡食物营养鱼价格 不需要考虑温度和天气 维C的典型缺乏症已经不常见，但是亚临床缺乏常见，其会导致免疫力降低，患慢性病的概率增加 Ca良好来源：奶和奶制品、酸奶、小鱼小虾及一些坚果类，绿色蔬菜、豆类 B1主要存在：动物内脏、肉类、豆类、粗加工粮谷类 B2：动物性、动物内脏；蛋类、奶类；大豆和绿叶蔬菜 11-24岁男学生比成人轻体力需要更多：Ca、Fe、蛋白质、能量 食谱营养评价目的 是否满足其营养需求 发现某些营养素的缺乏 及时进行调整与纠正 食谱营养评价内容：参照食物成分表初步核酸食谱提供能量和各种营养素的含量，进行餐次分析、能量来源分析、食物来源分析等内容 食品营养评价 高筋小麦粉：蛋白质（干基）≥12.2%，低筋≤10% 脂肪可以用粗脂肪和总脂肪表示，在营养标签上都可标示为脂肪 粗脂肪：一大类不溶于水而溶于有机溶剂的化合物总称，包括甘油三酯、磷脂、固醇、色素等 总脂肪：可以通过测定脂肪酸并折算脂肪酸甘油三酯的总和来获得脂肪总量 牛奶中乳糖&#x2F;碳水含量：4.5-5.5，蛋白质和脂肪2.5-3.5，钙110mg 全脂乳脂肪≥3.1，蛋白质≥2.9，非脂乳固体≥8.1 灭菌乳质量检验项目包括：蛋白质和脂肪、非脂乳固体、酸度和杂质、硝酸盐和亚硝酸盐、微生物和黄曲霉素、食品添加剂和营养强化剂、 不同类型的产品标准要求项目不同，大致包括：感官、微生物、卫生指标和营养指标 营养声称：一个食物营养特性的建议、暗示或说明 含量声称 比较声称 减少声称： 减少能量：25% 低能量：液体≤80，固体≤170 低脂肪：≤1 用于计算营养标签标示值的数据，至少有6-12次不同批次送检结果才比较稳定有说服力。且在不断送检过程中，所有检测数据要全部纳入到本企业产品营养成分数据库中，以便于观察产品质量变化或调整标签数据 GI：碳水质量对血糖影响 蛋白质和脂肪降低，GI升高 进食50g可利用碳水化合物 标准参考物：葡萄糖、白面包 GL：碳水数量对血糖的影响 与其他营养素不同，脂肪酸比例更适用于评价一天膳食结构中而非一种食物脂肪中的营养价值 食物营养价值：食物中所含能量和营养素满足人体需要的程度 营养素种类是否齐全 营养素数量和比例是否合理 是否易于被人体消化吸收和利用 食品产品分析：感官、评价、卫生学检验（微生物和污染物）、营养成分分析、功效成分分析、添加剂分析 食品营养价值分析：感官、评价和营养成分分析 INQ（营养质量指数）最大的特点是可以按照不同人群的营养需要分别进行计算，同一个食物，对一组人群可能是合格的，而对另一人群可能就是不合格的 蛋白质营养评价：氨基酸评分、氨基酸评分模式、蛋白质功效比、生物价、净利用率、PDCASS对氨基酸数量及比例及蛋白质的营养价值评价质量评价 评价蛋白质利用率：蛋白质功效比、生物价、净利用率、其他（相对蛋白质值、净蛋白质比值、氮平衡指数 蛋白质分类 化学组成：单纯、组合 形状：纤维类、球状等 氨基酸比例：完全、不完全、半完全蛋白质 碳水的消化吸收会影响胰岛素、大肠发酵、便秘、血糖、肠道健康等，不影响脑垂体分泌 植物油必须脂肪酸含量较高，禽类高于畜类，内脏高于肌肉，瘦肉高于肥肉 不饱和脂肪和短链脂肪含量高的脂肪熔点越低，越容易消化 脂肪酸比例适宜包括 饱和脂肪酸、单不饱和脂肪、多不饱和脂肪酸比例适宜，1：1：1 n-6：n-3多不饱和脂肪酸比例 反式脂肪酸的键角＜顺式脂肪酸，熔点高于顺式 熔点低于体温消化率97-98%，高于的消化率90% 评价脂肪或油脂优劣，包括风味、提供必需氨基酸、胆固醇、植物固醇、反式脂肪酸、维E含量等 资料按载体形式分为：印刷品（纸质）、录像带、光盘、PPT四类 纸质优点：编制容易，成本低，制作周期短，发行快；阅读容易，适用面光；复制容易，易于借鉴，接受者携带方便；传播容易，形象固体；灵活多样 纸质缺点：缺乏动感，缺少新鲜感；过于普遍，得不到重视；宣传人员携带不便 录像带劣势：制作成本高、使用受限、文字资料少、艺术性较强，需要专业人员 光盘优点：内容丰富，信息量多；可操作性强；复制容易，携带方便；形象生动。制作不复杂 市场需求调查作用 为市场预测提供客观且具体的资料依据 为企业管理部门提供决策依据 有助于吸收国内外先进技术和经验 增强企业竞争力和生存能力 加速产品更新换代，提高产品质量，提高人员技术水平 市场调查报告：标题、目录、概述、正文、结论与建议、附录等 概述部门简明说明调查目的，介绍调查对象和调查内容、简要介绍研究方法、写明对原始资料进行选择、评价等原则 社区营养管理与干预 调查表编制基本原则：相关、客观、适宜、全面、设计合理性、可比性 信息收集方法：二手资料、实验、访问法 社区健康调查资料分为：数值变量、分类变量、等级资料 调查具体方法：观察法、访谈法、自填问卷、专题小组讨论 发病率：一定时期内某特定人群中某种疾病新出现频率 患病率：一定使其内新旧病例数占的比例 病死率：一定时期内某病全部患者因该病死亡的比例 罹患率：新病例发生频率 个人健康问题记录： 以问题为中心：基本资料、问题目录、问题描述、病情流程 易预防为导向：格式化的健康体检表针对不同年龄、性别进行的周期性健康检查的结果记录 个人健康档案基本资料 包括：人口学（年龄、性别等）、健康行为（运动、精神、膳食等）、生物学资料、临床资料 健康数据收集：利用现存资料（得到大量信息）、经常性工作记录（发现规律，有一定局限性）、社区调查（大规模的可以得到较为全面和可靠的信息）、健康筛查（采取必要防治对策和措施） 问题描述即 将问题表中的每一问题依照序号顺序逐一一SOAP（主观、客观、评估、计划） 资料存放：14-24°，湿度45-60% 项目评价是贯穿于干预始终，目的通过评价监测干预活动的进展情况和效果，进行信息反馈，以及及时调整计划，达到预期目标。 在设计营养干预方案时，应该包括项目评价方法和指标的设计 营养干预 实验类型：随机对照、类实验 策略：政策环境、营养教育、行为、食物营养干预、控油限盐干预 营养强化：是营养干预、营养宣教、预防全民某些营养缺乏吧的主要措施之一 营养强化剂常为必需氨基酸、维生素、矿物质类，常用载体为谷类及其制品、奶制品、饮料、豆制品、调味品和儿童食品 营养补充剂：以补充维生素、矿物质等营养物质保健功能而不是以提高能力为目的的产品 目的：补充膳食供给不足；预防营养缺乏；降低某些慢性病退行性疾病的危险性 直条图用于比较统计指标数值的大小和对比关系，各等宽直条间隔排布，直条高度标示统计指标的数值大小，例如表示不同性别高血压患病率 封闭式基本格式包括：填空、二项选择、排序、尺度、多项选择 玉米中色氨酸低 水的来源和排除每日维持2000ml，每日喝水1200ml，内生水300ml，食物1000ml 营养咨询与营养教育共同点：营养信息交流、知识提高、行为改变、态度改变、沟通技巧 模拟 国际和我国通用的能量单位是J，营养学上使用的能量单位是kcal或卡 矿物质和维生素主要集中在谷皮和糊粉层，维E主要集中在胚芽。粮食精细加工还会导致Ca、Fe、Zn的大量丢失，但不会导致维A、维B12丢失，因为维A主要在动物性食物 糊粉层的蛋白质、B族维生素、矿物质含量、脂肪比胚乳多 豆类B12少，但是发酵过后增加 婴幼儿缺乏维D会导致佝偻病、以钙磷代谢障碍和骨样组织钙化为特征，成人缺乏维D会使成熟骨矿化不全，表现为骨质疏松 《新馆肺炎疫情防护指导手册》发布“实行分餐制”：是用公筷公勺、提倡自助餐或分餐、减少点菜，厉行节约 2024全名营养周主体：奶豆添营养，少油更健康 人日数：被调查者用餐的天数，1个人24h为一个人日，习惯上只吃两餐或由于特殊情况每日多于或少于三餐也是一个人日。在膳食调查中不一定能收集到整个调查期间全部进餐次数，应该根据餐次比折算 疲倦、食欲不振、便秘、工作能力下降、指、趾有麻木感，肌肉酸痛、腓肠肌压痛明显，腱反射亢进：B1缺乏，孕妇缺乏导致婴儿脚气病 引起需要量增加或消耗过多：长期发烧、高温作业、甲亢、妊娠哺乳、甲状腺功能亢进、重体力劳动等导致需要量增加；糖尿病、尿崩症及使用利尿剂导致排出增大 潜伏期最短2h，最长11.5h，发病很快停止，恶心呕吐3-4次，最多达诗词，部分腹痛，2人轻度腹泻，不发烧或有低烧：葡萄球菌肠毒素食物中毒 起病急，潜伏期短，多发夏秋 主要为乳类及其制品，蛋类，熟肉制品；乳制品的冷冻，个别也含有淀粉类 肉毒梭菌毒素：家庭自制的发酵豆、谷类制品；肉类和罐头 副溶血弧菌：主要海产品；咸菜，熟肉类，禽肉类，蛋类 不耐热， 沙门氏菌：动物性多见 副溶血性弧菌：嗜盐性，革兰阴性，兼性厌氧。沿海地区常见中毒 恶心、呕吐、腹泻水样便，黏液便和黏血便、发热、头痛、多汗、口渴，失水过多引起虚脱伴有血压下降 细菌性中毒全年皆可发生，夏秋较多，主要是动物性食品，病程短，恢复快，愈后良好 条件致病菌：变形杆菌、葡萄球菌、链球菌、韦氏梭菌、蜡样芽孢杆菌等 生化指标 全血谷胱甘肽还原酶活力系数：核黄素营养状况指标 红细胞转酮醇酶活力系数：维B1，亚硫酸会破坏 红细胞转氨酶活力：维B6（作为辅酶在氨基酸代谢起重要作用，不足会导致色氨酸代谢受干扰，尿中黄尿酸、全尿酸等排除增加。 酪氨酸、组氨酸及色氨酸等脱羟基作用，中枢神经中谷氨酸转化为γ-氨基丁酸，半胱氨酸转为牛磺酸，色氨酸代谢为烟酸都需要B6参与 动物性、豆类富含；其次蛋类、蔬果；乳类含量低 红细胞溶血实验：维E（保持细胞膜完整性，缺乏会导致溶血性贫血 消化腺：分泌消化液的器官，属于外分泌腺，主要有唾液腺、胰、肝及消化管壁内的小腺体（胃腺、肠腺等）等 最大的消化腺是肝脏，肝脏基本单位是肝小叶 乳母蛋白质摄入量+25g，碘UL500ug 孕中期蛋白质+15；孕晚期蛋白质+30，钙摄入量800 乳母能量摄入很低时，泌乳量会降低正常的40-50% I：RNI:18+120ug，孕期230ug；UL：600ug。孕期500ug K：AI：2000mg，PI-NCD：3600mg 维A：UL3000mgRAE&#x2F;d 膳食纤维：25-30g 优质蛋白质占膳食蛋白质的30-50% 亚硫酸盐多用于蜜饯、干果等食品和处理保藏水果原料及其半成品，不适用于肉、鱼等动物性食品，因为其残留气味会掩盖鱼、肉腐败变质的气味并且会破坏维B1 膳食宝塔：水产每周至少两次，每天1个鸡蛋，动物性食物一天120-200g，大豆坚果合计25-35 25°下，牛奶抑菌（溶菌酶）最多保持6h；0°保持48h 全鸡鸡蛋蛋白质12%，蛋黄胆固醇很高 蛋清中含卵清蛋白、卵伴清蛋白、卵黏蛋白、卵胶粘蛋白、卵类粘蛋白、卵球蛋白等 蛋黄蛋白质通常指鱼脂类相结合的脂蛋白脂，主要有低密度脂蛋白65%，高密度脂蛋白16%，卵黄高磷脂蛋白，卵黄球蛋白，蛋黄酥维生素B2结合蛋白。蛋黄中的脂肪几乎全部以蛋白质结合的良好乳化形式存在，因而消化率高。蛋黄脂肪30-33%，中性占62%-65%，磷脂占30-33%，固醇占4-5%。卵磷脂可以降低血胆固醇的作用 膳食纤维主要作用：吸水、黏滞作用、阳离子交换（在胃内结合无机盐等形成膳食纤维复合物，影响其吸收）、细菌发酵、结合有机化合物（结合胆酸合成胆固醇） 毒蔁中毒：胃肠炎（不是肠胃炎）、神经精神、日光皮炎、脏器损伤、溶血性 混合系数&#x3D;全家标准人日数&#x2F;全家总人日数 油脂 饱和脂肪酸：猪肉、棕榈油、椰子油等 单不饱和脂肪酸：橄榄油、茶油、菜籽油 多不饱和脂肪酸：亚麻籽油、核桃油、葡萄籽油、葵花子油、玉米油、鱼油 碳水包括：单糖（葡萄糖、半乳糖、果糖等）、寡糖（水苏糖、棉子糖、低聚糖、麦芽糊精等）、多糖（淀粉、非淀粉多糖） 维C酸性稳定，但在生物类黄酮的水果中较为稳定（刺梨、枣） 维C缺乏症状：面无头发脱落、关节肿胀。面色苍白、倦怠、食欲下降、抑郁等；儿童易激惹，体重不增，伴有低热、呕吐腹泻；皮肤瘀点，毛囊周围角化和出血，齿龈常肿胀出血，消化道内出血、血尿、关节腔出血甚至颅内出血；长期出血＋维C摄入不足导致Fe吸收下降导致贫血；婴儿早期四肢疼痛呈蛙状，肋骨串珠、软骨交界处串珠，坏血病串珠（与佝偻病不同，坏血病串珠部位可出现尖锐突起，内侧可扪及凹陷）；水肿、黄疸、发热等；泪腺、唾液腺、汗腺等分泌功能减退甚至丧失；伤口愈合不良，免疫功能受损，易发生感染 B2常见缺乏症状：虚弱、疲惫、口痛、触痛、眼部发烧、眼痒，唇炎、口角炎、舌炎、脂溢性皮炎，阴囊炎、阴唇炎。角膜血管增生、贫血和脑功能失调，影响生长发育。妊娠期缺乏导致胎儿骨骼畸形 合理的膳食模式：地中海、日本、东方健康膳食模式 菌落总数卫生学意义：食品清洁状态（大肠杆菌）；预测食品鲜度、保藏性、致病性 食谱制定常用方法：食物交换、(营养)计算法 长期酗酒导致：维A、B1、B2、C缺乏，不会导致蛋白质缺乏 食物成分表中没有的食物，得到其营养物的方法：实际测定；相似食物替代；找相关文献报道或国外食物成分；预包装食品查看营养标签 肱三头肌皮褶提起点：肩峰与尺骨鹰嘴链接中点上方2cm，皮褶计是在中点下方1cm，连续3次 肱二头肌皮褶提起点：肱二头肌肌腹中点（肩峰与尺骨鹰嘴链接中点上方1cm） 营养教育是有计划、有组织、有系统和有评价的干预活动，需要各级政府、有关部门及全社会共同参与 营养教育项目：先了解教育对象，了解需要的营养健康信息；对教育目标人群进行调查和评估，了解分析主要营养和健康问题、需求；了解相关疾病； 营养教育活动对象：个体、政府和传媒、组织机构、社区 学龄前儿童：3-4脂肪35%，4+20-30%；3-4蛋白质8-20%，4+蛋白质10-20%，65+15-20% 学龄前每天至少15-20g大豆制品，提供约6-10g优质蛋白 调查问题设计要点：相关性、客观、适宜、设计合理、全面、可比；问题应该通俗易懂，语言简洁，问题内容具体清晰、含义单一，避免双重或多重含义；在正式调查前需要经过测试和修订（预调查；不要求问题简单，有针对性和未知问题 上消化道：口腔、咽、食管、胃、十二指肠（小肠部分） 下消化道：空肠、回肠（小肠部门）、大肠（盲肠、结肠、直肠 1ug视黄醇当量&#x3D;1ug视黄醇&#x2F;6ugβ-胡萝卜素 1ug维A&#x3D;0.3g视黄醇 1ug胡萝卜素&#x3D;0.167ug视黄醇&#x3D;0.556维A 1视黄醇活性当量&#x3D;1ug全反式视黄醇&#x3D;2ug溶于油剂的纯品全反式β-胡萝卜素&#x3D;12ug膳食全反式β-胡萝卜素&#x3D;24ug其他膳食维A原类胡萝卜素 赤霉病麦：加热不被破坏，重度步态不稳，似醉酒，也称醉谷病 小麦、大麦、燕麦等、玉米、稻谷 脱氧雪腐镰刀菌烯醇，又称呕吐毒素，主要由谷禾镰刀菌、黄色镰刀菌和雪腐镰刀菌产生，是赤霉病麦的主要病原物质 膳食不平衡是慢性病发生的主要危险因素之一，表现为：高油高盐、含糖饮料；全谷物、深色蔬菜、水果、奶类、鱼虾类和大豆摄入不足；喝酒 常量元素（Ca、Mg、Na、K、S、氯、P）；必须微量元素（Fe、I、Zn、硒、Cu、钴、铬、钼）；可能必须微量（锰、圭、镍、硼、钒） 铬：加强胰岛素作用，预防动脉粥样硬化，促进蛋白质代谢和生长发育 钴：组成B12成分，B12也叫钴胺素 大豆富含不饱和脂肪酸，是高血压、动脉粥样硬化的理想食物 硒：良好来源包括海洋食物和动物肝肾及肉，谷类依据土壤 妊娠期体重范围增长 孕期BMI≤18.5，增加11-16kg；18.5 - 23.9：增加8-14kg；26-27.9：7-11kg；≥28：5-9kg 炭疽病处理措施：6h内采取，2m挖坑深埋，加生石灰，不能屠宰和解体，不能放血；同群牲畜立即隔离，并进行疫苗和免疫血清注射；屠宰过程中发现立马停下，可疑部位送检，确认后立即火化；人员衣服、饲养间、屠宰间消毒 佝偻病患者：血清钙磷乘积＞30，血清25-（OH）D3几乎为零或下降；碱性磷酸酶＞28 1g糖原合成需要0.6nmol钾离子，1g氮合成蛋白质需要3nmol钾离子 优质酱油：总氮1.3+，多在1.3-1.8中。氨基酸态氮≥0.7%，谷氨酸含量最高，其次天冬氨酸，这两个有鲜味 胎儿期的Fe储存一般可以满足4-6个月的胎儿需要 保健功能的功效成分分类： 蛋白质氨基酸：牛磺酸、大豆多肽、超氧化物歧化酶等 油脂：磷脂、功能性脂肪酸、植物缁醇、二十八烷醇、角鲨烷等 碳水：膳食纤维、低聚糖、植物多糖和动物多糖等 具有保健功能的微量营养素：硒、维E、Ca、Zn、其他二价金属元素等 功能性植物化学物：膳食纤维、植物多糖、植物缁醇、酚类化合物、有机硫化物等 活性物质：益生菌等 学龄前儿童维A补充：动物肝脏、牛奶、蛋黄、医生指导下补充鱼肝油、黄绿色和深绿色蔬菜 学龄前常见营养问题：缺铁性贫血、维A缺乏，佝偻病是婴幼儿期容易出现 食品分析计划制定 工作准备：了解分析目的和目标；查询配方和原料档案；选择适合的产品标准和营养成分分析检测标准；确定检查项目和方法；预算产品营养成分 工作程序：根据面包卫生标准，决定感官和理化标准；确定营养检测项目；确定送检数量；落实实验室；撰写分析计划（产品名称、目的、数量、批次、采购地点、分析实验室资质、采用的分析方法、经费核算及完成时间）和实施方案 24h回顾法时，估计食物重量可以用食物模型、家用量具或食物图谱进行计算 调查表内容：食物名称、原料名称、原料编码、质量、进餐时间地点 社区调查方法：观察法、访谈法、小组讨论、自填问卷法 成年人基础代谢占45-70%，体力活动25-50%，食物特殊动力占10% 大脑主要能量物质：碳水，碳水也是维持神经系统和心脏正常供能、增强耐力、提高工作效率有意义 3-硝基丙酸：甘蔗霉变的节菱孢霉产生 含淀粉最少的是大豆，在34%左右，其他的例如绿豆、豌豆、赤小豆等在60% 孕妇生理学贫血主要是因为红细胞的数量增加速度＜血容量曾 血浆（近期C摄入情况）和白细胞（维C储存水平）可以测定维C含量 胃步消化吸收蛋白质等大分子物质，主要功能 储存食物，食物进行机械性消化，大变小，与胃液混合形成食糜 胃液是胃腺各种细胞分泌的混合物，其可消化食物 胃蛋白酶从无活性变为有活性，其水解蛋白质，产物是多肽和氨基酸 Ca摄入过多: 奶碱综合症（包括高钙血症、碱中毒和肾功能障碍）；肾结石；干扰其他物质吸收和利用（Fe、Zn、Mg、P等相互作用） 脱水 高渗：水流少，轻度（2-4%）口渴、尿少、尿比重增加及工作效率降低；中度（4-8%）皮肤干燥、口舌干裂，声音嘶哑及全身软弱；重度（＞8%）高热、烦躁、精神恍惚；脱水10%以上，危及生命 低渗：电解质流失，循环血量下降，血浆蛋白质浓度升高，细胞外液低渗，可引起脑细胞水肿，肌肉细胞内水过多导致肌肉痉挛，早期多尿，晚期少甚至闭尿，尿比重降低 等渗：渗透压不变，细胞外液减少，内液一般不减少，口渴和尿少表现 D3：25-（OH）D3在血液主要形式；活性形式1，25-（OH）2D3 评价婴幼儿食品蛋白质质量指标：蛋白质功效比 婴幼儿体重主要反映骨骼、肌肉、内脏、体质和水分等情况，体重测量1岁以下取卧位，1-3岁取坐位 可以依据实际情况进行餐次和能量比例调整人群：3-6岁，生病和康复期病人等 发生贫血时，可能缺乏的营养素：蛋白质、维C、Fe、维B6、维B12、叶酸 测量头围可以用坐位或仰卧位，胸围取坐位 缺铁性贫血判断：获得相关信息；一般检查身高体重等；观察体型；观察外貌、表情、活动、精神状态等；检查口唇、甲床、黏膜是否苍白；做运动，如蹲站，是否出现头晕心慌等；实验室检查；询问病史；膳食调整建议 正式调查前： 设计调查表，确定调查变量等 试用或者预调查 调查表检验：客观检验法和主观评价法 入户调查前，提前告知等 客观检验法：降问卷初稿打印若干份，在正式调查总体中抽取一个小样本，用这些问卷初稿进行调查，最后进行检查和分析试调查结果，需要注意：回收了吧；有效回收情况；填写错误；填答不全","categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"}]}],"categories":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/categories/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/categories/axios-%E6%BA%90%E7%A0%81/"},{"name":"JS","slug":"JS","permalink":"https://1578536879.github.io/categories/JS/"},{"name":"业务场景","slug":"业务场景","permalink":"https://1578536879.github.io/categories/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"},{"name":"前端","slug":"前端","permalink":"https://1578536879.github.io/categories/%E5%89%8D%E7%AB%AF/"},{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/categories/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"},{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"js","slug":"js","permalink":"https://1578536879.github.io/categories/js/"},{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/categories/vue/"},{"name":"小程序","slug":"小程序","permalink":"https://1578536879.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"webAssembly","slug":"webAssembly","permalink":"https://1578536879.github.io/categories/webAssembly/"},{"name":"PWA","slug":"PWA","permalink":"https://1578536879.github.io/categories/PWA/"},{"name":"HTML","slug":"HTML","permalink":"https://1578536879.github.io/categories/HTML/"},{"name":"css","slug":"css","permalink":"https://1578536879.github.io/categories/css/"},{"name":"webwork","slug":"webwork","permalink":"https://1578536879.github.io/categories/webwork/"},{"name":"webpack","slug":"webpack","permalink":"https://1578536879.github.io/categories/webpack/"},{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/categories/Web3/"},{"name":"web3","slug":"web3","permalink":"https://1578536879.github.io/categories/web3/"},{"name":"http","slug":"http","permalink":"https://1578536879.github.io/categories/http/"}],"tags":[{"name":"营养学","slug":"营养学","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6/"},{"name":"营养学基础","slug":"营养学基础","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"},{"name":"axios 源码","slug":"axios-源码","permalink":"https://1578536879.github.io/tags/axios-%E6%BA%90%E7%A0%81/"},{"name":"js","slug":"js","permalink":"https://1578536879.github.io/tags/js/"},{"name":"业务场景","slug":"业务场景","permalink":"https://1578536879.github.io/tags/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"},{"name":"前端","slug":"前端","permalink":"https://1578536879.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"浏览器","slug":"浏览器","permalink":"https://1578536879.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"浏览器 Performance Chrome","slug":"浏览器-Performance-Chrome","permalink":"https://1578536879.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8-Performance-Chrome/"},{"name":"css","slug":"css","permalink":"https://1578536879.github.io/tags/css/"},{"name":"vue","slug":"vue","permalink":"https://1578536879.github.io/tags/vue/"},{"name":"webwork","slug":"webwork","permalink":"https://1578536879.github.io/tags/webwork/"},{"name":"webpack","slug":"webpack","permalink":"https://1578536879.github.io/tags/webpack/"},{"name":"Web3","slug":"Web3","permalink":"https://1578536879.github.io/tags/Web3/"},{"name":"web3","slug":"web3","permalink":"https://1578536879.github.io/tags/web3/"},{"name":"webAssembly","slug":"webAssembly","permalink":"https://1578536879.github.io/tags/webAssembly/"},{"name":"额外内容","slug":"额外内容","permalink":"https://1578536879.github.io/tags/%E9%A2%9D%E5%A4%96%E5%86%85%E5%AE%B9/"},{"name":"http","slug":"http","permalink":"https://1578536879.github.io/tags/http/"},{"name":"console","slug":"console","permalink":"https://1578536879.github.io/tags/console/"},{"name":"chrome","slug":"chrome","permalink":"https://1578536879.github.io/tags/chrome/"},{"name":"DRIs","slug":"DRIs","permalink":"https://1578536879.github.io/tags/DRIs/"},{"name":"医学基础","slug":"医学基础","permalink":"https://1578536879.github.io/tags/%E5%8C%BB%E5%AD%A6%E5%9F%BA%E7%A1%80/"},{"name":"计算公式","slug":"计算公式","permalink":"https://1578536879.github.io/tags/%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/"},{"name":"人群营养","slug":"人群营养","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E7%BE%A4%E8%90%A5%E5%85%BB/"},{"name":"人体营养状况评定","slug":"人体营养状况评定","permalink":"https://1578536879.github.io/tags/%E4%BA%BA%E4%BD%93%E8%90%A5%E5%85%BB%E7%8A%B6%E5%86%B5%E8%AF%84%E5%AE%9A/"},{"name":"膳食调查","slug":"膳食调查","permalink":"https://1578536879.github.io/tags/%E8%86%B3%E9%A3%9F%E8%B0%83%E6%9F%A5/"},{"name":"食品安全","slug":"食品安全","permalink":"https://1578536879.github.io/tags/%E9%A3%9F%E5%93%81%E5%AE%89%E5%85%A8/"},{"name":"营养咨询与教育","slug":"营养咨询与教育","permalink":"https://1578536879.github.io/tags/%E8%90%A5%E5%85%BB%E5%92%A8%E8%AF%A2%E4%B8%8E%E6%95%99%E8%82%B2/"}]}